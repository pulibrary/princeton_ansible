---
# EE definition for deploying code
# to build this EE, run:
# `ansible-builder build -f deploy-ee.yml`

# builder schema version
version: 3

images:
  # build a new image based on this image
  base_image:
    name: registry.redhat.io/ansible-automation-platform-24/ee-supported-rhel8:1.0.0-543

dependencies:
  ansible_core:
    package_pip: ansible-core==2.15.7
  ansible_runner:
    package_pip: ansible-runner
  python_interpreter:
    python_path: "/usr/bin/python3"
  galaxy:
    # includes all collections used in the prancible repo
    # versions taken from the Ansible 8 inclusion list:
    # https://github.com/ansible-community/ansible-build-data/blob/main/8/ansible-8.7.0.yaml
    collections:
      - name: ansible.posix
        version: 1.5.4
      - name: ansible.utils
        version: 2.12.0
      - name: community.crypto
        version: 2.16.1
      - name: community.dns
        version: 2.6.4
      - name: community.general
        version: 7.5.2

  # python packages, stuff you install with 'pip install'
  python:
    - six
    - psutil

  # system packages, stuff you install with 'apt/yum/dnf install'
  # ansible-builder writes this list into the 'context/bindep.txt' file
  system:
    # - "@ruby:3.1"
    # - rubygems
    - automake
    - bzip2
    - curl
    - gcc
    - gdbm-devel
    - git
    - libffi-devel
    - make
    - ncurses-devel
    - openssl-devel
    - python3-dnf
    - python3-pip
    # - readline-devel
    - wget
    - zlib-devel
options:
  # default path is /usr/bin/dnf, which does not exist on the base image
  package_manager_path: /usr/bin/microdnf

# if you need to run more commands on the EE, use this section:
additional_build_steps:
  # items in the list of append_base steps are expressed
  # as containerfile directives
  # prepend_base:
    # - RUN /usr/bin/apt-get update
  prepend_final:
    # create the deploy user
    - USER root
    - RUN useradd -m -s /bin/bash deploy
    - RUN mkdir -m700 /home/deploy/.ssh/
    - RUN chown deploy:deploy /home/deploy/.ssh/
  append_final:
    # install ruby with rbenv
    - ENV HOME /home/deploy
    - ENV PATH "$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"
    - RUN wget -q https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-installer -O- | sh
    - RUN rbenv install 3.1.0
    - RUN rbenv global 3.1.0
    # install capistrano and dependencies
    - RUN gem install capistrano activesupport airbrussh capistrano-composer capistrano-passenger capistrano-rails capistrano-rails-console capistrano-yarn concurrent-ruby honeybadger i18n net-scp net-ssh rake sshkit whenever
  
# - RUN /usr/bin/python3 -m pip install --upgrade pip
