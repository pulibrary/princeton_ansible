#!/usr/bin/env sh
# Cross-shell Devbox init for Princeton Ansible
# Runs on every `devbox shell` entry. Avoids per-shell exports; env is set in devbox.json.
set -e

echo "Welcome to the Devbox shell!"
python --version 2>/dev/null || true
ruby --version 2>/dev/null || true
node --version 2>/dev/null || true
echo ""

# Create Python venv if missing
if [ ! -d ".venv" ]; then
  echo "Creating Python virtual environment..."
  python -m venv .venv
fi

# Install Python deps once per venv
if [ -f "requirements.txt" ] && [ ! -f ".venv/.requirements_installed" ]; then
  echo "Installing Python requirements (this may take a few minutes)..."
  ./.venv/bin/python -m pip install --upgrade pip
  ./.venv/bin/python -m pip install -r requirements.txt
  touch .venv/.requirements_installed
  echo "Python requirements installed."
fi

# Ensure lastpass-ansible is available in the Ruby virtenv
if ! command -v lastpass-ansible >/dev/null 2>&1; then
  echo "Installing lastpass-ansible gem..."
  gem install --no-document lastpass-ansible || true
fi

# Export vault password file ONLY when logged into LastPass
if command -v lpass >/dev/null 2>&1 && lpass status --quiet 2>/dev/null; then
  if command -v lastpass-ansible >/dev/null 2>&1; then
    export ANSIBLE_VAULT_PASSWORD_FILE="$(command -v lastpass-ansible)"
  fi
else
  echo "Note: Not logged into LastPass; skipping ANSIBLE_VAULT_PASSWORD_FILE export."
  echo "      Run: lpass login <your-netid@princeton.edu>"
fi

# Configure git hooks (idempotent)
if [ -d ".githooks" ]; then
  git config core.hooksPath .githooks || true
fi

# Basic sanity/info
if [ -x ".venv/bin/ansible" ]; then
  echo "Ansible: $(./.venv/bin/ansible --version | head -n1)"
else
  echo "Note: Ansible not yet present; run: devbox run update-deps"
fi

echo ""
echo "Environment hints:"
echo "  ANSIBLE_VAULT_PASSWORD_FILE: ${ANSIBLE_VAULT_PASSWORD_FILE:-<unset>}"
echo "  LPASS_AGENT_TIMEOUT: ${LPASS_AGENT_TIMEOUT:-(set via devbox.json)}"
echo ""
