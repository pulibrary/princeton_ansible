---
- name: System_ldap | install necessary packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - adcli
    - krb5-user
    - libnss-sss
    - libpam-sss
    - sssd
    - sssd-tools

- name: System_ldap | configure Kerberos
  ansible.builtin.blockinfile:
    path: /etc/krb5.conf
    mode: "0644"
    create: true
    block: |
      [logging]
        default = FILE:/var/log/krb5libs.log
        kdc = FILE:/var/log/krb5kdc.log
        admin_server = FILE:/var/log/kadmind.log

      [libdefaults]
        dns_lookup_realm = false
        dns_lookup_kdc = true
        ticket_lifetime = 24h
        renew_lifetime = 7d
        forwardable = true
        rdns = false
        default_realm = {{ ad_domain | upper }}
        default_ccache_name = KEYRING:persistent:%{uid}

      [realms]
        {{ ad_domain | upper }} = {
          kdc = {{ ad_domain_controller }}
          admin_server = {{ ad_domain_controller }}
        }

      [domain_realm]
        .{{ ad_domain | lower }} = {{ ad_domain | upper }}
        {{ ad_domain | lower }} = {{ ad_domain | upper }}

- name: System_ldap | create sssd.conf
  ansible.builtin.template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    mode: "0644"

- name: System_ldap | enable and start sssd service
  ansible.builtin.service:
    name: sssd
    state: started
    enabled: true

- name: System_ldap | join the domain
  ansible.builtin.command: realm join {{ ad_domain }} -U {{ ad_admin_user }} --install=/
  environment:
    KRB5_CONFIG: /etc/krb5.conf
  changed_when: false
  when: running_on_server

- name: System_ldap | verify domain join
  ansible.builtin.command: realm list
  register: realm_list
  changed_when: false
  when: running_on_server

- name: System_ldap | debug realm list output
  ansible.builtin.debug:
    var: realm_list.stdout
  when: running_on_server

- name: System_ldap | configure PAM
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-session
    line: 'session required pam_mkhomedir.so skel=/etc/skel umask=0022'

- name: System_ldap | create home directory for AD users
  ansible.builtin.file:
    path: /home/{{ ad_test_user }}
    state: directory
    mode: "0700"
    owner: "{{ ad_test_user }}"
    group: "{{ ad_test_user }}"
  when: running_on_server

- name: System_ldap | test login with AD user
  ansible.builtin.command: su - {{ ad_test_user }} -c 'exit 0'
  changed_when: false
  ignore_errors: true  # Ignore errors if the user cannot log in yet
  register: ad_login_result
  when: running_on_server

- name: System_ldap | debug AD login result
  ansible.builtin.debug:
    var: ad_login_result
  when: running_on_server
