---
- name: Check for solr installed
  stat:
    path: '{{solr_home}}/data'
  register: solr_installed
- name: Configure Solr Core
  template:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
  with_items:
    - src: solrconfig.xml
      dest: '{{ solr_home }}/data/{{figgy_solr_name}}/conf/solrconfig.xml'
    - src: schema.xml
      dest: '{{ solr_home }}/data/{{figgy_solr_name}}/conf/schema.xml'
    - src: stopwords_en.txt
      dest: '{{ solr_home }}/data/{{figgy_solr_name}}/conf/stopwords_en.txt'
  when:
    - solr_installed.stat.exists
  notify:
    - restart solr
- name: Create repository directory structure
  file:
    path: '/opt/{{item}}'
    state: 'directory'
    owner: '{{deploy_user}}'
    group: '{{deploy_user}}'
  with_items:
    - 'repository'
## Create Mounts
- name: Create mount directories
  file:
    path: '/mnt/{{item}}'
    state: 'directory'
  with_items:
    - hydra_sources
    - figgy_binaries
    - figgy_images
    - diglibdata
    - libimages1
    - 'diglibdata/pudl'
    - 'diglibdata/hydra_binaries'
- name: Copy smb credentials
  copy: src=files/{{item}} dest=/etc/{{item}}
  with_items:
    - pudl.smb.credentials
    - archives.smb.credentials
    - studio.smb.credentials
    - studio.new.smb.credentials
    - hydradev.smb.credentials
    - plum_mount.smb.credentials
    - libimages1.smb.credentials
    - maplab.smb.credentials
    - geoserver.smb.credentials
- name: Create mount to plum binaries
  mount:
    name: '/mnt/diglibdata/hydra_binaries'
    src: '//diglibdata1.princeton.edu/hydra/binaries'
    fstype: cifs
    opts: 'credentials=/etc/plum_mount.smb.credentials,uid={{deploy_user_uid}},gid=33'
    state: mounted
- name: Create mount to pudl binaries (for migration)
  mount:
    name: '/mnt/diglibdata/pudl'
    src: '//diglibdata1.princeton.edu/pudl'
    fstype: cifs
    opts: 'credentials=/etc/pudl.smb.credentials,uid={{deploy_user_uid}},gid=33'
    state: mounted
- name: Create mount to scratch space (for bulk ingests)
  mount:
    name: '/mnt/hydra_sources/ingest_scratch'
    src: '//diglibdata1.princeton.edu/hydra/binaries/ingest_scratch'
    fstype: cifs
    opts: 'credentials=/etc/plum_mount.smb.credentials,uid={{deploy_user_uid}},gid=33'
    state: mounted
- name: Create libimages1 mount
  mount:
    name: /mnt/libimages1/data
    src: //libimages1.princeton.edu/data
    fstype: cifs
    opts: credentials=/etc/libimages1.smb.credentials
    state: mounted
- name: Create diglibdata mounts (hydra sources)
  mount:
    name: /mnt/hydra_sources/{{item}}
    src: //diglibdata1.princeton.edu/{{item}}
    fstype: cifs
    opts: 'credentials=/etc/{{item}}.smb.credentials,uid={{deploy_user_uid}}'
    state: mounted
  with_items:
    - pudl
    - archives
    - maplab
- name: Create mount to studio (hydra sources)
  mount:
    name: /mnt/hydra_sources/studio
    src: //libserv64.princeton.edu/studio
    fstype: cifs
    opts: 'credentials=/etc/studio.smb.credentials,uid={{deploy_user_uid}}'
    state: mounted
- name: Create mount to studio (hydra sources)
  mount:
    name: /mnt/hydra_sources/studio_new
    src: //lib-dps-server.princeton.edu/studio
    fstype: cifs
    opts: 'credentials=/etc/studio.new.smb.credentials,uid={{deploy_user_uid}}'
    state: mounted
- name: Create geoserver derivatives mount
  mount:
    name: /mnt/geoserver/figgy_geo_data
    src: //geoserv1.princeton.edu/figgy_geo_data
    fstype: cifs
    opts: 'credentials=/etc/geoserver.smb.credentials,uid={{deploy_user_uid}}'
    state: mounted
## Symlink to Mounts
- name: Create symlinks
  file:
    src: '{{item.src}}'
    dest: '{{item.link}}'
    owner: '{{deploy_user}}'
    group: '{{deploy_user}}'
    state: 'link'
    force: true
  with_items:
    - src: '/mnt/hydra_sources'
      link: '/opt/{{rails_app_directory}}/shared/staged_files'
    - src: '{{figgy_repository_mount}}'
      link: '/opt/repository/files'
    - src: '{{figgy_derivatives_mount}}'
      link: '/opt/repository/derivatives'
    - src: '{{figgy_geo_derivatives_mount}}'
      link: '/opt/repository/geo_derivatives'
## Necessary for gdal version >= 2.2.
## Can remove once we're using Ubuntu Bionic or above. 
- name: Add ubuntugis repository
  become: yes
  apt_repository: repo='ppa:ubuntugis/ubuntugis-unstable'
- name: Install GDAL
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - libgdal-dev
    - gdal-bin
## Simple tiles dependency
- name: Compile simple-tiles from source
  shell: curl -L {{ simple_tiles_url }} | tar -xz && cd simple-tiles-{{simple_tiles_version}} && ./configure && make && make install
  args:
    creates: /usr/local/lib/libsimple-tiles.so
