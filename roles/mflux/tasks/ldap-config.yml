---
- name: Mflux | add the princeton ldap provider the mediaflux desktop
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password="{{ mflux_manager_password }}" -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec	ldap.provider.add :auth user :bind < :user "CN={{ mflux_ldap_user }},OU=Library - Office of the Deputy University Librarian,OU=People,DC=pu,DC=win,DC=princeton,DC=edu" :password {{ mflux_ldap_password }} > :host -type "host" "ad-a.princeton.edu" :host -type "host" "ad-c.princeton.edu" :host -type "host" "ad-g.princeton.edu" :host -type "host" "ad-h.princeton.edu" :name princeton :port 636 :ssl -allowUntrusted true true :uid sAMAccountName
  ignore_errors: true

- name:  Mflux | Create /opt/mediaflux/config/security/
  ansible.builtin.file:
    path: "/opt/mediaflux/config/security/"
    mode: u=rw,g=r
    owner: "{{ mflux_user }}"
    group: "{{ mflux_user }}"
    state: directory

- name: Mflux | Create /opt/mediaflux/config/security/krb5.conf
  ansible.builtin.copy:
    src: files/krb5.conf
    dest: /opt/mediaflux/config/security/krb5.conf
    owner: "{{ mflux_user }}"
    group: "{{ mflux_user }}"
    mode: u=rw,g=r

- name: Mflux | Create /opt/mediaflux/config/security/gssapi_jaas.conf
  ansible.builtin.copy:
    src: files/gssapi_jaas.conf
    dest: /opt/mediaflux/config/security/gssapi_jaas.conf
    owner: "{{ mflux_user }}"
    group: "{{ mflux_user }}"
    mode: u=rw,g=r

- name: Mflux | ldap discover Princeton
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password="{{ mflux_manager_password }}" -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec ldap.provider.domain.controllers.discover :provider princeton

- name: Mflux | ldap create authentication domain
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password="{{ mflux_manager_password }}" -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec	authentication.ldap.domain.create :domain princeton :provider princeton :user < :uid sAMAccountName :path "OU=people,DC=pu,DC=win,DC=princeton,DC=edu" :group memberOf :case-sensitive false >
  ignore_errors: true

- name: MFlux | ldap Restart mediaflux
  ansible.builtin.systemd:
    name: mediaflux
    state: restarted
  tags:
    - mediaflux
    - init
  when:
    - running_on_server

- name: Mflux | ldap wait for mediaflux on port 80 to become open on the host
  ansible.builtin.wait_for:
    port: 80

- name: Mflux | ldap grant princeton domain roles
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password="{{ mflux_manager_password }}" -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec actor.grant :type domain :name princeton :role -type role {{ item }}
  loop:
     - user
     - standard-user
     - desktop-experimental
  register: role_results
  when:
    - running_on_server

- name: MFlux | debug role command
  debug:
    msg: "{{ role_results }}"
  when:
    - running_on_server

- name: MFlux | setup cas domain
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password="{{ mflux_manager_password }}" -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec application.property.set :property -app cas.token.logon -name cas.authentication.domain princeton

- name: MFlux | setup cas host
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password="{{ mflux_manager_password }}" -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec application.property.set :property -app cas.token.logon -name cas.service.validate.host fed.princeton.edu