---
- name: Mflux | copy service file
  ansible.builtin.copy:
    src: files/mediaflux.service
    dest: /etc/systemd/system/mediaflux.service
    mode: '0755'

- name: MFlux | Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Mflux | start mediaflux if not started
  ansible.builtin.service:
    name: mediaflux
    state: started
    enabled: true
  register: start_mflux_result

- name: Mflux | stop and disable the firewall
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
    enabled: false

- name:  Mflux | update the system manager password
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password=change_me -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec authentication.user.password.set :domain system :user manager :password "{{ mflux_manager_password }}"
  when: start_mflux_result is changed

- name:  Mflux | install the mediaflux desktop
  ansible.builtin.command: java -Dmf.host=localhost -Dmf.transport=http -Dmf.domain=system -Dmf.user=manager -Dmf.password="{{ mflux_manager_password }}" -Dmf.port=80 -jar /opt/mediaflux/bin/aterm.jar --app exec package.install :url https://www.arcitecta.com/software/adesktop/1.2.020/adesktop_1.2.020.zip
  when: start_mflux_result is changed

# Run the ldap configuration tasks
- name: Mflux | import ldap-config tasks
  ansible.builtin.import_tasks: ldap-config.yml
  # when: start_mflux_result is changed

- name: MFlux | Restart mediaflux
  ansible.builtin.systemd:
    name: mediaflux
    state: restarted
  tags:
    - mediaflux
    - init
