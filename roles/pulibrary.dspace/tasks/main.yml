---
- name: dspace | configure git credentials
  command: "git config --global credential.helper store"
  when: running_on_server
  changed_when: false

- name: dspace | populate the git credential store
  template:
    src: git_credentials.j2
    dest: "/home/{{ deploy_user }}/.git-credentials"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: u=rw,g=,o=
  when: running_on_server
  no_log: false

- name: dspace | create directory to host atmire scripts
  file:
    path: "{{ atmire_path }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  when: running_on_server

- name: dspace | setup install scripts
  git:
    repo: "{{ atmire_git_path }}"
    dest: "{{ atmire_path }}"
    force: true
  when: running_on_server

- name: dspace | remove bash dot files
  file:
    path: "/home/{{ deploy_user }}/{{ item }}"
    state: absent
  loop:
    - .bashrc
    - .bash_profile
  when: running_on_server

- name: dspace | configure user bashrc
  file:
    src: "{{ atmire_path }}/dspace/config/bash/bashrc"
    dest: "/home/{{ deploy_user }}/.bashrc"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: true
    state: link
  when: running_on_server

- name: dspace | configure user bash_profile
  file:
    src: "{{ atmire_path }}/dspace/config/bash/bash_profile"
    dest: "/home/{{ deploy_user }}/.bash_profile"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: true
    state: link
  when: running_on_server

- name: dspace | configure dspace_local_settings
  file:
    src: "{{ atmire_path }}/dspace/config/local-settings.cfg"
    dest: "/home/{{ deploy_user }}/local-settings.cfg"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: true
    state: link
  when: running_on_server

- name: dspace | configure dspace scripts
  file:
    src: "{{ atmire_path }}/dspace/scripts"
    dest: "/home/{{ deploy_user }}/scripts"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: true
    state: link
  when: running_on_server

- name: dspace | disable systemd tomcat
  systemd:
    name: apache-tomcat
    state: stopped
  ignore_errors: true
  when: running_on_server

- name: dspace | remove systemd tomcat
  file:
    path: "/usr/lib/systemd/system/{{ tomcat_service_name }}.service"
    state: absent
  when: running_on_server

- name: dspace | configure {{ tomcat_service_name }}
  file:
    src: "{{ atmire_path }}/dspace/config/tomcat/server.xml"
    dest: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/server.xml"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: true
    state: link
  when: running_on_server
