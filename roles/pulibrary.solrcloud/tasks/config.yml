---
- name: Check for solr znode
  command: >
    {{ solr_installation }}/bin/solr zk ls /
    -z {{ solr_zookeeper_hosts_string }}
  register: znode_check
  ignore_errors: true
  changed_when: false

- name: Create zk chroot / solr znode using bin/solr
  command: >
    {{ solr_installation }}/bin/solr zk mkroot {{ solr_znode }}
    -z {{ solr_zookeeper_hosts_string }}
  when: solr_znode not in znode_check.stdout_lines and solr_znode != ''
  ignore_errors: true
  changed_when: false

- name: Configuring jetty server
  template:
    src: 'jetty.xml.j2'
    dest: '/opt/solr/server/etc/jetty.xml'
    force: true
  notify: restart SolrCloud

- name: Configure jetty server http
  template:
    src: 'jetty-http.xml.j2'
    dest: '/opt/solr/server/etc/jetty-http.xml'
    force: true
  notify: restart SolrCloud

- name: Configure SolrCloud init script
  template:
    src: 'solr.in.sh.j2'
    dest: '/etc/default/solr.in.sh'
    force: true
  notify: restart SolrCloud

- name: Configure high ulimit value for Solr
  template:
    src: 'solr.conf.j2'
    dest: '/etc/security/limits.d/solr.conf'
    force: true
  notify: restart SolrCloud

- name: Configure SolrCloud properties
  template:
    src: 'solr.xml.j2'
    dest: '{{ solr_data_dir }}/solr.xml'
    force: true
  notify: restart SolrCloud

- name: Configure pre 7.4 logging
  template:
    src: 'log4j.properties.j2'
    dest: '/solr/log4j.properties'
    force: true
  notify: restart SolrCloud

- name: Configure logging
  template:
    src: 'log4j2.xml.j2'
    dest: '/solr/log4j2.xml'
    force: true
  notify: restart SolrCloud

- name: Add orangelight cjk jar file
  get_url:
    url: "{{ cjkfoldingfilter }}"
    dest: "{{ jardirectory }}"
    force: yes
  changed_when: false
  notify: restart SolrCloud

- name: Add orangelight call number jar file
  get_url:
    url: "{{ umichsolrfilters }}"
    dest: "{{ jardirectory }}"
    force: yes
  changed_when: false
  notify: restart SolrCloud
