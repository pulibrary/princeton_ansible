---
# tasks file for roles/drupal9

- name: drupal9 | Install dependencies
  ansible.builtin.apt:
    name: []
    state: present

- name: drupal9 | install postgres php driver
  ansible.builtin.apt:
    name: ["php7.4-pgsql", "php7.4-xml"]
    state: present
    update_cache: true

- name: drupal9 | Check to see if settings.php home file exists.
  ansible.builtin.stat:
    path: "{{ drupal_docroot }}"
  register: drupal_docroot_exists

- name: drupal9 | create drupal docroot
  ansible.builtin.file:
    path: "{{ drupal_docroot }}"
    state: directory
    owner: "{{ systems_user }}"
    group: "{{ systems_user }}"
    recurse: true
    follow: false
    mode: 0755
  become: true
  when: not drupal_docroot_exists.stat.exists

- name: drupal9 | allow temporary full permissions
  ansible.builtin.file:
    path: "{{ drupal_docroot }}"
    mode: 0777
    state: directory
  become: true
  changed_when: false

- name: drupal9 | grant permissions on deploy user
  ansible.builtin.file:
    path: "{{ drupal_docroot }}"
    state: directory
    owner: "{{ drupal_web_owner }}"
    group: "{{ deploy_user }}"
    follow: false
    recurse: true
    mode: 0775
  changed_when: false

- name: drupal9 | Check for the sites files directory.
  ansible.builtin.stat:
    path: "{{ drupal_docroot }}/current/sites/default/files"
  register: file_dir_exists

- name: drupal9 | Give appropriate permissions for files directory
  ansible.builtin.file:
    dest: "{{ drupal_docroot }}/current/sites/default/files"
    recurse: true
    state: directory
    mode: a+w
  become: true
  when: not file_dir_exists.stat.exists

# Create Mounts
- name: drupal9 | Create mount directories
  ansible.builtin.file:
    path: '/mnt/{{ item }}'
    state: 'directory'
    mode: 0755
  with_items:
    - drupal_fileshare_mount

- name: drupal9 | Install settings.php
  ansible.builtin.template:
    src: "settings.php.j2"
    dest: "/home/{{ deploy_user }}/settings.php"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0644

- name: drupal9 | Install nginx configuration
  ansible.builtin.template:
    src: "default.conf.j2"
    dest: "/etc/nginx/conf.d/default.conf"
    owner: "{{ drupal_web_owner }}"
    group: "adm"
    mode: 0644
  notify: Restart NGINX

- name: drupal9 | install npm for git actions
  ansible.builtin.apt:
    name: ["nodejs", "nodejs-dev", "node-gyp", "libssl1.0-dev"]
    state: build-dep
    update_cache: true
  changed_when: false
  when: not running_on_server

- name: drupal9 | install php packages
  ansible.builtin.apt:
    name: ["php{{ php_version }}-gd", "postgresql-client", "php7.4-mbstring"]
    state: present
    update_cache: true

- name: drupal9 | Install gulp globally
  npm:
    name: gulp-cli
    global: true
  become: true
  when: running_on_server

- name: drupal9 | Allow www-data to access deploy's drush dir
  ansible.builtin.file:
    state: directory
    path: "/home/{{ deploy_user }}/.drush"
    owner: "{{ deploy_user }}"
    group: "www-data"
    mode: 0644


- name: drupal9 | Allow www-data to access deploy's drush cache
  ansible.builtin.file:
    state: directory
    path: "/home/{{ deploy_user }}/.drush/cache"
    owner: "{{ deploy_user }}"
    group: "{{ drupal_web_owner }}"
    mode: 0644

- name: drupal9 | add bash_profile
  ansible.builtin.blockinfile:
    path: "/home/{{ deploy_user }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      export PATH={{ drupal_docroot }}/current/vendor/bin/:$PATH
    insertbefore: "# If not running interactively, don't do anything"
  when: running_on_server
