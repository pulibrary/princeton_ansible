---
- name: Ezproxy | create ezproxy directory
  ansible.builtin.file:
    path: "/var/local/ezproxy"
    state: directory
    group: "{{ deploy_user }}"
    owner: "{{ deploy_user }}"
    mode: 0755

- name: Ezproxy | copy ezproxy binary
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/var/local/ezproxy/ezproxy"
    mode: 0755
  loop:
    - "files/ezproxy.bin"

- name: Ezproxy | copy idp_file and allow file
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/var/local/ezproxy"
    mode: 0755
  loop:
    - "files/idp_princeton.xml"
    - "files/princeton_allow.txt"
  when:
    - running_on_server

- name: Ezproxy | install dependencies for 64bit
  ansible.builtin.apt:
    name: ["lib32ncurses6", "lib32z1"]
    state: present

- name: Ezproxy | copy ezproxy config.txt
  ansible.builtin.template:
    src: "config.txt.j2"
    dest: "/var/local/ezproxy/config.txt"
    owner: root
    group: root
    mode: "0644"
  changed_when: false
  when:
    - running_on_server

- name: Ezproxy | install missing file replacements
  ansible.builtin.command: /var/local/ezproxy/ezproxy -m
  become: true
  become_user: "{{ deploy_user }}"
  register: proxy_results
  changed_when: false
  failed_when: "proxy_results.rc != 1"
  when:
    - running_on_server

- name: Ezproxy | run command with WSKey
  ansible.builtin.command: /var/local/ezproxy/ezproxy -k "{{ oclc_wskey }}"
  become: true
  changed_when: false
  when: running_on_server

- name: Ezproxy | create ezproxy tls directory
  ansible.builtin.file:
    path: "/var/local/ezproxy/tls"
    state: directory
    group: "{{ deploy_user }}"
    owner: "{{ deploy_user }}"
    mode: 0755

- name: Ezproxy | install snapd
  ansible.builtin.apt:
    name: snapd
    state: present
    update_cache: true

- name: Ezproxy | install snap core
  community.general.snap:
    name: core
  when: running_on_server

- name: Ezproxy | install snap certbot
  community.general.snap:
    name: certbot
    classic: true
  when: running_on_server

- name: Ezproxy | create certbot link
  ansible.builtin.file:
    src: "/snap/bin/certbot"
    dest: "/usr/bin/certbot"
    state: link
    group: root
    owner: root
  when: running_on_server

- name: update acme certificates for {{ domain_name }}
  ansible.builtin.command: /usr/bin/certbot certonly --standalone --non-interactive --agree-tos --email lsupport@princeton.edu --server https://acme.sectigo.com/v2/InCommonRSAOV --eab-kid {{ vault_acme_eab_kid }} --eab-hmac-key {{ vault_acme_eab_hmac_key }} --domain {{ domain_name }}.princeton.edu --cert-name {{ domain_place_name }}
  notify: restart ezproxy
  when: running_on_server

- name: Ezproxy | Creates a log directory for ezproxy
  ansible.builtin.file:
    path: "/var/local/ezproxy/log"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0755
  become: true

- name: Ezproxy | rotate the logs
  ansible.builtin.template:
    src: ezproxy.j2
    dest: '/etc/logrotate.d/ezproxy'
    mode: 0644

- name: Ezproxy | Create app directory
  ansible.builtin.file:
    path: "{{ ezproxy_repo_root }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0750
    recurse: true
  become: true

- name: Ezproxy | Ensure .ssh directory exists.
  ansible.builtin.file:
    path: "/home/{{ deploy_user }}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"

- name: Ezproxy | Allow {{ deploy_user }} to restart ezproxy
  ansible.builtin.lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    line: "{{ deploy_user }} ALL=(ALL) NOPASSWD: /usr/sbin/service ezproxy restart"
    validate: "visudo -cf %s"

- name: Ezproxy | chmod back permissions
  ansible.builtin.file:
    path: "{{ ezproxy_repo_root }}"
    state: directory
    recurse: true
    mode: 0750
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  become: true

- name: Ezproxy | add geoip ppa
  ansible.builtin.apt_repository:
    repo: "ppa:maxmind/ppa"
    state: present

- name: Ezproxy | install geoupdate
  ansible.builtin.apt:
    name: geoipupdate
    state: present

- name: Ezproxy | add geoip configuration file
  ansible.builtin.template:
    src: geoip_conf.j2
    dest: "/etc/GeoIP.conf"
    mode: 0644
  when:
    - running_on_server

- name: Ezproxy | run a cronjob to update
  ansible.builtin.cron:
    name: "run the update"
    minute: 49
    hour: 8
    job: "/usr/bin/geoipupdate"
  when:
    - running_on_server

- name: Ezproxy | install ezproxy startup script (requires root)
  ansible.builtin.command: /var/local/ezproxy/ezproxy -si
  become: true
  become_user: 'root'
  changed_when: false
  when: running_on_server


- name: Ezproxy | add shib config user
  ansible.builtin.template:
    src: "shibuser.txt.j2"
    dest: /var/local/ezproxy/shibuser.txt
    mode: 0644
    owner: root
    group: root


- name: Ezproxy | copy a systemd service
  ansible.builtin.template:
    src: "ezproxy.service.j2"
    dest: /var/local/ezproxy/ezproxy.service
    owner: root
    group: root
    mode: a+x
  changed_when: false
  when:
    - running_on_server
  notify: reload ezproxy

- name: Ezproxy | symbolic link
  ansible.builtin.file:
    src: /var/local/ezproxy/ezproxy.service
    dest: /lib/systemd/system/ezproxy.service
    owner: root
    group: root
    state: link
  when:
    - running_on_server

- name: Ezproxy | start ezproxy
  ansible.builtin.service:
    name: ezproxy
    state: started
  when: running_on_server
