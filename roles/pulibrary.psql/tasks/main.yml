---
- name: PostgreSQL | Make sure the CA certificates are available
  apt:
    pkg: ca-certificates
    state: present

- name: pgbouncer | Add PostgreSQL repository apt-key | apt
  apt_key:
    id: "{{ postgresql_apt_key_id }}"
    url: "{{ postgresql_apt_key_url }}"
    state: present

- name: pgbouncer | Add PostgreSQL repository | apt
  apt_repository:
    repo: "{{ postgresql_apt_repository }}"
    state: present

- name: Postgresql | install postgresql server packages
  apt:
    name: '{{ item }}'
    state: present
    update_cache: true
  loop:
    - "{{ postgresql_packages }}"

- name: Postgresql | install postgresql client packages
  apt:
    name: '{{ item }}'
    state: present
    update_cache: true
  loop:
    - libpq-dev
    - python-psycopg2

- import_tasks: extensions.yml

- name: Postgresql | configure postgres
  lineinfile:
    path: "{{ postgresql_conf_directory }}/postgresql.conf"
    regex: "^{{ item.name }} ="
    line: "{{ item.name }} = '{{ item.value }}'"
    create: true
  loop: "{{ postgresql_settings }}"
  when:
    - postgresql_settings is defined
  notify:
    - restart postgresql
  loop_control:
    label: "{{ item.name }}"

- name: Postgresql | create pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_conf_directory }}/pg_hba.conf"
    backup: true
  notify:
    - reload postgresql

- name: start and enable postgres
  service:
    name: postgresql
    state: started
    enabled: true

- name: install psycopg2-binary
  pip:
    name: psycopg2-binary
    state: present
  register: postgres_install_psycopg2_binary
  until: postgres_install_psycopg2_binary is succeeded
  when:
    - postgresql_databases is defined or
      postgresql_users is defined

- name: flush handlers
  meta: flush_handlers

- include: users.yml
- include: databases.yml
- include: repmgr.yml
