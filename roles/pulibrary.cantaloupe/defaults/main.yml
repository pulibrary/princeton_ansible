---
cantaloupe_temp_pathname:
cantaloupe_src_prefix: cantaloupe
cantaloupe_version: 3.3.1
cantaloupe_install_root: /opt
cantaloupe_symlink: /opt/cantaloupe
cantaloupe_log_path: /var/log/cantaloupe
cantaloupe_user: cantaloupe
cantaloupe_group: cantaloupe

cantaloupe_deploy_war: false
cantaloupe_deploy_war_path: /path/to/tomcat/webapps
cantaloupe_deploy_war_filename: cantaloupe

cantaloupe_create_FilesystemCache_dir: false

###########################################################################
# Cantaloupe.properties config
###########################################################################

# !! Whether to enable HTTP access (http://), and on what host interface
# and TCP port. (Applies in standalone mode only.)
cantaloupe_http_enabled: "true"
cantaloupe_http_host: 0.0.0.0
cantaloupe_http_port: 8182

# !! Whether to enable HTTPS access (https://), and on what host interface
# and TCP port. (Applies in standalone mode only.)
cantaloupe_https_enabled: "false"
cantaloupe_https_host: 0.0.0.0
cantaloupe_https_port: 8183

# !! Available values are `JKS` and `PKCS12`. (Standalone mode only.)
cantaloupe_https_key_store_type: JKS
cantaloupe_https_key_store_password: myPassword
cantaloupe_https_key_store_path: /path/to/keystore.jks
cantaloupe_https_key_password: myPassword

# !! Configures HTTP Basic authentication.
cantaloupe_auth_basic_enabled: "false"
cantaloupe_auth_basic_username: myself
cantaloupe_auth_basic_secret: mypassword

# Enables the Control Panel, at /admin.
cantaloupe_admin_enabled: "false"
# Password to access the Control Panel. (The username is "admin".)
cantaloupe_admin_password:

# Base URI to use for internal links, such as Link headers and JSON-LD @id
# values, in a reverse-proxy context. This should only be used when
# X-Forwarded-* headers cannot be used instead (see the user manual).
cantaloupe_base_uri:

# Normally, slashes in a URI path component must be percent-encoded as
# "%2F". If your proxy is incapable of passing these through without
# decoding them, you can define an alternate character or character
# sequence to substitute for a slash. Supply the non-percent-encoded
# version here, and use the percent-encoded version in URLs.
cantaloupe_slash_substitute:

# Maximum number of pixels to return in a response, to prevent overloading
# the server. Requests for more pixels than this will receive an error
# response. Set to 0 for no maximum.
cantaloupe_max_pixels: 5000000000

# Sometimes helpful.
cantaloupe_print_stack_trace_on_error_pages: "true"

###########################################################################
# DELEGATE SCRIPT
###########################################################################

# !! Enables the delegate script: a Ruby script containing various delegate
# methods. (See the user manual.)
cantaloupe_delegate_script_enabled: "false"

# !! This can be an absolute path, or a filename; if only a
# filename is specified, it will be searched for in the same folder as this
# file, and then the current working directory.
cantaloupe_delegate_script_pathname: delegates.rb

# Enables the invocation cache, which caches method invocations and
# return values in memory. See the user manual for more information.
cantaloupe_delegate_script_cache_enabled: "false"

###########################################################################
# ENDPOINTS
###########################################################################

cantaloupe_endpoint_iiif_1_enabled: "true"

cantaloupe_endpoint_iiif_2_enabled: "true"

# Controls the response Content-Disposition header for images. Allowed
# values are `inline`, `attachment`, and `none`.
cantaloupe_endpoint_iiif_content_disposition: inline

# Minimum size that will be used in info.json "tiles" keys. See the user
# manual for an explanation of how these are calculated.
cantaloupe_endpoint_iiif_min_tile_size: 512

# If "true", requests for sizes other than those specified in an info.json
# response will be denied.
cantaloupe_endpoint_iiif_2_restrict_to_sizes: "false"

# Enables the administrative REST API. (See the user manual.)
cantaloupe_endpoint_api_enabled: "false"

# HTTP Basic credentials to access the REST API.
cantaloupe_endpoint_api_username:
cantaloupe_endpoint_api_secret:

###########################################################################
# RESOLVERS
###########################################################################

# Specifies one resolver to translate the identifier in the URL to an image
# source for all requests. Available values are `FilesystemResolver`,
# `HttpResolver`, `JdbcResolver`, `AmazonS3Resolver`, and
# `AzureStorageResolver`.
cantaloupe_source_static: FilesystemSource

# If "true", `resolver_static` will be overridden, and the
# `get_resolver(identifier)` delegate script method will be used to select
# a resolver per-request.
cantaloupe_resolver_delegate: "false"

# ---------------------------------------
# FilesystemSource
# ---------------------------------------

# Tells FilesystemSource how to look up files. Allowed values are
# `BasicLookupStrategy` and `ScriptLookupStrategy`. ScriptLookupStrategy
# uses the delegate script for dynamic lookups; see the user manual for
# details.
cantaloupe_FilesystemSource_lookup_strategy: BasicLookupStrategy

# Server-side path that will be prefixed to the identifier in the URL.
# Trailing slash is important.
cantaloupe_FilesystemSource_BasicLookupStrategy_path_prefix: /home/myself/images/


# Server-side path or extension that will be suffixed to the identifier in
# the URL.
cantaloupe_FilesystemSource_BasicLookupStrategy_path_suffix:

# ---------------------------------------
# HttpResolver
# ---------------------------------------

# Tells HttpResolver how to look up resources. Allowed values are
# `BasicLookupStrategy` and `ScriptLookupStrategy`. ScriptLookupStrategy
# uses the delegate script for dynamic lookups; see the user manual for
# details.
cantaloupe_HttpResolver_lookup_strategy: BasicLookupStrategy

# URL that will be prefixed to the identifier in the request URL. Trailing
# slash is important.
cantaloupe_HttpResolver_BasicLookupStrategy_url_prefix: http://localhost/images/

# Path, extension, query string, etc. that will be suffixed to the
# identifier in the request URL.
cantaloupe_HttpResolver_BasicLookupStrategy_url_suffix:

# Used for HTTP Basic authentication.
cantaloupe_HttpResolver_auth_basic_username:
cantaloupe_HttpResolver_auth_basic_secret:

# ---------------------------------------
# JdbcResolver
# ---------------------------------------

# Note: JdbcResolver requires some delegate methods to be implemented in
# addition to the configuration here; see the user manual.

# !!
cantaloupe_JdbcResolver_url: jdbc:postgresql://localhost:5432/my_database
# !!
cantaloupe_JdbcResolver_user: postgres
# !!
cantaloupe_JdbcResolver_password: postgres

# !! Connection timeout in seconds.
cantaloupe_JdbcResolver_connection_timeout: 10

# ---------------------------------------
# AmazonS3Resolver
# ---------------------------------------

# !! Access key ID and secret key associated with your AWS account.
# See: http://aws.amazon.com/security-credentials
cantaloupe_AmazonS3Resolver_access_key_id:
cantaloupe_AmazonS3Resolver_secret_key:

# !! Name of the bucket containing images to be served.
cantaloupe_AmazonS3Resolver_bucket_name:

# !! Can be left blank.
# See: http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region
cantaloupe_AmazonS3Resolver_bucket_region:

# Tells AmazonS3Resolver how to look up objects. Allowed values are
# `BasicLookupStrategy` and `ScriptLookupStrategy`. ScriptLookupStrategy
# uses the delegate script for dynamic lookups; see the user manual for
# details.
cantaloupe_AmazonS3Resolver_lookup_strategy: BasicLookupStrategy

# ---------------------------------------
# AzureStorageResolver
# ---------------------------------------

# !! Name of your Azure account.
cantaloupe_AzureStorageResolver_account_name:

# !! Key of your Azure account.
cantaloupe_AzureStorageResolver_account_key:

# !! Name of the container containing images to be served.
cantaloupe_AzureStorageResolver_container_name:

# Tells AzureStorageResolver how to look up objects. Allowed values are
# `BasicLookupStrategy` and `ScriptLookupStrategy`. ScriptLookupStrategy
# uses the delegate script for dynamic lookups; see the user manual for
# details.
cantaloupe_AzureStorageResolver_lookup_strategy: BasicLookupStrategy

###########################################################################
# PROCESSORS
###########################################################################

# ---------------------------------------
# Processor Selection
# ---------------------------------------

# Image processors to use for various source formats. Available values are
# `Java2dProcessor`, `GraphicsMagickProcessor`, `ImageMagickProcessor`,
# `KakaduProcessor`, `OpenJpegProcessor`, `JaiProcessor`, `PdfBoxProcessor`,
# and `FfmpegProcessor`.

# These extension-specific definitions are optional.
cantaloupe_processor_avi: FfmpegProcessor
cantaloupe_processor_bmp:
cantaloupe_processor_dcm:
cantaloupe_processor_gif:
cantaloupe_processor_jp2: KakaduDemoProcessor
cantaloupe_processor_jpg:
cantaloupe_processor_mov: FfmpegProcessor
cantaloupe_processor_mp4: FfmpegProcessor
cantaloupe_processor_mpg: FfmpegProcessor
cantaloupe_processor_pdf: PdfBoxProcessor
cantaloupe_processor_png:
cantaloupe_processor_tif:
cantaloupe_processor_webm: FfmpegProcessor
cantaloupe_processor_webp: ImageMagickProcessor

# Fall back to this processor for any formats not assigned above.
cantaloupe_processor_fallback: Java2dProcessor

# ---------------------------------------
# Global Processor Configuration
# ---------------------------------------

# Expands contrast to utilize available dynamic range. This forces the entire
# source image to be read into memory, so can be slow with large images.
cantaloupe_processor_normalize: "false"

# Color of the background when an image is rotated. Only affects output
# formats that do not support transparency.
cantaloupe_processor_background_color: black

# Available values are `bell`, `bspline`, `bicubic`, `box`, `hermite`,
# `lanczos3`, `mitchell`, `triangle`.
# These are used only by FfmpegProcessor, Java2dProcessor, OpenJpegProcessor,
# and PdfBoxProcessor.
cantaloupe_processor_downscale_filter: bicubic
cantaloupe_processor_upscale_filter: bicubic

# Intensity of an unsharp mask from 0 to 1.
cantaloupe_processor_sharpen: 0

# Progressive JPEGs are generally more space-efficient.
cantaloupe_processor_jpg_progressive: "true"

# JPEG output quality (1-100).
cantaloupe_processor_jpg_quality: 80

# TIFF output compression type. Available values are `Deflate`, `JPEG`,
# `LZW`, and `RLE`. Leave blank for no compression.
cantaloupe_processor_tif_compression: LZW

# Available values are `StreamStrategy` and `CacheStrategy`. StreamStrategy
# will try to stream source images from non-filesystem resolvers, when this
# is possible; CacheStrategy will first download them into the source cache
# using FilesystemCache, which must also be configured.
cantaloupe_StreamProcessor_retrieval_strategy: StreamStrategy

# ---------------------------------------
# FfmpegProcessor
# ---------------------------------------

# Optional absolute path of the directory containing the FFmpeg binaries.
# Overrides the PATH.
cantaloupe_FfmpegProcessor_path_to_binaries:

# ---------------------------------------
# GraphicsMagickProcessor
# ---------------------------------------

# !! Optional absolute path of the directory containing the GraphicsMagick
# binary. Overrides the PATH.
cantaloupe_GraphicsMagickProcessor_path_to_binaries:

# ---------------------------------------
# ImageMagickProcessor
# ---------------------------------------

# !! Optional absolute path of the directory containing the ImageMagick
# binaries. Overrides the PATH.
cantaloupe_ImageMagickProcessor_path_to_binaries:

# ---------------------------------------
# KakaduProcessor
# ---------------------------------------

# Optional absolute path of the directory containing the Kakadu binaries.
# Overrides the PATH.
cantaloupe_KakaduProcessor_path_to_binaries:

# ---------------------------------------
# OpenJpegProcessor
# ---------------------------------------

# Optional absolute path of the directory containing the OpenJPEG binaries.
# Overrides the PATH.
cantaloupe_OpenJpegProcessor_path_to_binaries:

# ---------------------------------------
# PdfBoxProcessor
# ---------------------------------------

# Resolution of the PDF rasterization at a scale of 1. Requests for
# scales less than 0.5 or larger than 2 will automatically use a lower or
# higher factor of this.
cantaloupe_PdfBoxProcessor_dpi: 150

###########################################################################
# CLIENT-SIDE CACHING
###########################################################################

# Whether to enable the response Cache-Control header.
cantaloupe_cache_client_enabled: "true"

cantaloupe_cache_client_max_age: 2592000
cantaloupe_cache_client_shared_max_age:
cantaloupe_cache_client_public: "true"
cantaloupe_cache_client_private: "false"
cantaloupe_cache_client_no_cache: "false"
cantaloupe_cache_client_no_store: "false"
cantaloupe_cache_client_must_revalidate: "false"
cantaloupe_cache_client_proxy_revalidate: "false"
cantaloupe_cache_client_no_transform: "true"

###########################################################################
# SERVER-SIDE CACHING
###########################################################################

# Enables the source cache. The only available value is `FilesystemCache`.
# Set blank to disable source image caching.
# Note that source images will only be cached when a FileProcessor is used
# with a StreamResolver, or when a StreamProcessor is used with
# `StreamProcessor.retrieval_strategy` set to `CacheStrategy`.
cantaloupe_cache_source:

# Enables the derivative (processed image) cache. Available values are
# `FilesystemCache`, `JdbcCache`, `AmazonS3Cache`, and `AzureStorageCache`.
# Set blank to disable derivative caching.
cantaloupe_cache_derivative:

cantaloupe_cache_derivative_enabled: "false"

# Time before a cached image becomes stale and needs to be reloaded. Set to
# blank or 0 for infinite.
cantaloupe_cache_server_ttl_seconds: 2592000

# If "true", when a resolver reports that the requested source image has gone
# missing, all cached information relating to it (if any) will be deleted.
# (This is effectively always "false" when cache.server.resolve_first is also
# "false".)
cantaloupe_cache_server_purge_missing: "false"

# If "true", the source image will be confirmed to exist before a cached copy
# is returned. If "false", the cached copy will be returned without any
# checking. Resolving first is slower but safer.
cantaloupe_cache_server_resolve_first: "false"

# !! Enables the cache worker, which periodically purges expired cache
# items in the background.
cantaloupe_cache_server_worker_enabled: "false"

# !! The cache worker will wait this many seconds between purgings.
cantaloupe_cache_server_worker_interval: 86400

# ---------------------------------------
# FilesystemCache
# ---------------------------------------

# If this directory does not exist, it will be created automatically.
cantaloupe_FilesystemCache_pathname: /var/cache/cantaloupe

# Levels of folder hierarchy in which to store cached images. Deeper depth
# results in fewer files per directory. Set to 0 to disable subfolders.
# Purge the cache after changing this.
cantaloupe_FilesystemCache_dir_depth: 3

# Number of characters in hierarchy directory names. Should be set to
# 16^n < (max number of directory entries your filesystem can deal with).
# Purge the cache after changing this.
cantaloupe_FilesystemCache_dir_name_length: 2

# ---------------------------------------
# JdbcCache
# ---------------------------------------

# !!
cantaloupe_JdbcCache_url: jdbc:postgresql://localhost:5432/cantaloupe
# !!
cantaloupe_JdbcCache_user: postgres
# !!
cantaloupe_JdbcCache_password:

# !! Connection timeout in seconds.
cantaloupe_JdbcCache_connection_timeout: 10

# These must be created manually; see the user manual.
cantaloupe_JdbcCache_derivative_image_table: derivative_cache
cantaloupe_JdbcCache_info_table: info_cache

# ---------------------------------------
# AmazonS3Cache
# ---------------------------------------

# !! Access key ID and secret key associated with your AWS account.
# See: http://aws.amazon.com/security-credentials
cantaloupe_AmazonS3Cache_access_key_id:
cantaloupe_AmazonS3Cache_secret_key:

# !! Name of a bucket to use to hold cached data.
cantaloupe_AmazonS3Cache_bucket_name:

# !! Can be left blank.
# See: http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region
cantaloupe_AmazonS3Cache_bucket_region:

# !! String that will be prefixed to object keys.
cantaloupe_AmazonS3Cache_object_key_prefix:

# ---------------------------------------
# AzureStorageCache
# ---------------------------------------

# !! Name of your Azure account.
cantaloupe_AzureStorageCache_account_name:

# !! Key of your Azure account.
cantaloupe_AzureStorageCache_account_key:

# !! Name of the container containing cached images.
cantaloupe_AzureStorageCache_container_name:

# !! String that will be prefixed to object keys.
cantaloupe_AzureStorageCache_object_key_prefix:

###########################################################################
# OVERLAYS
###########################################################################

# Whether to enable overlays.
cantaloupe_overlays_enabled: "false"

# Specifies how overlays are configured. `BasicStrategy` will use the
# `overlays.BasicStrategy.*` keys in this section. `ScriptStrategy` will
# use the `overlay` delegate method. See the user manual for more
# information.
cantaloupe_overlays_strategy: BasicStrategy

# `image` or `string`.
cantaloupe_overlays_BasicStrategy_type: image

# Absolute path or URL of the overlay image. Must be a PNG file.
cantaloupe_overlays_BasicStrategy_image: /path/to/overlay.png

# Overlay text.
cantaloupe_overlays_BasicStrategy_string: Copyright \u00A9️ My Great Organization\nAll rights reserved.

# For possible values, launch with the -Dcantaloupe.list_fonts option.
cantaloupe_overlays_BasicStrategy_string_font: Helvetica

# Font size in points.
cantaloupe_overlays_BasicStrategy_string_font_size: 24

# If the string doesn't fit in the image at the above size, the largest size
# at which it does fit will be used, down to this.
cantaloupe_overlays_BasicStrategy_string_font_min_size: 18

# Font weight. 1 = regular, 2 = bold. Note that many fonts don't support
# fractional weights.
cantaloupe_overlays_BasicStrategy_string_font_weight: 1.0

# Point spacing between glyphs, typically between -0.1 and 0.1.
cantaloupe_overlays_BasicStrategy_string_glyph_spacing: 0.02

# CSS color syntax is supported.
cantaloupe_overlays_BasicStrategy_string_color: white

# CSS color syntax is supported.
cantaloupe_overlays_BasicStrategy_string_stroke_color: black

# Stroke width in pixels.
cantaloupe_overlays_BasicStrategy_string_stroke_width: 1

# Color of a background to draw under the string.
# CSS color syntax is supported.
cantaloupe_overlays_BasicStrategy_string_background_color: rgba(0, 0, 0, 100)

# Allowed values: `top left`, `top center`, `top right`, `left center`,
# `center`, `right center`, `bottom left`, `bottom center`, `bottom right`.
cantaloupe_overlays_BasicStrategy_position: bottom right

# Pixel margin between the overlay and the image edge.
cantaloupe_overlays_BasicStrategy_inset: 10

# Output images less than this many pixels wide will not receive an overlay.
# Set to 0 to add the overlay regardless.
cantaloupe_overlays_BasicStrategy_output_width_threshold: 400

# Output images less than this many pixels tall will not receive an overlay.
# Set to 0 to add the overlay regardless.
cantaloupe_overlays_BasicStrategy_output_height_threshold: 300

###########################################################################
# REDACTIONS
###########################################################################

# Whether to enable redactions. See the user manual for information about
# how these work.
cantaloupe_redaction_enabled: "false"

###########################################################################
# METADATA
###########################################################################

# Whether to attempt to copy source image metadata (EXIF, IPTC, XMP) into
# derivative images. (This is not foolproof; see the user manual.)
cantaloupe_metadata_preserve: "false"

# Whether to respect the EXIF "Orientation" field to auto-rotate images.
# The check for this field can impair performance slightly.
cantaloupe_metadata_respect_orientation: "false"

###########################################################################
# LOGGING
###########################################################################

# ---------------------------------------
# Application Log
# ---------------------------------------

# `trace`, `debug`, `info`, `warn`, `error`, `all`, or `off`
cantaloupe_log_application_level: debug

cantaloupe_log_application_ConsoleAppender_enabled: "true"

cantaloupe_log_application_FileAppender_enabled: "false"
cantaloupe_log_application_FileAppender_pathname: /path/to/logs/application.log

# RollingFileAppender is an alternative to using something like
# FileAppender + logrotate.
cantaloupe_log_application_RollingFileAppender_enabled: "false"
cantaloupe_log_application_RollingFileAppender_pathname: /path/to/logs/application.log
cantaloupe_log_application_RollingFileAppender_policy: TimeBasedRollingPolicy
cantaloupe_log_application_RollingFileAppender_TimeBasedRollingPolicy_filename_pattern: /path/to/logs/application-%d{yyyy-MM-dd}.log
cantaloupe_log_application_RollingFileAppender_TimeBasedRollingPolicy_max_history: 30


cantaloupe_log_error_RollingFileAppender_enabled: "false"
cantaloupe_log_error_RollingFileAppender_pathname: /path/to/logs/application.log
cantaloupe_log_error_RollingFileAppender_policy: TimeBasedRollingPolicy
cantaloupe_log_error_RollingFileAppender_TimeBasedRollingPolicy_filename_pattern: /path/to/logs/application-%d{yyyy-MM-dd}.log
cantaloupe_log_error_RollingFileAppender_TimeBasedRollingPolicy_max_history: 30

# See the "SyslogAppender" section for a list of facilities:
# http://logback.qos.ch/manual/appenders.html
cantaloupe_log_application_SyslogAppender_enabled: "false"
cantaloupe_log_application_SyslogAppender_host:
cantaloupe_log_application_SyslogAppender_port: 514
cantaloupe_log_application_SyslogAppender_facility: LOCAL0

# ---------------------------------------
# Access Log
# ---------------------------------------

cantaloupe_log_access_ConsoleAppender_enabled: "false"

cantaloupe_log_access_FileAppender_enabled: "false"
cantaloupe_log_access_FileAppender_pathname: /path/to/logs/access.log

# RollingFileAppender is an alternative to using something like
# FileAppender + logrotate.
cantaloupe_log_access_RollingFileAppender_enabled: "false"
cantaloupe_log_access_RollingFileAppender_pathname: /path/to/logs/access.log
cantaloupe_log_access_RollingFileAppender_policy: TimeBasedRollingPolicy
cantaloupe_log_access_RollingFileAppender_TimeBasedRollingPolicy_filename_pattern: /path/to/logs/access-%d{yyyy-MM-dd}.log
cantaloupe_log_access_RollingFileAppender_TimeBasedRollingPolicy_max_history: 30

# See the "SyslogAppender" section for a list of facilities:
# http://logback.qos.ch/manual/appenders.html
cantaloupe_log_access_SyslogAppender_enabled: "false"
cantaloupe_log_access_SyslogAppender_host:
cantaloupe_log_access_SyslogAppender_port: 514
cantaloupe_log_access_SyslogAppender_facility: LOCAL0
