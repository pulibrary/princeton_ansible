---
# tasks file for roles/pulibrary.oar
- name: oar | configure git credentials
  command: "git config --global credential.helper store"
  when: running_on_server
  changed_when: false

- name: oar | populate the git credential store
  template:
    src: git_credentials.j2
    dest: "/home/{{ deploy_user }}/.git-credentials"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: u=rw,g=,o=
  when: running_on_server
  no_log: true

- name: oar | install pyopenssl
  apt:
    name: ["python-openssl", "python3-openssl"]
    state: present
    update_cache: true

- name: oar | create nginx includes directory
  file:
    path: /etc/nginx/include/{{ item }}
    state: directory
  loop:
    - csr
    - certs
    - private

- name: oar | Generate an OpenSSL private key
  openssl_privatekey:
    path: /etc/nginx/include/private/ssl-cert-snakeoil.key
    size: 2048

- name: oar | Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: /etc/nginx/include/csr/ssl-cert-snakeoil.csr
    privatekey_path: /etc/nginx/include/private/ssl-cert-snakeoil.key
    common_name: oar-staging.princeton.edu

- name: oar | create a Self Signed OpenSSL certificate
  openssl_certificate:
    path: /etc/nginx/include/certs/ssl-cert-snakeoil.pem
    privatekey_path: /etc/nginx/include/private/ssl-cert-snakeoil.key
    csr_path: /etc/nginx/include/csr/ssl-cert-snakeoil.csr
    provider: selfsigned

- name: oar | add nginx config file
  template:
    src: oar_nginx.conf.j2
    dest: /etc/nginx/sites-available/oar_nginx.conf

- name: oar | add apache config file
  template:
    src: dspace.conf.j2
    dest: /etc/apache2/sites-available/dspace.conf

- name: oar | add nginx config file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {src: blocked-ips.nginx.j2, dest: /etc/nginx/include/blocked-ips.nginx}
    - {src: blocked-agents.nginx.j2, dest: /etc/nginx/include/blocked-agents.nginx}
    - {src: grouped-agents.nginx.j2, dest: /etc/nginx/include/grouped-agents.nginx}
    - {src: proxy-to-apache.nginx.j2, dest: /etc/nginx/include/proxy-to-apache.nginx}
    - {src: static-headers.nginx.j2, dest: /etc/nginx/include/static-headers.nginx}

- name: oar | enable mod_proxy
  apache2_module:
    name: "{{ item }}"
    state: present
  loop:
    - proxy
    - proxy_ajp
    - proxy_http

- name: oar | remove apache default
  file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent

- name: oar | create symlink to enable site apache 
  file:
    src: /etc/apache2/sites-available/dspace.conf
    dest: /etc/apache2/sites-enabled/dspace.conf
    state: link
  notify: restart apache

- name: oar | create symlink to enable site
  file:
    src: /etc/nginx/sites-available/oar_nginx.conf
    dest: /etc/nginx/sites-enabled/oar_nginx.conf
    state: link
  notify: restart nginx
