---
- name: geoserver | stop tomcat server
  ansible.builtin.service:
    name: tomcat9
    state: stopped
  when: running_on_server
  changed_when: false

- name: geoserver | unarchive war file
  ansible.builtin.unarchive:
    src: "{{ geoserver_url }}/{{ geoserver_version }}/{{ geoserver_file }}"
    dest: /var/lib/tomcat9/webapps
    remote_src: true
  when: running_on_server
  notify:
    - restart tomcat
  changed_when: false

# - name: geoserver | Configure postgresql repository key
  # ansible.builtin.apt_key:
    # url: "{{ postgresql_apt_key_url }}"

# - name: geoserver | Configure postgresql repository
  # ansible.builtin.apt_repository:
    # repo: "{{ postgresql_apt_repo }}"

# - name: geoserver | add postgresql repository
  # apt_repository:
    # repo: 'deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
    # state: present

# - name: geoserver | install postgis software
  # ansible.builtin.apt:
    # name: ["postgresql-10-postgis-2.4", "postgis", "postgresql-10-pgrouting"]
    # state: present
  # notify:
    # - restart postgresql

- name: geoserver | Create symlinks
  ansible.builtin.file:
    src: '{{ item.src }}'
    dest: '{{ item.link }}'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    state: 'link'
    force: true
  loop:
    - src: '/srv/shares/plum_geo_data'
      link: '/var/lib/tomcat9/webapps/geoserver/data/plum_geo_data'
    - src: '/srv/shares/figgy_geo_data'
      link: '/var/lib/tomcat9/webapps/geoserver/data/figgy_geo_data'
    - src: '/mnt/libimages2/data/jp2s/plum_prod'
      link: '/var/lib/tomcat9/webapps/geoserver/data/plum_prod'
  when: running_on_server
  changed_when: false
