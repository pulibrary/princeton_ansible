---
# defaults file for roles/lib_jobs
app_directory: 'lib-jobs'
ruby_app_name: 'sfx_worldcat'
staff_report_directory: '/opt/lib-jobs/shared/'
shared_directory: '/opt/lib-jobs/shared'
app_host_name: 'lib-jobs.princeton.edu'
application_host_protocol: 'https'
app_db_name: lib_jobs
app_db_host: localhost
app_db_user: lib_jobs
app_db_password: change_me
app_oit_client_key: 'client key'
app_oit_client_secret: 'client_secret'
app_oit_person_feed_url: '/lib-alma/1.0.0/lib-alma-feed'
app_oit_base_url: 'https://api-qual.princeton.edu:443'
app_sftp_username: ftpuser
app_sftp_password: change_me
app_sftp_host: localhost
app_lib_jobs_aspace_url: localhost
app_lib_jobs_aspace_staging_url: localhost
app_lib_jobs_aspace_user: user
app_lib_jobs_aspace_password: change_me
lib_jobs_honeybadger_key: change_me
onbase_samba_server: 172.19.70.71
onbase_samba_directory: obqadrop/Scheduler/KeywordUpdate/LIB/Alma
peoplesoft_samba_server: 10.6.49.226
peoplesoft_samba_directory: lbvchr-q
peoplesoft_bursar_samba_directory: sf_library
aspace_directory: aspace_helpers
peoplesoft_bursar_output_dir: /mnt/dms-smbserve/bursar/test
voucher_feed_recipients: 'test_user@princeton.edu'
peoplesoft_bursar_recipients: 'test_user@princeton.edu'
peoplesoft_bursar_no_report_recipients: 'test_user@princeton.edu'
transaction_error_feed_recipients: 'test_user@princeton.edu'
people_error_notification_recipients: 'test_user@princeton.edu'
git_lab_host: 'gitlab-staging-vm.lib.princeton.edu'
# logrotation
logrotate_rules:
  - name: "lib_jobs_cron"
    paths:
      - "/opt/{{ rails_app_directory }}/shared/tmp/*.log"
    options:
      rotate: "{{ logrotate_global_defaults.rotate }}"
      maxsize: "{{ logrotate_global_defaults.maxsize }}"
      create_mode: "{{ logrotate_global_defaults.create_mode }}"
      create_owner: "{{ logrotate_global_defaults.create_owner }}"
      create_group: "{{ logrotate_global_defaults.create_group }}"
      su_user: "{{ logrotate_global_defaults.su_user }}"
      su_group: "{{ logrotate_global_defaults.su_group }}"
      # Optional: add postrotate script if service needs notification
      # postrotate: |
      #   systemctl reload myservice || true
