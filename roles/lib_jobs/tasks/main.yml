---
# tasks file for roles/lib_jobs
# needed for capistrano to have access
- name: lib_jobs | Install site configuration
  ansible.builtin.template:
    src: 'ruby_app_config'
    dest: '/home/{{ deploy_user }}/app_configs/{{ ruby_app_name }}'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 0644

- name: lib_jobs | Create app directory structure
  ansible.builtin.file:
    path: '/opt/{{ app_directory }}/shared/tmp'
    state: 'directory'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 0755

- name: lib_jobs | rotate the logs for the cron job
  ansible.builtin.template:
    src: 'logrotate.d.lib_jobs.j2'
    dest: '/etc/logrotate.d/lib_jobs_cron'
    mode: 0644

# SVN
- name: Install subversion client
  ansible.builtin.apt:
    name: subversion
    state: present

- name: lib_jobs | checkout the EADs subversion repository
  ansible.builtin.subversion:
    repo: 'svn://{{ svn_host }}/libsvn/trunk/eads'
    dest: '/opt/{{ app_directory }}/shared/subversion_eads'
    update: no
  when: running_on_server
  become_user: '{{ deploy_user }}'

# PeopleSoft Mount
- name: lib_jobs | Copy peoplesoft smb credentials
  ansible.builtin.copy:
    src: files/peoplesoft.smb.credentials
    dest: /etc/peoplesoft.smb.credentials
    mode: 0644
  when: running_on_server

- name: lib_jobs | Create mount for peoplesoft shared files
  ansible.posix.mount:
    path: '/mnt/dms-smbserve/peoplesoft'
    src: '//{{ peoplesoft_samba_server }}/{{ peoplesoft_samba_directory }}'  # Use IP, //dms-smbserve isn't routable.
    fstype: cifs
    opts: 'defaults,uid={{ deploy_user_uid }},gid={{ deploy_user_uid }},credentials=/etc/peoplesoft.smb.credentials,file_mode=0777'
    state: mounted
  when: running_on_server
  become: true

- name: lib_jobs | Create mount for peoplesoft bursar shared files
  ansible.posix.mount:
    path: '/mnt/dms-smbserve/bursar'
    src: '//{{ peoplesoft_samba_server }}/{{ peoplesoft_bursar_samba_directory }}'  # Use IP, //dms-smbserve isn't routable.
    fstype: cifs
    opts: 'defaults,uid={{ deploy_user_uid }},gid={{ deploy_user_uid }},credentials=/etc/peoplesoft.smb.credentials,file_mode=0777'
    state: mounted
  when: running_on_server
  become: true

# Onbase Mount

- name: lib_jobs | Copy onbase smb credentials
  ansible.builtin.copy:
    src: files/onbase.smb.credentials
    dest: /etc/onbase.smb.credentials
    mode: 0644
  when: running_on_server

- name: lib_jobs | Create mount for onbase shared files
  ansible.posix.mount:
    path: '/mnt/oby14qa/onbase'
    src: '//{{ onbase_samba_server }}/{{ onbase_samba_directory }}'  # Use IP, //dms-smbserve isn't routable.
    fstype: cifs
    opts: 'defaults,uid={{ deploy_user_uid }},gid={{ deploy_user_uid }},credentials=/etc/onbase.smb.credentials'
    state: mounted
  when: running_on_server
  become: true

# Aspace

- name: lib_jobs | Create aspace helpers directory
  ansible.builtin.file:
    path: '/opt/{{ aspace_directory }}'
    state: 'directory'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 0755

    # Open Marc Records
- name: lib_jobs | install nfs-client
  ansible.builtin.apt:
    name: nfs-common
    state: present


- name: lib_jobs | Create open marc records directory production
  ansible.posix.mount:
    src: "{{ nfs_server_production }}:/var/nfs/open_marc_records"
    path: "/mnt/nfs/open_marc_records"
    state: mounted
    fstype: nfs
    opts: rw,sync,hard
  when:
    - running_on_server
    - "'prod' in inventory_hostname"
  become: true

- name: lib_jobs | Create open marc records directory staging
  ansible.posix.mount:
    src: "{{ nfs_server_staging }}:/var/nfs/open_marc_records"
    path: "/mnt/nfs/open_marc_records"
    state: mounted
    fstype: nfs
    opts: rw,sync,hard
  when:
    - running_on_server
    - "'staging' in inventory_hostname"
  become: true

- name: lib_jobs | Create symlink to open records
  ansible.builtin.file:
    src: '/mnt/nfs/open_marc_records'
    dest: "{{ shared_directory }}/{{ open_marc_records_directory }}"
    state: 'link'
    force: true
  when: running_on_server
