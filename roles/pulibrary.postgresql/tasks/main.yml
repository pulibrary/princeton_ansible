---
# tasks file for roles/pulibrary.postgresql
- name: PostgreSQL | Add PostgreSQL repository apt-key | apt
  apt_key:
    id: "{{ postgresql_apt_key_id }}"
    url: "{{ postgresql_apt_key_url }}"
    state: present

- name: PostgreSQL | Add PostgreSQL repository | apt
  apt_repository:
    repo: "{{ postgresql_apt_repository }}"
    state: present

- name: PostgreSQL | Make sure the dependencies are installed | apt
  apt:
    pkg: "{{ postgresql_apt_dependencies }}"
    state: present
    update_cache: yes
    cache_valid_time: "{{apt_cache_valid_time | default (3600)}}"

- name: Postgresql | ensure postgresql is installed
  package:
    name: "{{ postgresql_packages }}"
    state: present
    update_cache: true
  register: postgresql_install_postgresql
  until: postgresql_install_postgresql is succeeded

- name: Postgresql | ensure postgresql data directory exists
  file:
    path: "{{ postgresql_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: "0700"

- import_tasks: extensions.yml

- name: Postgresql | ensure postgresql has configuration file
  lineinfile:
    path: "{{ postgresql_conf_dir }}/postgresql.conf"
    regex: "^{{ item.name }} ="
    line: "{{ item.name }} = '{{ item.value }}'"
    create: true
  loop: "{{ postgresql_settings }}"
  when:
    - postgresql_settings is defined
  notify:
    - restart postgresql
  loop_control:
    label: "{{ item.name }}"

- name: Postgresql | ensure postgresql has pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_conf_dir }}/pg_hba.conf"
    backup: yes
  notify:
    - reload postgresql

- name: Postgresql | start and enable postgresql
  service:
    name: postgresql
    state: started
    enabled: true

- name: Postgresql | install psycopg2-binary
  pip:
    name: psycopg2-binary
    state: present
  register: postgresql_install_psycopg2_binary
  until: postgresql_install_psycopg2_binary is succeeded
  when:
    - postgresql_databases is defined or
      postgresql_users is defined

- name: flush handlers
  meta: flush_handlers

- import_tasks: users.yml
- import_tasks: databases.yml
