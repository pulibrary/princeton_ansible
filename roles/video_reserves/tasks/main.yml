---
- name: video_reserves | install apache php modules
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  notify: restart apache2
  loop:
    - libapache2-mod-php{{ php_version }}
    - php{{ php_version }}-mysql

- name: video_reserves | create directories for shared files
  ansible.builtin.file:
    path: '{{ capistrano_base_dir }}/{{ item }}'
    state: 'directory'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 0755
  changed_when: false
  with_items:
    - '{{ capistrano_directory }}/shared/hrc'
    - '{{ capistrano_directory }}/shared/hrc/admin'

- name: video_reserves | add htaccess restrictions
  ansible.builtin.template:
    src: htaccess.j2
    dest: "{{ apache_doc_root }}/shared/hrc/.htaccess"
    owner: "{{ deploy_user }}"
    group: www-data
    mode: '0640'
  when: running_on_server

- name: video_reserves | add config restrictions
  ansible.builtin.template:
    src: config.tpl.j2
    dest: "{{ apache_doc_root }}/shared/hrc/admin/config.php"
    owner: "{{ deploy_user }}"
    group: www-data
    mode: '0640'
  when: running_on_server

- name: video_reserves | copy apache cert files
  copy:
    src: "files/certs/{{ item }}"
    dest: "/etc/apache2/ssl/certs/"
  changed_when: false
  when: running_on_server
  with_items:
    - "{{ inventory_hostname }}_cert.cer"
    - "{{ inventory_hostname }}_chained.pem"

- name: video_reserves | copy apache private files
  copy:
    src: "files/private/{{ item }}"
    dest: "/etc/apache2/ssl/private/"
  when: running_on_server
  with_items:
    - "{{ inventory_hostname }}_priv.key"

- name: video_reserves | Add video_reserves
  ansible.builtin.template:
    src: "apache2-site.conf.j2"
    dest: "/etc/apache2/sites-available/000-video_reserves.conf"
    mode: 0644
  notify: restart apache
  become: true

- name: video_reserves | enable apache2 sites
  command: "a2ensite 000-video_reserves.conf"
  become: true
  register: apache2_enabled
  changed_when: '"Enabling site" in apache2_enabled.stdout'

- name: video_reserves | disable the default apache2 site
  command: "a2dissite 000-default"
  become: true
  register: apache2_disable
  changed_when: '"disabled." in apache2_disable.stdout'
