---
# tasks file for roles/signoz
- name: Signoz - ensure signoz group exists
  ansible.builtin.group:
    name: "{{ signoz_group }}"
    system: true

- name: Signoz - ensure signoz user exists
  ansible.builtin.user:
    name: "{{ signoz_user }}"
    group: "{{ signoz_group }}"
    system: true
    create_home: false
    home: "{{ signoz_install_dir }}"

- name: Signoz - configure Git safe.directory for /opt/signoz
  community.general.git_config:
    scope: global
    name: safe.directory
    value: "{{ signoz_install_dir }}"

- name: Signoz - clone SigNoz repository
  ansible.builtin.git:
    repo: "{{ signoz_repo_url }}"
    dest: "{{ signoz_install_dir }}"
    version: "{{ signoz_repo_version }}"
    update: true
    force: true
    accept_hostkey: true
  become: true
  become_user: root

- name: Signoz - ensure correct ownership of cloned files
  ansible.builtin.file:
    path: "{{ signoz_install_dir }}"
    recurse: true
    owner: "{{ signoz_user }}"
    group: "{{ signoz_group }}"

- name: Install APT prerequisites
  ansible.builtin.apt:
    name:
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - gnupg-agent
    update_cache: true
    state: present

- name: Signoz - add Docker GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Signoz - add Docker apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
    update_cache: true

- name: Signoz - check if docker-ce package is available
  ansible.builtin.command: apt-cache policy docker-ce
  register: docker_ce_policy
  changed_when: false

- name: Install official Docker Engine packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: true
  when: "docker_ce_policy.stdout.find('Candidate: (none)') == -1"

- name: Signoz - install distribution Docker package
  ansible.builtin.apt:
    name:
      - docker.io
    state: present
    update_cache: true
  when: "docker_ce_policy.stdout.find('Candidate: (none)') != -1"

- name: Signoz - ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Signoz - ensure Docker Compose is installed
  ansible.builtin.apt:
    name: docker-compose
    state: present
    update_cache: true

- name: Signoz - start SigNoz services
  community.docker.docker_compose:
    project_src: "{{ signoz_install_dir }}/deploy/docker"
    files:
      - docker-compose.yaml
    state: present
    remove_orphans: true

- name: Signoz - wait for SigNoz health endpoint
  ansible.builtin.uri:
    url: http://localhost:8080/api/v1/health?live=1
    status_code: 200
