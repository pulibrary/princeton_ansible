#!/usr/bin/bash
{{ ansible_managed | comment }}
# Checkmk local check â€” Solr 8 backup verification
# Looks for: /solr/data/cloud_backup/solr8/<env>/YYYYMMDD/*-YYYYMMDD.bk

STATE_OK=0
STATE_WARN=1
STATE_CRIT=2
STATE_UNKNOWN=3

CURRENT_DATE=$(date +%Y%m%d)
BACKUP_ENV="{{ runtime_env | default('staging') }}"

backup_dir="/solr/data/cloud_backup/solr8/${BACKUP_ENV}/${CURRENT_DATE}"
service_name="solr8_backup_${BACKUP_ENV}"

if [ ! -d "$backup_dir" ]; then
  echo "${STATE_CRIT} ${service_name} - CRITICAL: Backup directory (${backup_dir}) does not exist"
  echo "${STATE_CRIT} solr_backup_summary count=0 missing=1 - CRITICAL: Missing backups for: solr8-${BACKUP_ENV}"
  exit 0
fi

backup_count=$(find "$backup_dir" -name "*-${CURRENT_DATE}.bk" | wc -l)

if [ "$backup_count" -eq 0 ]; then
  echo "${STATE_CRIT} ${service_name} - CRITICAL: No backups found for solr8 ${BACKUP_ENV} on ${CURRENT_DATE}"
  echo "${STATE_CRIT} solr_backup_summary count=0 missing=1 - CRITICAL: Missing backups for: solr8-${BACKUP_ENV}"
  exit 0
fi

collections=$(find "$backup_dir" -name "*-${CURRENT_DATE}.bk" \
  | sed -e "s|$backup_dir/||g" -e "s|-${CURRENT_DATE}.bk||g" \
  | tr '\n' ' ')

echo "${STATE_OK} ${service_name} count=${backup_count} - OK: Found ${backup_count} backups for solr8 ${BACKUP_ENV} on ${CURRENT_DATE}: ${collections}"
echo "${STATE_OK} solr_backup_summary count=${backup_count} - OK: All Solr 8 backups completed successfully for ${CURRENT_DATE}"
exit 0
