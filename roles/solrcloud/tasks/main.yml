---
#
- name: Solrcloud | Configure vector using template
  ansible.builtin.template:
    src: vector.yaml.j2
    dest: /etc/vector/vector.yaml
    mode: "0644"
  when:
    - running_on_server
  notify:
    - restart vector
  tags:
    - logs

- name: Solrcloud | Ensure Vector is running and enabled
  ansible.builtin.service:
    name: vector
    state: started
    enabled: true
  when:
    - running_on_server
  tags:
    - logs

- name: Solrcloud | Install dependencies
  ansible.builtin.apt:
    name: ["cifs-utils"]
    state: present

- name: Solrcloud | create directories for mounts
  ansible.builtin.file:
    path: "/mnt/{{ item }}"
    state: "directory"
    mode: "0755"
    group: deploy
    owner: deploy
  loop:
    - solr_backup

- name: Solrcloud | Copy smb credentials
  ansible.builtin.copy:
    src: "files/{{ item }}"
    dest: "/etc/{{ item }}"
    mode: 0644
  when:
    - running_on_server
  loop:
    - solr.smb.credentials

- name: Solrcloud | Create mount to diglibdata shares
  ansible.posix.mount:
    path: "/mnt/{{ item.path }}"
    src: "//diglibdata1.princeton.edu/{{ item.src }}"
    fstype: cifs
    opts: "credentials=/etc/{{ item.opts }}.smb.credentials,uid=1001,gid=1001"
    state: mounted
  when:
    - running_on_server
  loop:
    - { path: "solr_backup", src: "solrbackup", opts: "solr" }
  tags:
    - fix_backups

- name: Solrcloud | Ensure the bind mount is active
  ansible.posix.mount:
    src: /mnt/solr_backup
    path: "{{ solr_data_dir }}/backup"
    state: mounted
    opts: bind
    fstype: none

- name: Solrcloud | Create Solr bind mount directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  loop:
    - "{{ solr_data_dir }}/backup"          # /solr/data

- name: Solrcloud | Ensure the bind mount is configured in /etc/fstab
  ansible.posix.mount:
    src: /mnt/solr_backup
    path: "{{ solr_data_dir }}/backup"
    state: present
    fstype: none
    opts: bind
    dump: '0'
    passno: '0'

- name: Solrcloud | update host file
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: "{{ item.address }}.*{{ item.hostname }}$"
    line: "{{ item.address }} {{ item.hostname }}"
    state: present
  become: true
  loop:
    - {
        hostname: "{{ lib_zk1_host_name }}.princeton.edu",
        address: "{{ lib_zk1_host }}",
      }
    - {
        hostname: "{{ lib_zk2_host_name }}.princeton.edu",
        address: "{{ lib_zk2_host }}",
      }
    - {
        hostname: "{{ lib_zk3_host_name }}.princeton.edu",
        address: "{{ lib_zk3_host }}",
      }
  tags:
    - hosts
  when: lib_zk1_host_name != "localhost" and lib_zk2_host_name != "localhost" and lib_zk3_host_name != "localhost"

- name: Solrcloud | solr cloud install node
  ansible.builtin.include_tasks: install.yml
  tags:
    - install

- name: Solrcloud | configure solr cloud
  ansible.builtin.include_tasks: config.yml
  tags:
    - configure

- name: Solrcloud | run solr service
  ansible.builtin.include_tasks: service.yml
  tags:
    - service
