---
- name: Solrcloud | Check for zookeeper connection variables
  ansible.builtin.set_fact:
    solr_zookeeper_hosts_string: "{{ solr_zookeeper_hosts | default('localhost:2181') | join(',') }}"
  when: solr_zookeeper_hosts_string is not defined

- name: Solrcloud | Set default solr_znode value if not provided
  ansible.builtin.set_fact:
    solr_znode: "/solr"
  when: solr_znode is not defined

- name: Solrcloud | Check for solr znode
  ansible.builtin.command: >
    {{ solr_installation }}/bin/solr zk ls /
    -z {{ solr_zookeeper_hosts_string }}
  register: znode_check
  ignore_errors: true
  changed_when: false

- name: Solrcloud | Create zk chroot / solr znode using bin/solr
  ansible.builtin.command: >
    {{ solr_installation }}/bin/solr zk mkroot {{ solr_znode }}
    -z {{ solr_zookeeper_hosts_string }}
  when:
    - znode_check is succeeded
    - znode_check.stdout is defined
    - solr_znode not in znode_check.stdout_lines
    - solr_znode | length > 0
  changed_when: false

- name: Solrcloud | Configure SolrCloud init script
  ansible.builtin.template:
    src: 'solr.in.sh.j2'
    dest: '/etc/default/solr.in.sh'
    owner: '{{ solr_user }}'
    group: '{{ solr_group }}'
    mode: "0644"
    force: true
  changed_when: false
  notify: Restart solr

- name: Solrcloud | Configure high ulimit value for Solr
  ansible.builtin.template:
    src: 'solr.conf.j2'
    dest: '/etc/security/limits.d/solr.conf'
    mode: "0644"
    force: true
  notify: Restart solr

- name: Solrcloud | Configure SolrCloud properties
  ansible.builtin.template:
    src: 'solr.xml.j2'
    dest: '{{ solr_data_dir }}/solr.xml'
    owner: '{{ solr_user }}'
    group: '{{ solr_group }}'
    mode: "0644"
  notify: Restart solr
  when:
    - solr_cloud_download_version is version('8.6.0', '>=')

- name: Solrcloud | Configure Solr 9.x specific settings
  ansible.builtin.include_tasks: solr9_config.yml
  when: solr_cloud_download_version is version('9.0.0', '>=')

- name: Solrcloud | Configure logging
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: '{{ solr_user }}'
    group: '{{ solr_group }}'
    mode: "0644"
  loop:
    - { src: 'log4j.properties.j2', dest: '{{ solr_installation }}/server/resources/log4j.properties' }
    - { src: 'log4j2.xml.j2', dest: '{{ solr_installation }}/server/resources/log4j2.xml' }
  notify: Restart solr

- name: Solrcloud | Create solr home lib dir
  ansible.builtin.file:
    path: "{{ solr_data_dir }}/lib"
    owner: '{{ solr_user }}'
    group: '{{ solr_group }}'
    state: directory
    mode: "0755"
  tags: plugins

- name: Solrcloud | Copy plugin jar files
  ansible.builtin.copy:
    src: "files/{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  loop:
    - { src: "CJKFoldingFilter.jar", dest: "{{ jardirectory }}/CJKFoldingFilter.jar" }
    - { src: "lucene-umich-solr-filters-6.0.0-SNAPSHOT.jar", dest: "{{ jardirectory }}/lucene-umich-solr-filters-6.0.0-SNAPSHOT.jar" }
    - { src: "jts-core-1.15.1.jar", dest: "{{ webapp_jardirectory }}/jts-core-1.15.1.jar" }
    - { src: "nashorn-core-15.4.jar", dest: "{{ solr_data_dir }}/lib/nashorn-core-15.4.jar" }
    - { src: "asm-7.3.1.jar", dest: "{{ solr_data_dir }}/lib/asm-7.3.1.jar" }
    - { src: "asm-commons-7.3.1.jar", dest: "{{ solr_data_dir }}/lib/asm-commons-7.3.1.jar" }
    - { src: "asm-tree-7.3.1.jar", dest: "{{ solr_data_dir }}/lib/asm-tree-7.3.1.jar" }
    - { src: "asm-util-7.3.1.jar", dest: "{{ solr_data_dir }}/lib/asm-util-7.3.1.jar" }
  when:
    - running_on_server
    - (jardirectory is defined and item.dest is search("jardirectory")) or
      (webapp_jardirectory is defined and item.dest is search("webapp_jardirectory")) or
      (item.dest is search("solr_data_dir"))
  notify: Restart solr
  tags: plugins
