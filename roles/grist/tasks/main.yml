---
- name: Grist - ensure directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0750"
    owner: "1000"
    group: "1000"
  loop:
    - "{{ grist_data_root }}"
    - "{{ grist_data_root }}/docs"
    - "{{ grist_data_root }}/saml"

- name: Grist - Install SP private key
  ansible.builtin.copy:
    dest: "{{ grist_data_root }}/saml/sp.key"
    content: "{{ vault_grist_sp_key }}"
    owner: "1000"
    group: "1000"
    mode: "0600"

- name: Grist - Install SP public cert
  ansible.builtin.copy:
    dest: "{{ grist_data_root }}/saml/sp.crt"
    content: "{{ vault_grist_sp_crt }}"
    owner: "1000"
    group: "1000"
    mode: "0644"

- name: Grist - Install Entra IdP cert
  ansible.builtin.copy:
    dest: "{{ grist_data_root }}/saml/entra-idp.crt"
    content: "{{ vault_grist_idp_cert }}"
    owner: "1000"
    group: "1000"
    mode: "0644"

# Compute the exact Git SHA like the  nomad/bin/deploy script
- name: Grist - Resolve repo SHA for branch
  delegate_to: localhost
  run_once: true
  ansible.builtin.shell: |
    set -euo pipefail
    git ls-remote https://github.com/pulibrary/{{ grist_repo }}.git {{ grist_branch }} | awk '{print substr($1,1,40)}'
  register: _grist_sha

- name: Grist - Short SHA (7)
  delegate_to: localhost
  run_once: true
  ansible.builtin.set_fact:
    grist_short_sha: "{{ _grist_sha.stdout[:7] }}"

# Pull the HCL from the same repo/SHA and launch Nomad job on the Nomad host
- name: Grist - Fetch Nomad HCL for this SHA to remote
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/pulibrary/{{ grist_repo }}/{{ _grist_sha.stdout }}/{{ grist_nomad_job }}"
    dest: "/tmp/grist-sandbox.{{ grist_short_sha }}.hcl"
    mode: "0644"

- name: Grist - Run Nomad job
  shell: |
    nomad job run -var "branch_or_sha={{ grist_short_sha }}" /tmp/grist-sandbox.{{ grist_short_sha }}.hcl
  register: nomad_run
  changed_when: "'Evaluation triggered' in nomad_run.stdout or 'successfully' in nomad_run.stdout"
