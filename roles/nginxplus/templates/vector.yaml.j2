# {{ ansible_managed | comment }}

data_dir: "/var/lib/vector"

api:
  enabled: true
  address: "127.0.0.1:8686"

sources:
  nginx_access:
    type: file
    include:
      - {{ nginx_access_log_path | default('/var/log/nginx/access.log') }}
    read_from: beginning
  nginx_error:
    type: file
    include:
      - {{ nginx_error_log_path | default('/var/log/nginx/error.log') }}
    read_from: beginning

transforms:
  parse_nginx_access:
    type: remap
    inputs:
      - nginx_access
    source: |
      # 1. Parse the JSON access log line
      . = parse_json!(.message)

      # 2. Convert the time field to a proper timestamp for Vector
      .timestamp = parse_timestamp!(.time_local, "%d/%b/%Y:%H:%M:%S %z")
      ._time     = format_timestamp!(.timestamp, format: "%Y-%m-%dT%H:%M:%S.%3fZ")

      # 3. Set a safe message and hostname
      ._msg  = .request
      .host  = get_hostname!()

      # 4. Tag with a “service” for victorialogs filtering
      .service = "nginx"

      # 5. (Optional) Keep log_type/status/bytes_sent if you want more labels
      .log_type   = "nginx_access"
      .status     = .status
      .bytes_sent = .body_bytes_sent

  parse_nginx_error:
    type: remap
    inputs:
      - nginx_error
    source: |
      # 1. Assign current time as timestamp
      .timestamp = parse_timestamp!(now(), format: "%Y-%m-%dT%H:%M:%S.%3fZ")
      ._time     = format_timestamp!(.timestamp, format: "%Y-%m-%dT%H:%M:%S.%3fZ")

      # 2. Use the raw error message
      ._msg    = .message
      .host    = get_hostname!()

      # 3. Tag with the same service label
      .service = "nginx"

      # 4. Set a log_type for differentiation if you like
      .log_type = "nginx_error"
      .level    = "error" 

sinks:
  # console_debug:
  #   type: console
  #   inputs:
  #     - parse_nginx_access
  #     - parse_nginx_error
  #   encoding:
  #     codec: json
  #  uncomment above to debug
 
  victorialogs:
    type: http
    inputs:
      - parse_nginx_access
      - parse_nginx_error
    uri: "{{ victorialogs_uri }}/insert/jsonline?_stream_fields=host"
    method: post
    compression: gzip
    encoding:
      codec: json
    framing:
      method: newline_delimited
    request:
      headers:
        Content-Type: "application/x-ndjson"
    healthcheck:
      enabled: {{ vector_healthcheck_enabled | default(false) }}
