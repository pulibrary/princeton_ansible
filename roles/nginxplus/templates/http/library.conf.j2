# Ansible managed
# local changes will be overwritten with each playbook run
#
proxy_cache_path /data/nginx/{{ item.name }}/NGINX_cache/ keys_zone={{ item.name }}cache:10m;

upstream {{ item.name }} {
  {% if item.lbtechnique is defined %}
    {{ item.lbtechnique }};
  {% endif %}
    zone {{ item.name }} {{ item.zone_size | default("64k") }};
    {% for name in item.servers %}
      server {{ name }}.princeton.edu resolve;
    {% endfor %}
    sticky learn
          create=$upstream_cookie_{{ item.short_name }}cookie
          lookup=$cookie_{{ item.short_name }}cookie
          zone={{ item.short_name }}client_sessions:1m;
}

# redirect HTTP traffic to HTTPS
server {
    listen 80;
    server_name {{ item.name }}.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name {{ item.name }}.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/{{ item.name }}/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/{{ item.name }}/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
    client_max_body_size       0;

  {% if item.visibility == "public" %}
    location {{ item.location }} {
    {% if item.app_protect == "enabled" %}
        app_protect_enable on;
        app_protect_security_log_enable on;
    {% endif %}
        proxy_pass http://{{ item.name }};
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache {{ item.name }}cache;
        proxy_intercept_errors on;
        # TODO don't do a health check if there's only one server
        # TODO add a URI for the health check if needed
        health_check interval=10 fails=3 passes=2;
    }
  {% else %}
    location {{ item.location }} {
        proxy_pass http://{{ item.name }};
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache {{ item.name }}cache;
        proxy_intercept_errors on;
        health_check interval=10 fails=3 passes=2;
        # allow princeton network
        include /etc/nginx/conf.d/templates/restrict.conf;
        {% if item.added_restrictions is defined %}
        {% for name in item.added_restrictions %}
          include /etc/nginx/conf.d/templates/{{ name }};
        {% endfor %}
        {% endif %}
        # block non-princeton traffic
        deny all;
    }
  {% endif %}

    # template config for error handling
    include /etc/nginx/conf.d/templates/{{ error_handling_template | default("errors.conf") }}

}
