# Ansible managed
proxy_cache_path /data/nginx/discovery-staging/NGINX_cache/ keys_zone=discovery-stagingcache:10m;
proxy_cache_path /data/nginx/describe-staging/NGINX_cache/ keys_zone=describe-stagingcache:10m;
# Note that the URL datacommons-staging.princeton.edu will be the front end for several
# applications that run on different hosts. PDC Discovery and PDC Describe to start,
# but this will grow over time as the data curation service expands.


upstream staging-discovery {
	zone discovery-prod 64k;
	server pdc-discovery-staging1.princeton.edu resolve;
	server pdc-discovery-staging2.princeton.edu resolve;
}


upstream staging-describe {
	zone describe-prod 64k;
	server pdc-describe-staging1.princeton.edu resolve;
	server pdc-describe-staging2.princeton.edu resolve;
}


server {
    listen 80;
    server_name datacommons-staging.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
	http2 on;
    server_name datacommons-staging.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/datacommons-staging/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/datacommons-staging/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
    client_max_body_size       0;

    # Redirect top level traffic to /discovery 
    # until the top level has content.
    location / {
        return 302 https://$server_name/discovery/;
    }

	location /discovery/ {
        proxy_pass http://staging-discovery/discovery/;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache discovery-stagingcache;
        # handle errors using errors.conf
        proxy_intercept_errors on;
	}

    location /describe/ {
        proxy_pass http://staging-describe/describe/;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache describe-stagingcache;
        # handle errors using errors.conf
        proxy_intercept_errors on;
	}

    include /etc/nginx/conf.d/templates/errors.conf;
}
