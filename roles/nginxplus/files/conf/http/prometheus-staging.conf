# Ansible managed
proxy_cache_path /data/nginx/prometheus-staging/NGINX_cache/ keys_zone=prometheus-stagingcache:10m;

upstream prometheus-staging {
    zone prometheus-staging 64k;
    server prometheus-staging1.princeton.edu resolve;
    sticky learn
          create=$upstream_cookie_prometheusstagingcookie
          lookup=$cookie_prometheusstagingcookie
          zone=prometheusstagingclient_sessions:1m;
}

server {
    listen 80;
    server_name prometheus-staging.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    # http2 on;
    server_name prometheus-staging.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/prometheus-staging/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/prometheus-staging/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;

    location / {
    #    app_protect_enable on;
    #    app_protect_security_log_enable on;
        proxy_http_version 1.1;
        proxy_pass http://prometheus-staging;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Host $http_host;
        proxy_cache prometheus-stagingcache;
        # handle errors using errors.conf
        proxy_intercept_errors on;
        # health_check interval=10 fails=3 passes=2;
        # allow princeton network
        # include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        # deny all;
    }

    include /etc/nginx/conf.d/templates/errors.conf;

}
