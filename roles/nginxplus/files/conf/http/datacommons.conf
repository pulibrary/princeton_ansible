# ================
# PLEASE NOTE THAT if you make changes to this file you probably also
# want to make the same changes to pdc-describe|discovery_prod.conf
# ================

# Ansible managed
proxy_cache_path /var/cache/nginx/discovery-prod/ keys_zone=discovery-prodcache:10m;
proxy_cache_path /var/cache/nginx/describe-prod/ keys_zone=describe-prodcache:10m;
# Note that the URL datacommons.princeton.edu will be the front end for several
# applications that run on different hosts. PDC Discovery and PDC Describe to start,
# but this will grow over time as the data curation service expands.

upstream discovery {
	zone discovery-prod 64k;
    # lowchallenge challenges after 20 requests from xx.xx.<>.<>.<>
    # server service.consul service=lowchallenge.traefik-wall-production resolve max_fails=0;
    # highchallenge challenges everyone. Comment above and uncomment
    # this when you're being swarmed by bots.
    server service.consul service=highchallenge.traefik-wall-production resolve max_fails=0;
    # If Traefik crashes, fall down to the box directly.
	server pdc-discovery-prod1.princeton.edu max_fails=0 backup;
	server pdc-discovery-prod2.princeton.edu max_fails=0 backup;
    resolver nomad-host-prod1.lib.princeton.edu nomad-host-prod2.lib.princeton.edu nomad-host-prod3.lib.princeton.edu valid=5s;
}

upstream describe {
	zone describe-prod 64k;
    # Only discovery machines should be routed to traefik otherwise describe request will get routed to discovery and fail
    #  DO NOT ADD TRAEFIK HERE
	server pdc-describe-prod1.princeton.edu max_fails=0;
	server pdc-describe-prod2.princeton.edu max_fails=0;
	server pdc-describe-prod3.princeton.edu max_fails=0;
}


server {
    listen 80;
    server_name datacommons.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
	http2 on;
    server_name datacommons.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/datacommons/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/datacommons/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
    client_max_body_size       0;

    # Redirect top level traffic to /discovery
    # until the top level has content.
    location / {
        return 302 https://$server_name/discovery/;
    }

	location /discovery/ {
        proxy_pass http://discovery/discovery/;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_cache discovery-prodcache;
        health_check uri=/discovery/health.json interval=10 fails=3 passes=2;
        # handle errors using errors.conf
        proxy_intercept_errors on;
	}

    location /describe/ {
        app_protect_enable off;

        proxy_pass http://describe/describe/;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache describe-prodcache;
        health_check uri=/describe/health.json interval=10 fails=3 passes=2;
        # handle errors using errors.conf
        proxy_intercept_errors on;
	}

    include /etc/nginx/conf.d/templates/errors.conf;
}
