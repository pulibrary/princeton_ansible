# Ansible managed
proxy_cache_path /var/cache/nginx/maps-staging/ keys_zone=maps-stagingcache:10m;

upstream maps-staging {
    zone maps-staging 64k;
    # lowchallenge challenges after 20 requests from xx.xx.<>.<>.<>
    # server service.consul service=lowchallenge.traefik-wall-staging resolve max_fails=0;
    # highchallenge challenges everyone. Comment above and uncomment
    # this when you're being swarmed by bots.
    server service.consul service=highchallenge.traefik-wall-staging resolve max_fails=0;
    # If Traefik crashes, fall down to the box directly.
    server maps-staging2.princeton.edu resolve max_fails=0 backup;
    sticky learn
          create=$upstream_cookie_mapsstagingcookie
          lookup=$cookie_mapsstagingcookie
          zone=mapsstagingclient_sessions:1m;
    resolver nomad-host-prod1.lib.princeton.edu nomad-host-prod2.lib.princeton.edu nomad-host-prod3.lib.princeton.edu valid=5s;
    resolver_timeout 2s;
}

server {
    listen 80;
    server_name maps-staging.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name maps-staging.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/maps-staging/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/maps-staging/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;

    location / {
        # app_protect_enable on;
        # app_protect_security_log_enable on;
        proxy_pass http://maps-staging;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache maps-stagingcache;
        proxy_connect_timeout      2h;
        proxy_send_timeout         2h;
        proxy_read_timeout         2h;
        proxy_intercept_errors on;
        health_check interval=10 fails=3 passes=2;
        # allow princeton network
        include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        deny all;
    }

    include /etc/nginx/conf.d/templates/errors.conf;

}
