# This is an {{ ansible_managed }} file. Any changes made will be overwritten
# when the role is run again
proxy_cache_path /data/nginx/library-prod/NGINX_cache/ keys_zone=library-prodcache:10m levels=1:2 inactive=3h max_size=10g;
limit_req_zone $binary_remote_addr zone=libweb_ip_rate_limit:10m rate=5r/s;

upstream library-prod {
    zone library-prod 256k;
    least_conn;
    server library-prod1.princeton.edu resolve;
    server library-prod3.princeton.edu resolve;
    server library-prod4.princeton.edu resolve;
    sticky learn
          create=$upstream_cookie_library-prodcookie
          lookup=$cookie_library-prodcookie
          zone=library-prodclient_sessions:1m;
}

server {
    listen 80;
    server_name libblogs.princeton.edu;
    rewrite ^/renovations(.*)$ https://library.princeton.edu/firestone/renovations/$1 permanent;
    rewrite ^/republic(.*)$ https://library.princeton.edu/republic/$1 permanent;
}

server {
    listen 80;
    server_name lib-prod.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 80;
    server_name library.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name lib-prod.princeton.edu;
    rewrite ^/(.*)$ https://library.princeton.edu/$1 permanent;

    client_max_body_size 8m;

    ssl_certificate            /etc/nginx/conf.d/ssl/certs/lib-prod_princeton_edu_chained.pem;
    ssl_certificate_key        /etc/nginx/conf.d/ssl/private/lib-prod_princeton_edu_priv.key;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
}

server {
    listen 443 ssl http2;
    server_name library.princeton.edu;

    client_max_body_size 8m;

    ssl_certificate            /etc/nginx/conf.d/ssl/certs/library_princeton_edu_chained.pem;
    ssl_certificate_key        /etc/nginx/conf.d/ssl/private/library_princeton_edu_priv.key;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;

    location / {
        proxy_pass http://library-prod;
        health_check uri=/health interval=10 fails=3 passes=2;
        proxy_set_header Host $http_host;
    }

    location ~ ^(\/sites)?(\/default)?(\/files)?\/(styles|js|css|assets|images|javascripts|stylesheets|swfs|system)\/ {
        proxy_pass http://library-prod;
        health_check uri=/health interval=10 fails=3 passes=2;
        proxy_set_header Host $http_host;

        # Disabling rate limiting for now, as assets were being included.
        # If we add this back, ensure we don't include static assets in
        # sites/all/themes and sites/default/*
        #limit_req zone=libweb_ip_rate_limit burst=12 delay=8;
        proxy_cache library-prodcache;
        proxy_cache_min_uses 3;
        proxy_cache_key "$host$request_uri $cookie_user";
        proxy_cache_use_stale error timeout updating http_500 http_502
                              http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
    }

    include /etc/nginx/conf.d/templates/prod-maintenance.conf;

    include /etc/nginx/conf.d/templates/libwww-proxy-pass-prod.conf;

    include /etc/nginx/conf.d/templates/libwww-proxy-pass.conf;
}