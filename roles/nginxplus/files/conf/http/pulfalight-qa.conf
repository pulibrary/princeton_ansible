#### Ansible managed
proxy_cache_path /var/cache/nginx/pulfalight-qa/ keys_zone=pulfalight-qacache:10m;

upstream pulfalight-qa {
    zone pulfalight-qa 64k;
    # lowchallenge challenges after 20 requests from xx.xx.<>.<>.<>
    server service.consul service=lowchallenge.traefik-wall-production resolve max_fails=0;
    # highchallenge challenges everyone. Comment above and uncomment
    # this when you're being swarmed by bots.
    # server service.consul service=highchallenge.traefik-wall-production resolve max_fails=0;
    # If Traefik crashes, fall down to the box directly.
    server pulfalight-qa-web1.princeton.edu resolve backup;
    sticky learn
          create=$upstream_cookie_pulfalightqacookie
          lookup=$cookie_pulfalightqacookie
          zone=pulfalightqaclient_sessions:1m;
    resolver nomad-host-prod1.lib.princeton.edu nomad-host-prod2.lib.princeton.edu nomad-host-prod3.lib.princeton.edu valid=5s;
    resolver_timeout 2s;
}

server {
    listen 80;
    server_name findingaids-qa.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
   listen 443 ssl;
   server_name findingaids-qa.princeton.edu;

   ssl_certificate            /etc/letsencrypt/live/findingaids-qa/fullchain.pem;
   ssl_certificate_key        /etc/letsencrypt/live/findingaids-qa/privkey.pem;
   ssl_session_cache          shared:SSL:1m;
   ssl_prefer_server_ciphers  on;

   location / {
       # app_protect_enable on;
       # app_protect_security_log_enable on;
       proxy_pass http://pulfalight-qa;
       proxy_set_header X-Forwarded-Host $host;
       proxy_set_header X-Forwarded-Proto https;
       proxy_set_header X-Forwarded-For $remote_addr;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_cache pulfalight-qacache;
       proxy_connect_timeout      2h;
       proxy_send_timeout         2h;
       proxy_read_timeout         2h;
       health_check  uri=/health.json interval=10 fails=3 passes=2;
        # allow princeton network
        include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        deny all;
   }

   include /etc/nginx/conf.d/templates/errors-without-404.conf;

}
