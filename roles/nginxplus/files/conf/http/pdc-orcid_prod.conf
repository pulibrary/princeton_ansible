# Ansible managed
proxy_cache_path /data/nginx/pdc-orcid-prod/NGINX_cache/ keys_zone=pdc-orcid-prodcache:10m;

upstream pdc-orcid-prod {
    zone pdc-orcid-prod 64k;
    server pdc-orcid-prod1.princeton.edu resolve;
    server pdc-orcid-prod2.princeton.edu resolve;

    sticky learn
          create=$upstream_cookie_pdcorcidprodcookie
          lookup=$cookie_pdcorcidprodcookie
          zone=pdc-orcidprodclient_sessions:1m;
}


server {
    listen 80;
    server_name pdc-orcid-prod.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name pdc-orcid-prod.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/pdc-orcid-prod/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/pdc-orcid-prod/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
    client_max_body_size       0;

    # Redirect top level traffic to /describe
    # until the top level has content.
    location / {
        return 302 https://$server_name/describe/;
    }

    location /orcid/ {
#        app_protect_enable on;
#        app_protect_security_log_enable on;
        proxy_pass http://pdc-orcid-prod/orcid/;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache pdc-orcid-prodcache;
        # handle errors using errors.conf
        proxy_intercept_errors on;
        health_check uri=/orcid interval=10 fails=3 passes=2;
        # allow princeton network (during test period)
        include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        deny all;
    }

    include /etc/nginx/conf.d/templates/errors.conf;

}
