# Ansible managed
proxy_cache_path /var/cache/nginx/cicognara-staging/ keys_zone=cicognara-stagingcache:10m;

upstream cicognara-staging {
    zone cicognara-staging 64k;
    server service.consul service=cicognara-staging-web resolve;
    sticky learn
          create=$upstream_cookie_cicognarastagingcookie
          lookup=$cookie_cicognara-stagingcookie
          zone=cicognara-stagingclient_sessions:1m;
    resolver nomad-host-prod1.lib.princeton.edu:8600 nomad-host-prod2.lib.princeton.edu:8600 nomad-host-prod3.lib.princeton.edu:8600 valid=5s;
    resolver_timeout 2s;
}

server {
    listen 80;
    server_name cicognara-staging.lib.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name cicognara-staging.lib.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/cicognara-staging.lib/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/cicognara-staging.lib/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;

    location / {
    #    # app_protect_enable on;
    #    # app_protect_security_log_enable on;
        proxy_pass http://cicognara-staging;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache cicognara-stagingcache;
        proxy_connect_timeout      2h;
        proxy_send_timeout         2h;
        proxy_read_timeout         2h;
        # handle errors using errors.conf
        proxy_intercept_errors on;
    }

    # both staging-maintenance.conf and errors.conf define error_page
    # only use one!
    # include /etc/nginx/conf.d/templates/staging-maintenance.conf;
    include /etc/nginx/conf.d/templates/errors.conf;

}
