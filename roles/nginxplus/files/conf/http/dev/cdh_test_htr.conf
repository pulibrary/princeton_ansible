# Ansible managed
proxy_cache_path /var/cache/nginx/cdh-test-htr/ keys_zone=cdh-test-htrcache:10m;

upstream cdh-test-htr {
    zone cdh-test-htr 64k;
    server cdh-test-htr1.lib.princeton.edu resolve;
    server cdh-test-htr2.lib.princeton.edu resolve;

    sticky learn
          create=$upstream_cookie_cdh-test-htrcookie
          lookup=$cookie_cdh-test-htrcookie
          zone=cdh-test-htrclient_sessions:1m;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name test-htr.lib.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name test-htr.lib.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/test-htr.lib/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/test-htr.lib/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
    client_max_body_size       0;


    location / {
        # app_protect_enable on;
        # app_protect_security_log_enable on;
        proxy_pass http://cdh-test-htr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # enable proxying websockets
        proxy_http_version 1.1;
        proxy_set_header    Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_cache cdh-test-htrcache;
        # handle errors using errors.conf
        proxy_intercept_errors on;
        health_check interval=10 fails=3 passes=2;
        # allow princeton network
        # include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        # deny all;
    }

    include /etc/nginx/conf.d/templates/errors.conf;
}
