# Ansible managed
proxy_cache_path /data/nginx/tigerdata-prod/NGINX_cache/ keys_zone=tigerdata-prodcache:10m;

upstream tigerdata-prod {
    zone tigerdata-prod 64k;
    server tigerdata-prod1.princeton.edu resolve;
    server tigerdata-prod2.princeton.edu resolve;
    sticky learn
          create=$upstream_cookie_pdctigerdataprodcookie
          lookup=$cookie_pdctigerdataprodcookie
          zone=pdctigerdataprodclient_sessions:1m;
}

server {
    listen 80;
    server_name tigerdata-prod.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}


server {
    listen 443 ssl http2;
    server_name tigerdata-prod.princeton.edu;

    ssl_certificate            /etc/nginx/conf.d/ssl/certs/tigerdata-prod_princeton_edu_chained.pem;
    ssl_certificate_key        /etc/nginx/conf.d/ssl/private/tigerdata-prod_princeton_edu_priv.key;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
    client_max_body_size       0;

    location / {
        proxy_pass http://tigerdata-prod/;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache tigerdata-prodcache;
        # handle errors using errors.conf
        proxy_intercept_errors on;
        health_check interval=10 fails=3 passes=2;
        # allow princeton network
        include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        deny all;
    }

    include /etc/nginx/conf.d/templates/errors.conf;

}
