# Ansible managed
proxy_cache_path /var/cache/nginx/figgy/ keys_zone=figgycache:10m;

upstream figgy {
    least_time last_byte inflight;
    zone figgy 128k;
    # lowchallenge challenges after 20 requests from xx.xx.<>.<>.<>
    # server service.consul service=lowchallenge.traefik-wall-production resolve max_fails=0;
    # highchallenge challenges everyone. Comment above and uncomment
    # this when you're being swarmed by bots.
    server service.consul service=highchallenge.traefik-wall-production resolve max_fails=0;
    # If Traefik crashes, fall down to the box directly.
    server figgy-web-prod1.princeton.edu resolve max_fails=0 backup;
    server figgy-web-prod2.princeton.edu resolve max_fails=0 backup;
    server figgy-web-prod3.princeton.edu resolve max_fails=0 backup;
    server figgy-web-prod4.princeton.edu resolve max_fails=0 backup;
    sticky learn
          create=$upstream_cookie_figgycookie
          lookup=$cookie_figgycookie
          zone=figgyclient_sessions:1m;
    resolver nomad-host-prod1.lib.princeton.edu nomad-host-prod2.lib.princeton.edu nomad-host-prod3.lib.princeton.edu valid=5s;
    resolver_timeout 2s;
}

server {
    listen 80;
    server_name figgy.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name figgy.princeton.edu;

    client_max_body_size 0;

    ssl_certificate            /etc/letsencrypt/live/figgy/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/figgy/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;

    location / {
        proxy_pass http://figgy;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache figgycache;
        proxy_connect_timeout      2h;
        proxy_send_timeout         2h;
        proxy_read_timeout         2h;
        proxy_max_temp_file_size 0;
        proxy_buffer_size          128k;
        proxy_buffers              4 256k;
        proxy_busy_buffers_size    256k;
        proxy_cache_convert_head off;
        proxy_cache_methods GET HEAD;
        proxy_cache_key $scheme$request_method$proxy_host$request_uri;
        health_check uri=/health.json interval=10 fails=3 passes=2;
    }

    location /cable {
      proxy_pass http://figgy;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-NginX-Proxy true;

      # enables websocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_redirect off;
    }

    include /etc/nginx/conf.d/templates/prod-maintenance.conf;

}
