# Ansible managed
proxy_cache_path /var/cache/nginx/dss-prod/ keys_zone=dss-prodcache:10m;

map $limit $external_traffic {
    0 "";
    1 $binary_remote_addr;
}

# zone: 10mb can hold 160K IP addresses in memory
limit_req_zone $external_traffic zone=dss-prod-ratelimit:10m rate=10r/s;

upstream dss-prod {
    zone dss-prod 64k;
    # lowchallenge challenges after 20 requests from xx.xx.<>.<>.<>
    server service.consul service=lowchallenge.traefik-wall-production resolve max_fails=0;
    # highchallenge challenges everyone. Comment above and uncomment
    # this when you're being swarmed by bots.
    # server service.consul service=highchallenge.traefik-wall-staging resolve max_fails=0;
    # If Traefik crashes, fall down to the box directly.
    server dss-prod1.princeton.edu max_fails=0 resolve backup;
    server dss-prod2.princeton.edu max_fails=0 resolve backup;
    sticky learn
          create=$upstream_cookie_dssprodcookie
          lookup=$cookie_dssprodcookie
          zone=dssprodclient_sessions:1m;
    resolver nomad-host-prod1.lib.princeton.edu nomad-host-prod2.lib.princeton.edu nomad-host-prod3.lib.princeton.edu valid=5s;
    resolver_timeout 2s;
}

server {
    listen 80;
    server_name dss.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name dss.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/dss/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/dss/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;

    location / {
        app_protect_enable off;
        app_protect_security_log_enable on;
        proxy_pass http://dss-prod;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache dss-prodcache;
        limit_req zone=dss-prod-ratelimit burst=20 nodelay;
        proxy_connect_timeout      2h;
        proxy_send_timeout         2h;
        proxy_read_timeout         2h;
        health_check uri=/health.json?providers[]=database&providers[]=solr interval=10 fails=3 passes=2;
        proxy_intercept_errors on;
        #to allow springshare libwizard tutorial embeds
        add_header Content-Security-Policy "frame-ancestors 'self' https://princeton.libwizard.com;";
    }

    include /etc/nginx/conf.d/templates/errors.conf;

    include /etc/nginx/conf.d/templates/dss-proxy-pass.conf;

}
