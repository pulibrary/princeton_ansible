# Ansible managed
proxy_cache_path /data/nginx/pdc-orcid-staging/NGINX_cache/ keys_zone=pdc-orcid-stagingcache:10m;

upstream pdc-orcid-staging {
    zone pdc-orcid-staging 64k;
    server pdc-orcid-staging1.princeton.edu resolve;    
    server pdc-orcid-staging2.princeton.edu resolve;

    sticky learn
          create=$upstream_cookie_pdcorcidstagingcookie
          lookup=$cookie_pdcorcidstagingcookie
          zone=pdc-orcidstagingclient_sessions:1m;
}


server {
    listen 80;
    server_name pdc-orcid-staging.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name pdc-orcid-staging.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/pdc-orcid-staging/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/pdc-orcid-staging/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;
    client_max_body_size       0;

    location / {
#        app_protect_enable on;
#        app_protect_security_log_enable on;
        proxy_pass http://pdc-orcid-staging;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache pdc-orcid-stagingcache;
        # handle errors using errors.conf
        proxy_intercept_errors on;
        health_check uri=/ interval=10 fails=3 passes=2;
        # allow princeton network
        include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        deny all;
    }

    include /etc/nginx/conf.d/templates/errors.conf;

}
