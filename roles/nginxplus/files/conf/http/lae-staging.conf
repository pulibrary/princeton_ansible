# Ansible managed
proxy_cache_path /data/nginx/lae-staging/NGINX_cache/ keys_zone=lae-stagingcache:10m;

include /etc/nginx/conf.d/templates/rate-limit-allow-list.conf;

map $limit $external_traffic {
    0 "";
    1 $binary_remote_addr;
}

# zone: 10mb can hold 160K IP addresses in memory
limit_req_zone $external_traffic zone=lae-staging-ratelimit:10m rate=10r/s;

upstream lae-staging {
    zone lae-staging 64k;
    server lae-staging2.princeton.edu resolve;
    sticky learn
          create=$upstream_cookie_laestagingcookie
          lookup=$cookie_laestagingcookie
          zone=laestagingclient_sessions:1m;
}

server {
    listen 80;
    server_name lae-staging.princeton.edu;

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name lae-staging.princeton.edu;

    ssl_certificate            /etc/letsencrypt/live/lae-staging/fullchain.pem;
    ssl_certificate_key        /etc/letsencrypt/live/lae-staging/privkey.pem;
    ssl_session_cache          shared:SSL:1m;
    ssl_prefer_server_ciphers  on;

    location / {
        app_protect_enable on;
        app_protect_security_log_enable on;
        proxy_pass http://lae-staging;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache lae-stagingcache;
        health_check interval=10 fails=3 passes=2;
        limit_req zone=lae-staging-ratelimit burst=80 nodelay;
        # allow princeton network
        include /etc/nginx/conf.d/templates/restrict.conf;
        # block all
        deny all;
    }

    include /etc/nginx/conf.d/templates/staging-maintenance.conf;

}
