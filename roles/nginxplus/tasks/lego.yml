---
- name: Nginxplus - Ensure lego directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: root
    group: root
    mode: "{{ item.mode | default('0750') }}"
  loop:
    - { path: "{{ lego_state_dir }}", mode: "0750" }
    - { path: "{{ lego_env_dir }}", mode: "0750" }
    - { path: "/etc/nginx/conf.d/ssl/certs", mode: "0755" }
    - { path: "/etc/nginx/conf.d/ssl/private", mode: "0750" }
    - { path: "/tmp/lego-{{ lego_version }}", mode: "0755" }

- name: Nginxplus - Download lego {{ lego_version }}
  ansible.builtin.get_url:
    url: "{{ lego_download_url }}"
    dest: "/tmp/lego_v{{ lego_version }}_{{ lego_arch }}.tar.gz"
    mode: "0644"
    force: true
  when:
    - running_on_server

- name: Nginxplus - Unarchive lego tarball
  ansible.builtin.unarchive:
    src: "/tmp/lego_v{{ lego_version }}_{{ lego_arch }}.tar.gz"
    dest: "/tmp/lego-{{ lego_version }}"
    remote_src: true
    creates: "/tmp/lego-{{ lego_version }}/lego"
  when:
    - running_on_server

- name: Nginxplus - Install lego to {{ lego_install_path }}
  ansible.builtin.copy:
    src: "/tmp/lego-{{ lego_version }}/lego"
    dest: "{{ lego_install_path }}"
    mode: "0755"
    owner: root
    group: root
    remote_src: true
  notify: Show installed lego version
  when:
    - running_on_server

- name: Nginxplus - Write DNSimple environment file
  ansible.builtin.copy:
    dest: "{{ lego_env_file }}"
    owner: root
    group: root
    mode: "0600"
    content: |
      DNSIMPLE_OAUTH_TOKEN={{ dnsimple_oauth_token }}
      DNSIMPLE_PROPAGATION_TIMEOUT={{ dns_propagation_timeout }}
      DNSIMPLE_POLLING_INTERVAL={{ dns_polling_interval }}
  when:
    - running_on_server

- name: Nginxplus - Create deploy hook for Nginx
  ansible.builtin.template:
    src: deploy-ssl-nginx.sh.j2
    dest: "{{ deploy_hook_path }}"
    owner: root
    group: root
    mode: "0755"
  when:
    - running_on_server

- name: Nginxplus - Install systemd service for renewals
  ansible.builtin.template:
    src: lego-renew.service.j2
    dest: "/etc/systemd/system/{{ renew_service }}"
    owner: root
    group: root
    mode: "0644"
  when:
    - running_on_server

- name: Nginxplus - Install systemd timer for renewals
  ansible.builtin.template:
    src: lego-renew.timer.j2
    dest: "/etc/systemd/system/{{ renew_timer }}"
    owner: root
    group: root
    mode: "0644"
  notify:
    - systemd daemon-reload
    - enable and start renew timer
  when:
    - running_on_server

# ---- Initial issuance for each site (idempotent) ----
# Skips if the chained pem already exists at the destination.
- name: Nginxplus - Issue initial certificate for each site (lego run)
  ansible.builtin.command: >
    {{ lego_install_path }} --path {{ lego_state_dir }}
    --email lsupport@princeton.edu --dns dnsimple
    --accept-tos
    {% for d in [site.domain] + (site.sans | default([])) %}-d {{ d }} {% endfor %}
    run --run-hook {{ deploy_hook_path }}
  environment:
    DNSIMPLE_OAUTH_TOKEN: "{{ dnsimple_oauth_token }}"
    DNSIMPLE_PROPAGATION_TIMEOUT: "{{ dns_propagation_timeout }}"
    DNSIMPLE_POLLING_INTERVAL: "{{ dns_polling_interval }}"
  args:
    creates: "{{ site.cert_dst }}"
  loop: "{{ sites }}"
  loop_control:
    loop_var: site
  when:
    - running_on_server

