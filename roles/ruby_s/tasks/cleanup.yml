---
- name: ruby | install ruby if it-s not already there
  ansible.builtin.shell: dpkg-query -W 'ruby-switch'
  ignore_errors: true
  changed_when: false
  register: switch

- name: ruby | uninstall global bundler
  community.general.gem:
    name: bundler
    state: absent
  when: switch is success

- name: ruby | remove installed ruby
  ansible.builtin.apt:
    name: ["{{ ubuntu_ruby_version }}", "{{ ubuntu_ruby_version }}-dev", "ruby-switch"]
    state: absent
    update_cache: true
  when: switch is success

- name: rvm | remove the Brightbox repository
  ansible.builtin.apt_repository:
    repo: "ppa:brightbox/ruby-ng"
    state: absent
  when: switch is success

- name: ruby |lookup download path and checksum from ruby-lang release index
  ansible.builtin.shell: curl https://cache.ruby-lang.org/pub/ruby/index.txt | grep {{ ruby_version }}.tar.gz
  register: ruby_index_line

- name: ruby | separate index entry values
  ansible.builtin.set_fact:
    ruby_values: "{{ ruby_index_line.stdout | regex_findall('(\\S+)') }}"

- name: get ruby url
  ansible.builtin.set_fact:
    ruby_gzip_url: "{{ ruby_values[1] }}"

- name: get ruby checksum
  set_fact:
    ruby_sha_256: "{{ ruby_values[3] }}"

- name: ruby | setup install directory
  ansible.builtin.set_fact:
    install_path: "~/install"

- name: ruby | ensure install directory exists
  ansible.builtin.file:
    path: "{{ install_path }}"
    state: directory
    mode: 0644

- name: ruby | download ruby
  ansible.builtin.get_url:
    url: "{{ ruby_gzip_url }}"
    checksum: "sha256:{{ ruby_sha_256 }}"
    dest: "{{ install_path }}/{{ ruby_version }}.tar.gz"

- name: ruby | unzip ruby file
  ansible.builtin.unarchive:
    src: "{{ install_path }}/{{ ruby_version }}.tar.gz"
    dest: "{{ install_path }}/"
    creates: "{{ install_path }}/{{ ruby_version }}/compile.c"
    copy: false

- name: ruby | configure ruby
  ansible.builtin.shell: cd {{ install_path }}/{{ ruby_version }} && ./configure --enable-shared creates={{ install_path }}/{{ ruby_version }}/Makefile

- name: ruby | make ruby
  ansible.builtin.shell: cd {{ install_path }}/{{ ruby_version }} && make

- name: ruby | install ruby
  ansible.builtin.shell: cd {{ install_path }}/{{ ruby_version }} && make install
  become: true
