---
- name: dspace | configure git credentials
  command: "git config --global credential.helper store"
  when: running_on_server
  changed_when: false

- name: dspace | populate the git credential store
  template:
    src: git_credentials.j2
    dest: "/home/{{ deploy_user }}/.git-credentials"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: u=rw,g=,o=
  when: running_on_server
  no_log: false

- include_tasks: symplectic.yml

- name: dspace | create directory to host atmire scripts
  file:
    path: "{{ atmire_path }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0644
  when: running_on_server

- name: dspace | setup install scripts
  git:
    repo: "{{ atmire_git_path }}"
    dest: "{{ atmire_path }}"
    force: true
  when: running_on_server

- name: dspace | create bash_profile
  file:
    path: "/home/{{ deploy_user }}/.bash_profile"
    state: touch
    mode: 0644
  when: running_on_server

- name: dspace | add bashrc
  blockinfile:
    path: "/home/{{ deploy_user }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK "
    block: |
      for f in ~/app_configs/*; do source $f; done
      export PATH=/opt/apache-ant/bin:/opt/apache-maven/bin:$PATH
      . ~/scripts/dspace-common/env-profile.sh
      . ~/scripts/.aliases
      . ~/.aliases.local
      dswork $USER
      alias 'dsdb=psql -U {{ dspace_db_user }} -d {{ dspace_db_name }}'
  when: running_on_server

- name: dspace | add bash_profile
  blockinfile:
    path: "/home/{{ deploy_user }}/.bash_profile"
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      [ -e ~/.bashrc ] && . ~/.bashrc
  when: running_on_server

- name: dspace | Create exception for aliases
  template:
    src: aliases.local.j2
    dest: "/home/{{ deploy_user }}/.aliases.local"
    mode: 0664
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"

- name: dspace | add dsdb alias
  template:
    src: bash_alias.j2
    dest: "/home/{{ deploy_user }}/.bash_aliases"
    mode: 0664
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"

- name: dspace | configure dspace scripts
  file:
    src: "{{ atmire_path }}/dspace/scripts"
    dest: "/home/{{ deploy_user }}/scripts"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    force: true
    state: link
  when: running_on_server

- name: dspace | disable systemd tomcat
  systemd:
    name: apache-tomcat
    state: stopped
  ignore_errors: true
  when: running_on_server

- name: dspace | copy dspace service
  copy:
    src: "/usr/lib/systemd/system/{{ tomcat_service_name }}.service"
    dest: "/etc/systemd/system/dspace.service"
    remote_src: true
    mode: 0644
  when: running_on_server

- name: dspace | force systemd to reload
  systemd:
    daemon_reexec: true
  when: running_on_server

- name: dspace | configure {{ tomcat_service_name }}
  template:
    src: "dspace_server.xml.j2"
    dest: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}/conf/server.xml"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0644
  when: running_on_server
