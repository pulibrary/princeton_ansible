---
# tasks file for roles/passenger_s
- name: Passenger_s | ensure required packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - curl
    - build-essential
    - zlib1g-dev
    - libpcre3-dev
    - libssl-dev
    - libcurl4-openssl-dev

- name: Passenger_s | create nginx group
  ansible.builtin.group:
    name: nginx
    state: present

- name: Passenger_s | create nginx user
  ansible.builtin.user:
    name: nginx
    state: present
    system: true
    group: nginx
    createhome: false
    shell: /sbin/nologin

- name: Passenger_s | download nginx source
  ansible.builtin.unarchive:
    src: https://nginx.org/download/nginx-{{ passenger_s_nginx_version }}.tar.gz
    dest: "{{ install_path }}"
    remote_src: true

- name: Passenger_s | check if passenger source exists
  ansible.builtin.stat:
    path: "{{ install_path }}/passenger-6.0.23.tar.gz"
  register: passenger_source_file

- name: Passenger_s | download passenger source
  ansible.builtin.get_url:
    url: https://pulmirror.princeton.edu/mirror/passenger/passenger-6.0.23.tar.gz
    dest: "{{ install_path }}"
    mode: "0644"
  when: not passenger_source_file.stat.exists

- name: Passenger_s | extract passenger source
  ansible.builtin.unarchive:
    src: "{{ install_path }}/passenger-6.0.23.tar.gz"
    dest: "{{ install_path }}"
    remote_src: true
    creates: "{{ install_path }}/passenger-6.0.23"

- name: Passenger_s | create nginx directory
  ansible.builtin.file:
    path: /opt/nginx
    state: directory
    mode: "0755"

- name: Passenger_s | compile and install nginx with passenger
  ansible.builtin.shell: |
      cd "{{ install_path }}/nginx-{{ passenger_s_nginx_version }}"
      ./configure --prefix=/opt/nginx \
                  --add-dynamic-module="{{ install_path }}/passenger-{{ passenger_s_version }}.{{ passenger_s_release }}/src/nginx_module" \
                  --with-compat \
                  --with-http_ssl_module
                  --with-http_stub_status_module
      make -j$(nproc)
      make install
  changed_when: false

- name: Passenger_s | create nginx log and conf.d directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /opt/nginx/logs
    - /opt/nginx/conf/conf.d

- name: Passenger_s | create nginx systemd file
  ansible.builtin.template:
    src: nginx.service.j2
    dest: /etc/systemd/system/nginx.service
    mode: "0644"

- name: Passenger_s | create nginx systemd file
  ansible.builtin.systemd:
    daemon-reload: true
  when: running_on_server

- name: Passenger_s | enable and start nginx
  ansible.builtin.systemd:
    name: nginx
    enabled: true
    state: started
  when: running_on_server

- name: Passenger_s | create symbolic link for nginx in /usr/local/bin
  ansible.builtin.file:
    src: /opt/nginx/sbin/nginx
    dest: /usr/local/bin/nginx
    state: link

# Nginx configuration.
- name: Passenger_s | copy nginx configuration into place.
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /opt/nginx/conf/nginx.conf
    mode: "0644"
    group: "{{ passenger_s_nginx_user }}"
    owner: "{{ passenger_s_nginx_user }}"
  tags: passenger_config
  notify: Restart nginx
  when: running_on_server

- name: Passenger_s | Configure passenger virtual host.
  ansible.builtin.template:
    src: passenger.j2
    dest: /opt/nginx/conf/conf.d/passenger.conf
    mode: "0644"
  notify: Restart nginx
  when: running_on_server
