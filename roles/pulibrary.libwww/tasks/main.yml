---
######### Discovery utils start ######
# Things needed for discover utils after this

# needed for capistrano to have access to this file
- name: Check to see if .env.local file exists.
  stat:
    path: "/home/{{ deploy_user }}/.env.local"
  register: env_home_exists

# needed for capistrano to have access to this file
- name: Install .env.local in deploy user home directory for cap
  template:
    src: "env.local.j2"
    dest: "/home/{{ deploy_user }}/.env.local"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  when: not env_home_exists.stat.exists or force_settings

- name: Add apache rules for discovery utils
  blockinfile:
    path: "/etc/apache2/sites-available/000-default.conf"
    marker: "## {mark} ANSIBLE MANAGED BLOCK ##"
    insertafter: "</Directory>"
    block: |
      Alias /utils {{ discoveryutils_docroot }}_cap/current/public
      <Directory "{{ discoveryutils_docroot }}_cap/current/public">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
      </Directory>
  notify: restart apache


########### Drupal Start ######
# Drupal after this

- name: Copy database dump
  copy:
    src: 'files/{{ drupal_dbimport_file }}'
    dest: '/home/deploy/{{ drupal_dbimport_file }}'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
  when: (drupal_dbimport_file is defined) and (inventory_hostname ==  groups[group_names[0]][0])

- name: Import database from local dump file
  mysql_db:
    state: 'import'
    name: '{{ drupal_db_name }}'
    login_host: '{{ db_host | default(omit) }}'
    login_password: '{{ drupal_db_password | default(omit) }}'
    login_user: '{{ drupal_db_user }}'
    target: '/home/deploy/{{ drupal_dbimport_file }}'
  when: (drupal_dbimport_file is defined) and (inventory_hostname ==  groups[group_names[0]][0])

- name: Check to staff script exists.
  stat:
    path: "/usr/bin/get_staff_updates.sh"
  register: staff_scripts_exists

- name: Copy the staff script
  copy:
    src: 'files/get_staff_updates.sh'
    dest: '/usr/bin/get_staff_updates.sh'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 0777
  when: not staff_scripts_exists.stat.exists

- name: install the cron job for staff
  cron:
    name: "staff profile"
    minute: 0
    hour: 7
    job: "/usr/bin/get_staff_updates.sh >/tmp/staff_updates.out 2>&1"
    user: "{{ deploy_user }}"
  when: (inventory_hostname ==  groups[group_names[0]][0])

- name: install the cron for running drush cron
  cron:
    name: "run drush cron"
    minute: 0
    hour: 5
    job: "sudo -u www-data drush @prod cron"
    user: "{{ deploy_user }}"
  when: (inventory_hostname ==  groups[group_names[0]][0])

- name: ensure max file size is set in apache2 php.ini
  lineinfile:
    dest: "/etc/php/7.2/apache2/php.ini"
    regexp: "upload_max_filesize ="
    line: "upload_max_filesize = 8M"

- name: ensure memory limit is set in apache2 php.ini
  lineinfile:
    dest: "/etc/php/7.2/apache2/php.ini"
    regexp: "memory_limit ="
    line: "memory_limit = 256M"


###### Special Collections ######
# after this is the tasks to setup special collections

- name: Check to see if special collections drupal docroot home file exists.
  stat:
    path: "{{ special_collections_drupal_docroot }}"
  register: special_collections_drupal_docroot_exists

- name: create special collections drupal docroot
  file:
    path: "{{ special_collections_drupal_docroot }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    recurse: true
    follow: false
  become: true
  when: not special_collections_drupal_docroot_exists.stat.exists

- name: Check to see if special_collections_settings.php home file exists.
  stat:
    path: "/home/{{ deploy_user }}/special_collections_settings.php"
  register: special_collections_settings_php_home_exists

- name: Install settings.php
  template:
    src: "special_collections_settings.php.j2"
    dest: "/home/{{ deploy_user }}/special_collections_settings.php"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  when: not special_collections_settings_php_home_exists.stat.exists or force_settings

- name: Add apache rules for special collections
  blockinfile:
    path: "/etc/apache2/sites-available/000-default.conf"
    marker: "## {mark} ANSIBLE SPECIAL COLLECTIONS MANAGED BLOCK ##"
    insertbefore: "</VirtualHost>"
    block: |
      Alias /special-collections {{ special_collections_drupal_docroot }}/current
      <Directory "{{ special_collections_drupal_docroot }}/current/>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
      </Directory>
  notify: restart apache

- name: Allow deploy user to change ownership of the special collections directory to www-data
  lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    line: "{{ deploy_user }} ALL=(ALL) NOPASSWD: /bin/chown -R www-data {{ special_collections_drupal_docroot }}*"
    validate: "visudo -cf %s"

- name: Allow deploy user to change ownership of the special collections directory to deploy
  lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    line: "{{ deploy_user }} ALL=(ALL) NOPASSWD: /bin/chown -R deploy {{ special_collections_drupal_docroot }}*"
    validate: "visudo -cf %s"

- name: install the cron for running drush cron for special collections
  cron:
    name: "run special collections drush cron"
    minute: 0
    hour: 6
    job: "sudo -u www-data drush -r {{ special_collections_drupal_docroot }}/current cron"
    user: "{{ deploy_user }}"
  when: inventory_hostname ==  groups[group_names[0]][0]
