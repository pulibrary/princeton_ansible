---
- name: restart percona
  command: /etc/init.d/mysql bootstrap-pxc
  changed_when: false
  when: xtradb_root_user is defined

- name: Drop databases if requested
  mysql_db:
    name: "{{ item.database | d(item.name) }}"
    state: absent
  with_flattened: "{{ mariadb__databases + mariadb__dependent_databases + mariadb_databases|d([]) }}"
  when: ((item.database|d(false) or item.name|d(false)) and
         (item.state is defined and item.state == 'absent'))

- name: Create databases
  mysql_db:
    name: "{{ item.database | d(item.name) }}"
    login_host: '{{ db_host | default(omit) }}'
    login_password: '{{ db_password | default(omit) }}'
    login_user: 'root'
    state: present
    encoding: "{{ item.encoding | d(omit) }}"
    collation: "{{ item.collation | d(omit) }}"
  loop: "{{ mariadb__databases + mariadb__dependent_databases + mariadb_databases|d([]) }}"
  when: ((item.database|d(false) or item.name|d(false)) and
         (item.state is undefined or item.state != 'absent'))
  register: mariadb__register_database_status

- name: Copy database source file to remote host
  copy:
    src: "{{ item.0.source }}"
    dest: "{{ item.0.target }}"
    owner: 'root'
    group: 'root'
    mode: 0600
  with_together:
    - "{{ mariadb__databases + lookup('flattened', mariadb__dependent_databases, wantlist=True) + mariadb_databases|d([]) }}"
    - "{{ mariadb__register_database_status.results }}"
  when: ((item.0.database|d(false) or item.0.name|d(false)) and
         (item.0.state is undefined or item.0.state != 'absent') and
         (item.0.source|d(false) and item.0.target|d(false)) and
         (item.0.name == item.1.db and item.1 is changed))

- name: Import source file contents into database
  mysql_db:
    name: "{{ item.0.database | d(item.0.name) }}"
    target: "{{ item.0.target }}"
    state: import
  with_together:
    - "{{ mariadb__databases + lookup('flattened', mariadb__dependent_databases, wantlist=True) + mariadb_databases|d([]) }}"
    - "{{ mariadb__register_database_status.results }}"
  when: ((item.0.database|d(false) or item.0.name|d(false)) and
         (item.0.state is undefined or item.0.state != 'absent') and
         item.0.target|d(false) and (item.0.name == item.1.db and item.1 is changed))

- name: Remove source files
  file:
    dest: "{{ item.target }}"
    state: absent
  with_flattened: "{{ mariadb__databases + mariadb__dependent_databases + mariadb_databases|d([]) }}"
  when: ((item.database|d(false) or item.name|d(false)) and
         (item.state is undefined or item.state != 'absent') and
         (item.source|d(false) and item.target|d(false)) and
         (item.target_delete is undefined or item.target_delete))

- name: Drop user accounts if requested
  mysql_user:
    name: '{{ item.user | d(item.name) }}'
    host: '{{ db_host }}'
    state: 'absent'
  with_flattened: '{{ mariadb__users + mariadb__dependent_users + mariadb_users|d([]) }}'
  when: ((item.user|d(False) or item.name|d(False)) and
         (item.state is defined and item.state == "absent"))
  no_log: true

- name: Create user accounts
  mysql_user:
    name: '{{ item.user | d(item.name) }}'
    host: '{{ db_host }}'
    login_host: '{{ db_host }}'
    login_password: '{{ db_password }}'
    login_user: 'root'
    state: 'present'
    password: "{{ item.password }}"
  with_flattened: '{{ mariadb__users + mariadb_users|d([]) }}'
  register: mariadb__register_create_users
  when: ((item.user|d(False) or item.name|d(False)) and
         (item.state is undefined or item.state != "absent"))
  no_log: true

- name: Grant privileges to users
  mysql_user:
    name: '{{ item.user | d(item.name) }}'
    host: '{{ db_host }}'
    login_host: '{{ db_host }}'
    login_password: '{{ db_password }}'
    login_user: 'root'
    priv: '{{ item.priv | d((item.database | d(item.name)) + ".*:" + mariadb__default_privileges_grant) }}'
    append_privs: true
  loop: "{{ mariadb__users }}"