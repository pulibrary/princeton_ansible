# {{ ansible_managed | comment }}
#
data_dir: "/var/lib/vector"

sources:
  solr_gc:
    type: file
    include:
      - "/solr/logs/solr_gc.log"
    ignore_older: 864000
    fingerprinting:
      strategy: "device_and_inode"
    read_from: beginning

  solr_console:
    type: file
    include:
      - "/solr/logs/solr-8983-console.log"
    ignore_older: 864000
    fingerprinting:
      strategy: "device_and_inode"
    read_from: beginning

  solr_app:
    type: file
    include:
      - "/solr/logs/solr.log"
    ignore_older: 864000
    fingerprinting:
      strategy: "device_and_inode"
    read_from: beginning

transforms:
  process_solr:
    type: remap
    inputs: [solr_gc, solr_console, solr_app]
    source: |
      # Add metadata
      .host = get_hostname!()
      .service = "solr"

      # Determine log type based on source file
      if contains(string!(.file), "solr_gc.log") {
        .log_type = "gc"
      } else if contains(string!(.file), "console.log") {
        .log_type = "console"
      } else {
        .log_type = "application"
      }

      # Extract log level from message if possible
      message_str = string!(.message)
      if contains(message_str, " ERROR ") {
        .level = "error"
      } else if contains(message_str, " WARN ") {
        .level = "warn"
      } else if contains(message_str, " INFO ") {
        .level = "info"
      } else if contains(message_str, " DEBUG ") {
        .level = "debug"
      } else {
        .level = "unknown"
      }

sinks:
  # Console for debugging
  # debug_console:
  #   type: console
  #   inputs: [process_solr]
  #   encoding:
  #     codec: json
  #   target: stdout
  #   uncomment to debug
