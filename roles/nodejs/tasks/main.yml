- name: Nodejs | uninstall any apt installed node
  ansible.builtin.apt:
    name: ["nodejs"]
    state: absent
  changed_when: false

- name: Nodejs | determine architecture
  ansible.builtin.set_fact:
    architecture: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'x64' }}"

- name: Nodejs | download nodejs version
  ansible.builtin.unarchive:
    src: "{{ nodejs_release_url }}/{{ desired_nodejs_version }}/node-{{ desired_nodejs_version }}-linux-{{ architecture }}.tar.gz"
    dest: /usr/local
    creates: /usr/local/node-{{ desired_nodejs_version }}-linux-{{ architecture }}
    remote_src: true

- name: Nodejs | create symbolic links for node and npm
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    state: link
  loop:
    - {src: "/usr/local/node-{{ desired_nodejs_version }}-linux-{{ architecture }}/bin/node", dest: "/usr/local/bin/node"}
    - {src: "/usr/local/node-{{ desired_nodejs_version }}-linux-{{ architecture }}/lib/node_modules/npm/bin/npm-cli.js", dest: "/usr/local/bin/npm"}
  changed_when: false

- name: Nodejs | install corepack
  ansible.builtin.shell:
    cmd: npm install -g corepack
  changed_when: false

- name: Nodejs | create symbolic link for corepack
  ansible.builtin.file:
    src: "/usr/local/node-{{ desired_nodejs_version }}-linux-{{ architecture }}/lib/node_modules/corepack/dist/corepack.js"
    dest: "/usr/local/bin/corepack"
    owner: root
    group: root
    state: link

- name: Nodejs | Enable Corepack
  ansible.builtin.shell:
    cmd: corepack enable
  changed_when: false

- name: Nodejs | Install Yarn using Corepack
  ansible.builtin.shell:
    cmd: corepack prepare yarn@stable --activate
  changed_when: false

- name: Nodejs | Verify Yarn installation
  ansible.builtin.shell:
    cmd: yarn --version
  register: yarn_version
  changed_when: false
