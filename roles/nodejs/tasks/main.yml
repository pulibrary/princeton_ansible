---
- name: nodejs | get yarn key from yarnpkg
  ansible.builtin.apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present
  register: yarn_pkg_registered

- name: nodejs | get yarn keys from other sources
  ansible.builtin.apt_key:
    id: "{{ nodejs__yarn_upstream_key_id }}"
    keyserver: "{{ item }}"
    state: present
  when: yarn_pkg_registered is failed
  register: yarn_key_registered
  loop:
    - "hkp://pool.sks-keyservers.net"
    - "pgp.mit.edu"
    - "keyserver.pgp.com"
  failed_when:
    - yarn_key_registered == 0

- name: nodejs | Add upstream Yarn APT repository
  ansible.builtin.apt_repository:
    repo: "{{ nodejs__yarn_upstream_repository }}"
    state: present
    update_cache: true

- name: nodejs | uninstall any apt installed node
  ansible.builtin.apt:
    name: ["nodejs"]
    state: absent
  changed_when: false

- name: nodejs | download nodejs version
  ansible.builtin.unarchive:
    src: "{{ nodejs_release_url }}/{{ desired_nodejs_version }}/node-{{ desired_nodejs_version }}-linux-x64.tar.gz"
    dest: /usr/local
    creates: /usr/local/node-{{ desired_nodejs_version }}-linux-x64
    remote_src: true

- name: nodejs | create symbolic links for node and npm
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    state: link
  loop:
    - {src: "/usr/local/node-{{ desired_nodejs_version }}-linux-x64/bin/node", dest: "/usr/local/bin/node"}
    - {src: "/usr/local/node-{{ desired_nodejs_version }}-linux-x64/lib/node_modules/npm/bin/npm-cli.js", dest: "/usr/local/bin/npm"}
  changed_when: false

- name: nodejs | Install yarn packages
  ansible.builtin.apt:
    name: ["yarn"]
    state: present
