---
- name: check for existence of fits
  stat:
    path: "/tmp/fits-{{ fits_version }}.zip"
  register: fits_downloaded

- name: copy cached fits
  copy:
    src: local_files/fits/fits-{{ fits_version }}.zip"
    dest: /tmp/fits-{{ fits_version }}.zip
  register: cached_fits
  when: fits_downloaded.stat.islnk is not defined
  ignore_errors: true

- name: download fits
  get_url:
    url: "{{ fits_download_url }}/fits-{{ fits_version }}.zip"
    dest: /tmp/fits-{{ fits_version }}.zip
    timeout: 100
    owner: root
    group: root
    mode: 0444
  when: cached_fits is failed

- name: cache fits for future use
  fetch:
    src: "/tmp/fits-{{ fits_version }}.zip"
    dest: local_files/fits
    flat: true
  when: ansible_virtualization_type == 'virtualbox'

- name: unarchive fits
  unarchive:
    src: /tmp/fits-{{ fits_version }}.zip
    dest: /opt
    copy: no
    creates: /opt/fits-{{ fits_version }}/fits.sh

- name: make fits directory accessible
  file:
    path: /opt/fits-{{ fits_version }}
    mode: a+x

- name: create sane scripting symbolic link
  file:
    src: /opt/fits-{{ fits_version }}
    dest: /opt/fits
    state: link

- name: make fits.sh executable
  file:
    path: /opt/fits-{{ fits_version }}/fits.sh
    mode: a+x
