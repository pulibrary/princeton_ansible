---
## Note: Invoke this task with --tags clean to remove the database and config
## file so you can start over with a fresh installation.

- name: ojs | install prerequisites
  include: "install_prerequisites.yml"

- name: ojs | clean, if necessary
  include: "clean.yml"

- name: ojs | determine if ojs is installed already
  include: "check_ojs_installation.yml"
  changed_when: false

- name: ojs | add {{ deploy_user }} to www-data
  user:
    name: "{{ deploy_user }}"
    groups: www-data
    append: true

- name: ojs | unarchive ojs code
  unarchive:
    src: "https://pkp.sfu.ca/ojs/download/ojs-{{ ojs_version }}.tar.gz"
    dest: "/var/www"
    remote_src: true
    owner: deploy
    group: www-data
    creates: "{{ ojs_home }}"
  become: true

- name: ojs | unarchive healthSciences theme code
  unarchive:
    src: "{{ healthsciences_theme_url }}"
    dest: "{{ ojs_home }}/plugins/themes"
    remote_src: true
    owner: deploy
    group: www-data
    creates: "{{ ojs_home }}/plugins/themes/healthSciences"
  become: true

- name: ojs | ensure cache directories are writable
  ansible.builtin.file:
    path: "{{ ojs_home }}/{{ item }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: www-data
    mode: 0775
  with_items:
    - public
    - cache
    - cache/t_cache
    - cache/t_config
    - cache/t_compile
    - cache/_db

- name: ojs | create a directory to store uploaded files
  ansible.builtin.file:
    path: "{{ ojs_file_uploads }}"
    state: directory
    owner: www-data
    group: www-data
    recurse: true
    mode: 0775

- name: ojs | copy config file
  command: "cp config.TEMPLATE.inc.php config.inc.php"
  args:
    chdir: "{{ ojs_home }}"
  become: true
  become_user: "{{ deploy_user }}"
  when: ojs_is_installed is false
  changed_when: false

- name: ojs | write expect script for OJS interactive installation
  template:
    src: "script.exp.j2"
    dest: "{{ ojs_home }}/script.exp"
    owner: "{{ deploy_user }}"
    group: www-data
    mode: 0700
  when:
    - ojs_is_installed is false
    - running_on_server

- name: ojs | run expect script for OJS interactive installation
  command: "/usr/bin/expect {{ ojs_home }}/script.exp"
  args:
    chdir: "{{ ojs_home }}"
  become: true
  become_user: "{{ deploy_user }}"
  when:
    - ojs_is_installed is false
    - running_on_server

- name: ojs | remove expect script
  file:
    path: "{{ ojs_home }}/script.exp"
    state: absent

- name: ojs | remove apache document root
  file:
    path: "{{ apache.docroot }}"
    state: absent
  changed_when: false

- name: ojs | install htaccess config for mod_rewrite
  template:
    src: htaccess
    dest: "{{ ojs_home }}/.htaccess"
    owner: "{{ deploy_user }}"
    group: www-data
    mode: 0644
  changed_when: false

- name: ojs | create ojs local directory
  file:
    path: "/etc/apache2/ssl/{{ item }}"
    state: directory
    owner: "root"
    group: "root"
    mode: 0775
  with_items:
    - private
    - certs
  changed_when: false

- name: ojs | copy apache cert files
  copy:
    src: "files/certs/{{ item }}"
    dest: "/etc/apache2/ssl/certs/"
  changed_when: false
  when: running_on_server
  with_items:
    - "{{ inventory_hostname }}_cert.cer"
    - "{{ inventory_hostname }}_chained.pem"

- name: ojs | copy apache private files
  copy:
    src: "files/private/{{ item }}"
    dest: "/etc/apache2/ssl/private/"
  changed_when: false
  when: running_on_server
  with_items:
    - "{{ inventory_hostname }}_priv.key"

- name: ojs | add OJS template
  template:
    src: "ojs.conf.j2"
    dest: "/etc/apache2/sites-available/ojs.conf"
    mode: 0644

- name: ojs | remove apache2 default
  file:
    path: "/etc/apache2/sites-enabled/000-default.conf"
    state: absent
  changed_when: false

- name: ojs | symbolic link to ojs config
  file:
    src: "/etc/apache2/sites-available/ojs.conf"
    dest: "/etc/apache2/sites-enabled/ojs.conf"
    state: link
  when: running_on_server
  changed_when: false
  notify: restart apache2

- name: ojs | automate backups
  include: "automate_backups.yml"
