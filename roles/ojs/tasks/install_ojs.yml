---
- name: ojs | copy config file
  ansible.builtin.command: "cp config.TEMPLATE.inc.php config.inc.php"
  args:
    chdir: "{{ ojs_home }}"
  become: true
  become_user: "{{ deploy_user }}"
  when: ojs_is_installed is false
  changed_when: false

- name: ojs | write expect script for OJS interactive installation
  ansible.builtin.template:
    src: "script.exp.j2"
    dest: "{{ ojs_home }}/script.exp"
    owner: "{{ deploy_user }}"
    group: www-data
    mode: 0700
  changed_when: false

- name: ojs | run expect script for OJS interactive installation
  ansible.builtin.command: "/usr/bin/expect {{ ojs_home }}/script.exp"
  args:
    chdir: "{{ ojs_home }}"
  become: true
  become_user: "{{ deploy_user }}"
  changed_when: false

- name: ojs | remove expect script
  ansible.builtin.file:
    path: "{{ ojs_home }}/script.exp"
    state: absent
  changed_when: false

- name: ojs | remove apache document root
  ansible.builtin.file:
    path: "{{ apache.docroot }}"
    state: absent
  changed_when: false

- name: ojs | install htaccess config for mod_rewrite
  ansible.builtin.template:
    src: htaccess
    dest: "{{ ojs_home }}/.htaccess"
    owner: "{{ deploy_user }}"
    group: www-data
    mode: 0644

- name: ojs | create ojs local directory
  ansible.builtin.file:
    path: "/etc/apache2/ssl/{{ item }}"
    state: directory
    owner: "root"
    group: "root"
    mode: 0775
  loop:
    - private
    - certs

- name: ojs | copy apache cert files
  ansible.builtin.copy:
    src: "files/certs/{{ item }}"
    dest: "/etc/apache2/ssl/certs/"
  changed_when: false
  when: running_on_server
  with_items:
    - "{{ inventory_hostname }}_cert.cer"
    - "{{ inventory_hostname }}_chained.pem"

- name: ojs | copy apache private files
  ansible.builtin.copy:
    src: "files/private/{{ item }}"
    dest: "/etc/apache2/ssl/private/"
  when: running_on_server
  loop:
    - "{{ inventory_hostname }}_priv.key"

- name: ojs | add OJS template
  ansible.builtin.template:
    src: "ojs.conf.j2"
    dest: "/etc/apache2/sites-available/ojs.conf"
    mode: 0644

- name: ojs | remove apache2 default
  ansible.builtin.file:
    path: "/etc/apache2/sites-enabled/000-default.conf"
    state: absent

- name: ojs | symbolic link to ojs config
  ansible.builtin.file:
    src: "/etc/apache2/sites-available/ojs.conf"
    dest: "/etc/apache2/sites-enabled/ojs.conf"
    state: link
  when: running_on_server
  notify: restart apache2
