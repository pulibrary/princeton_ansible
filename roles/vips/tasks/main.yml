---
- name: detect vips version
  ansible.builtin.command: vips -v
  register: vips_list
  changed_when: false
  ignore_errors: true

- name: delete old vips package
  ansible.builtin.file:
    path: "/opt/vips"
    state: "absent"
  when:
    - running_on_server
    - vips_list.failed or not "{{ vips_version }}" in vips_list.stdout

- name: delete old vips binary
  file:
    path: "/usr/local/bin/vips"
    state: "absent"
  when:
    - running_on_server
    - vips_list.failed or not "{{ vips_version }}" in vips_list.stdout

- name: Install VIPS dependencies
  ansible.builtin.apt:
    name:
      - build-essential
      - pkg-config
      - libglib2.0-dev
      - libexpat1-dev
      - libtiff5-dev
      - libjpeg-turbo8-dev
      - libgsf-1-dev
      - libexif-dev
      - fftw3
      - liblcms2-dev
      - liblcms2-2
      - libpng-dev
      - libpoppler-glib-dev
    state: present
  when:
    - running_on_server

- name: Create VIPS package directory
  ansible.builtin.file:
    path: "/opt/vips"
    state: "directory"
    mode: 0755

- name: Download and untar VIPS
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ vips_download_url }}"
    dest: "/opt/vips"
    creates: "/opt/vips/vips-{{ vips_version }}"
  when:
    - running_on_server

- name: Compile VIPS
  ansible.builtin.shell: cd /opt/vips/vips-{{ vips_version }} && ./configure && make && make install
  args:
    creates: /usr/local/bin/vips
  when:
    - running_on_server

- name: Setup ldconfig for vips
  ansible.builtin.template:
    src: 'ldconfig.vips.conf'
    dest: '/etc/ld.so.conf.d/vips.conf'
    mode: 0644
  notify:
    - run ldconfig
  when:
    - running_on_server
