---
- name: Create repository directory structure
  file:
    path: '/opt/{{ item }}'
    state: 'directory'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 0755
  with_items:
    - 'repository'

## Create Mounts
- name: Create mount directories
  file:
    path: '/mnt/{{ item }}'
    state: 'directory'
    mode: 0755
  with_items:
    - hydra_sources
    - figgy_binaries
    - figgy_images
    - diglibdata
    - illiad
    - '{{ figgy_cantaloupe_images_mount }}'
    - 'diglibdata/pudl'
    - 'diglibdata/hydra_binaries'
    - 'illiad/images'
    - 'illiad/ocr_scan'
    - 'illiad/cdl_scans'

- name: Copy smb credentials
  copy:
    src: "files/{{ item }}"
    dest: "/etc/{{ item }}"
    mode: 0644
  when: running_on_server
  with_items:
    - pudl.smb.credentials
    - archives.smb.credentials
    - archives_bd.smb.credentials
    - studio.new.smb.credentials
    - hydradev.smb.credentials
    - numis.smb.credentials
    - plum_mount.smb.credentials
    - libimages2.smb.credentials
    - maplab.smb.credentials
    - geoserver.smb.credentials
    - illiad.smb.credentials
    - marquand.smb.credentials
    - mendel.smb.credentials
    - mudd.smb.credentials
    - microforms.smb.credentials
- name: Create mount to plum binaries
  mount:
    name: '/mnt/diglibdata/hydra_binaries'
    src: '//diglibdata1.princeton.edu/hydra/binaries'
    fstype: cifs
    opts: 'credentials=/etc/plum_mount.smb.credentials,uid={{ deploy_user_uid }},gid=33'
    state: mounted
  when: running_on_server

- name: Create mount to pudl binaries (for migration)
  mount:
    name: '/mnt/diglibdata/pudl'
    src: '//diglibdata1.princeton.edu/pudl'
    fstype: cifs
    opts: 'credentials=/etc/pudl.smb.credentials,uid={{ deploy_user_uid }},gid=33'
    state: mounted
  when: running_on_server

- name: Create mount to scratch space (for bulk ingests)
  mount:
    name: '/mnt/hydra_sources/ingest_scratch'
    src: '//diglibdata1.princeton.edu/hydra/binaries/ingest_scratch'
    fstype: cifs
    opts: 'credentials=/etc/plum_mount.smb.credentials,uid={{ deploy_user_uid }},gid=33'
    state: mounted
  when: running_on_server

- name: Create cantaloupe images mount
  when: running_on_server
  mount:
    name: '/mnt/{{ figgy_cantaloupe_images_mount }}/data'
    src: '//{{ figgy_cantaloupe_images_mount }}.princeton.edu/data'
    fstype: cifs
    opts: 'credentials=/etc/libimages2.smb.credentials,uid={{ deploy_user_uid }},gid={{ deploy_user_uid }}'
    state: mounted

- name: Ensure figgy derivatives mount directory exists
  file:
    path: '{{ figgy_derivatives_mount }}'
    state: directory
    mode: 0755

- name: Create diglibdata mounts (hydra sources)
  when: running_on_server
  mount:
    name: /mnt/hydra_sources/{{ item }}
    src: //diglibdata1.princeton.edu/{{ item }}
    fstype: cifs
    opts: 'credentials=/etc/{{ item }}.smb.credentials,uid={{ deploy_user_uid }}'
    state: mounted
  with_items:
    - pudl
    - archives
    - archives_bd
    - maplab

- name: Create mount to studio (hydra sources)
  when: running_on_server
  mount:
    name: /mnt/hydra_sources/studio
    src: //libserv64.princeton.edu/studio
    fstype: cifs
    opts: 'credentials=/etc/studio.smb.credentials,uid={{ deploy_user_uid }}'
    state: absent

- name: Create mount to studio (hydra sources)
  when: running_on_server
  mount:
    name: /mnt/hydra_sources/studio_new
    src: //lib-dps-server.princeton.edu/studio
    fstype: cifs
    opts: 'credentials=/etc/studio.new.smb.credentials,uid={{ deploy_user_uid }}'
    state: mounted

- name: Create lib-dps mounts
  when: running_on_server
  mount:
    name: /mnt/hydra_sources/{{ item }}
    src: //lib-dps-server.princeton.edu/{{ item }}
    fstype: cifs
    opts: 'credentials=/etc/{{ item }}.smb.credentials,uid={{ deploy_user_uid }}'
    state: mounted
  with_items:
    - marquand
    - mendel
    - mudd
    - microforms

- name: Create mount to music reserves (hydra sources)
  when: running_on_server
  mount:
    name: /mnt/hydra_sources/music
    src: '//diglibdata1.princeton.edu/music'
    fstype: cifs
    opts: 'credentials=/etc/plum_mount.smb.credentials,uid={{ deploy_user_uid }},gid=33'
    state: mounted

- name: Create mount to numismatics (hydra sources)
  when: running_on_server
  mount:
    name: /mnt/hydra_sources/numismatics
    src: '//diglibdata1.princeton.edu/numismatics'
    fstype: cifs
    opts: 'credentials=/etc/numis.smb.credentials,uid={{ deploy_user_uid }},gid=33'
    state: mounted

- name: Create geoserver derivatives mount
  when: running_on_server
  mount:
    name: /mnt/geoserver/figgy_geo_data
    src: //geoserv1.princeton.edu/figgy_geo_data
    fstype: cifs
    opts: 'credentials=/etc/geoserver.smb.credentials,uid={{ deploy_user_uid }}'
    state: mounted

- name: Create ILLiad mounts
  when: running_on_server
  mount:
    name: /mnt/illiad/{{ item }}
    src: //lib-illsql.princeton.edu/{{ item }}
    fstype: cifs
    opts: 'credentials=/etc/illiad.smb.credentials,uid={{ deploy_user_uid }},gid=33'
    state: mounted
  with_items:
    - images
    - ocr_scan
    - cdl_scans

## Symlink to Mounts
- name: Create symlinks
  file:
    src: '{{ item.src }}'
    dest: '{{ item.link }}'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    state: 'link'
    force: true
  with_items:
    - src: '/mnt/hydra_sources'
      link: '/opt/{{ rails_app_directory }}/shared/staged_files'
    - src: '{{ figgy_repository_mount }}'
      link: '/opt/repository/files'
    - src: '{{ figgy_derivatives_mount }}'
      link: '/opt/repository/derivatives'
    - src: '{{ figgy_geo_derivatives_mount }}'
      link: '/opt/repository/geo_derivatives'
    - src: '{{ figgy_stream_derivatives_mount }}'
      link: '/opt/repository/stream_derivatives'

- name: add GDAL repository
  apt_repository:
    repo: "ppa:ubuntugis/ppa"

- name: Install GDAL
  apt:
    name: ['libgdal-dev=2.4.2+dfsg-1~bionic0', 'gdal-bin=2.4.2+dfsg-1~bionic0']
    state: present
    update_cache: true

- name: Install cogeo-mosaic prerequisites
  apt:
    name: ['python3-setuptools', 'cython3']
    state: present

- name: update pip3 for cogeo-mosaic
  pip:
    name: pip
    executable: pip3
    state: latest

- name: remove cogeo-mosaic requests dependency to ensure the correct version
  pip:
    name: requests
    executable: pip3
    state: absent
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"

- name: remove cogeo-mosaic urllib3 dependency to ensure the correct version
  pip:
    name: urllib3
    executable: pip3
    state: absent
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"

- name: Install cogeo-mosaic
  pip:
    name: cogeo-mosaic
    executable: pip3
    extra_args: --pre
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"

## Simple tiles dependency
- name: Compile simple-tiles from source
  shell: curl -L {{ simple_tiles_url }} | tar -xz && cd simple-tiles-{{ simple_tiles_version }} && ./configure && make && make install
  args:
    creates: /usr/local/lib/libsimple-tiles.so

- name: Create cloud_config directory
  file:
    path: '/home/{{ deploy_user }}/cloud_config'
    state: 'directory'
    mode: 0755

- name: Install Google Cloud Authorization
  copy:
    src: "files/{{ rails_app_env }}-google_cloud_credentials.json"
    dest: "/home/{{ deploy_user }}/cloud_config/google_cloud_credentials.json"
    mode: 0644
  when: running_on_server
