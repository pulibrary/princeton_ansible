---
- name: 'pul_nomad_analytics | create postgresql db users'
  community.postgresql.postgresql_user:
    name: '{{ analytics_production_db_user }}'
    password: '{{ analytics_production_db_password }}'
    encrypted: true
    state: 'present'
  delegate_to: '{{ analytics_production_postgres_host }}'
  become: true
  become_user: '{{ analytics_production_postgres_admin_user }}'
  run_once: true

- name: 'pul_nomad_analytics | create postgresql database'
  community.postgresql.postgresql_db:
    name: '{{ analytics_production_db_name }}'
    encoding: 'UTF-8'
    state: 'present'
    owner: "{{ analytics_production_db_user }}"
  delegate_to: '{{ analytics_production_postgres_host }}'
  become: true
  become_user: '{{ analytics_production_postgres_admin_user }}'
  run_once: true

- name: 'pul_nomad_analytics | ensure access to postgres server for client connections'
  ansible.builtin.lineinfile:
    path: '/etc/postgresql/{{ analytics_production_postgres_version }}/main/pg_hba.conf'
    line: 'host  all      all {{ ansible_default_ipv4.address }}/32       md5'
  delegate_to: '{{ analytics_production_postgres_host }}'
  register: remote_postgres_configured
  throttle: 1 # have this task run one machine at a time to avoid race condition
  when:
    - "pul_nomad_role == 'client'"

- name: 'pul_nomad_analytics | reload postgresql'
  ansible.builtin.service:
    name: postgresql
    state: reloaded
  when:
    - remote_postgres_configured.changed
  delegate_to: '{{ analytics_production_postgres_host }}'

- name: 'pul_nomad_analytics | add the application environment variables'
  ansible.builtin.shell:
    cmd: '/usr/local/bin/nomad var put -force nomad/jobs/analytics-production {{ analytics_production_nomad_env_vars.keys() | zip(analytics_production_nomad_env_vars.values()) | map("join", "=") | join(" ") }}'
  environment:
    NOMAD_TOKEN: '{{ pul_nomad_management_token }}'
  run_once: true
