---
- name: 'pul_nomad_dpulc | create postgresql db users'
  community.postgresql.postgresql_user:
    name: '{{ dpul_c_db_user }}'
    password: '{{ dpul_c_db_password }}'
    encrypted: true
    state: 'present'
  delegate_to: '{{ dpul_c_postgres_host }}'
  become: true
  become_user: '{{ dpul_c_postgres_admin_user }}'
  run_once: true

- name: 'pul_nomad_dpulc | create postgresql database'
  community.postgresql.postgresql_db:
    name: '{{ dpul_c_db_name }}'
    encoding: 'UTF-8'
    state: 'present'
    owner: "{{ dpul_c_db_user }}"
  delegate_to: '{{ dpul_c_postgres_host }}'
  become: true
  become_user: '{{ dpul_c_postgres_admin_user }}'
  run_once: true

- name: 'pul_nomad_dpulc | ensure access to postgres server for client connections'
  ansible.builtin.lineinfile:
    path: '/etc/postgresql/{{ dpul_c_postgres_version }}/main/pg_hba.conf'
    line: 'host  all      all {{ ansible_default_ipv4.address }}/32       md5'
  delegate_to: '{{ dpul_c_postgres_host }}'
  register: remote_postgres_configured
  throttle: 1 # have this task run one machine at a time to avoid race condition
  when:
    - "pul_nomad_role == 'client'"

- name: 'pul_nomad_dpulc | create figgy production postgresql db user'
  community.postgresql.postgresql_user:
    name: '{{ dpul_c_db_user }}'
    password: '{{ dpul_c_figgy_db_password }}'
    encrypted: true
    state: 'present'
  delegate_to: '{{ dpul_c_figgy_db_host }}'
  become: true
  become_user: '{{ dpul_c_postgres_admin_user }}'
  run_once: true

- name: 'pul_nomad_dpulc | grant read privileges for figgy production read-only user'
  delegate_to: '{{ dpul_c_figgy_db_host }}'
  become: true
  become_user: '{{ dpul_c_postgres_admin_user }}'
  run_once: true
  community.postgresql.postgresql_privs:
    database: '{{ dpul_c_figgy_db_name }}'
    state: present
    privs: SELECT
    type: table
    objs: ALL_IN_SCHEMA
    roles: 'dpulc_staging'
    grant_option: true

- name: 'pul_nomad_dpulc | ensure access to figgy production postgres server for client connections'
  ansible.builtin.lineinfile:
    path: '/etc/postgresql/{{ dpul_c_postgres_version }}/main/pg_hba.conf'
    line: 'host  all      all {{ ansible_default_ipv4.address }}/32       md5'
  delegate_to: '{{ dpul_c_figgy_db_host }}'
  register: remote_figgy_postgres_configured
  throttle: 1 # have this task run one machine at a time to avoid race condition
  when:
    - "pul_nomad_role == 'client'"

- name: 'pul_nomad_dpulc | reload postgresql'
  ansible.builtin.service:
    name: postgresql
    state: reloaded
  when:
    - remote_postgres_configured.changed
  delegate_to: '{{ dpul_c_postgres_host }}'

- name: 'pul_nomad_dpulc | reload figgy postgresql'
  ansible.builtin.service:
    name: postgresql
    state: reloaded
  when:
    - remote_postgres_configured.changed
  delegate_to: '{{ dpul_c_figgy_db_host }}'

- name: 'pul_nomad_dpulc | reload production figgy postgresql'
  ansible.builtin.service:
    name: postgresql
    state: reloaded
  when:
    - remote_postgres_configured.changed
  delegate_to: '{{ dpul_c_figgy_db_host }}'

- name: 'pul_nomad_dpulc | add the application environment variables'
  ansible.builtin.shell:
    cmd: '/usr/local/bin/nomad var put -force nomad/jobs/{{ dpul_c_job_name }} {{ dpul_c_nomad_env_vars.keys() | zip(dpul_c_nomad_env_vars.values()) | map("join", "=") | join(" ") }}'
  environment:
    NOMAD_TOKEN: '{{ pul_nomad_management_token }}'
  run_once: true
