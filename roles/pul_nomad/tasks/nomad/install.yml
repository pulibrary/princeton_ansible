---
- name: pul_nomad | nomad | Install OS packages
  ansible.builtin.package:
    name:
      - curl
      - git
      - unzip
    state: present

- name: 'pul_nomad | nomad | Install nomad binary'
  when: nomad_installed_version != nomad_version
  block:
    - name: 'pul_nomad | nomad | Create a temporary directory'
      ansible.builtin.tempfile:
        state: directory
        prefix: ansible-nomad.
      register: nomad_temp_dir

    - name: 'pul_nomad | nomad | Download and unarchive Nomad'
      block:
        - name: 'pul_nomad | nomad | Download Nomad package checksum file'
          ansible.builtin.get_url:
            url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_SHA256SUMS"
            dest: "{{ nomad_temp_dir.path }}/nomad_{{ nomad_version }}_SHA256SUMS"
          tags: installation

        - name: 'pul_nomad | nomad | Read Nomad package checksum'
          ansible.builtin.shell: grep nomad_{{nomad_version}}_linux_{{ nomad_architecture }}.zip {{ nomad_temp_dir.path }}/nomad_{{ nomad_version }}_SHA256SUMS
          register: nomad_sha256
          changed_when: false
          tags:
            - installation

        - name: 'pul_nomad | nomad | Download Nomad'
          ansible.builtin.get_url:
            url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_{{ nomad_architecture }}.zip"
            dest: "{{ nomad_temp_dir.path }}/nomad_{{ nomad_version }}_linux_{{ nomad_architecture }}.zip"
            checksum: "sha256:{{ nomad_sha256.stdout.split(' ') | first }}"
            timeout: 42
          register: nomad_download
          tags: installation

        - name: 'pul_nomad | nomad | Unarchive Nomad and install binary'
          ansible.builtin.unarchive:
            remote_src: true
            src: "{{ nomad_temp_dir.path }}/nomad_{{ nomad_version }}_linux_{{ nomad_architecture }}.zip"
            dest: "/usr/local/bin"
            mode: "0755"
          register: nomad_install
          notify:
            - reload systemd
            - restart nomad
          when: nomad_download is changed
          tags: installation
      always:
        - name: 'pul_nomad | nomad | Cleanup'
          ansible.builtin.file:
            path: "{{ nomad_temp_dir.path }}"
            state: absent
          tags: installation

- name: 'pul_nomad | nomad | Install systemd config'
  ansible.builtin.copy:
    src: files/nomad/nomad.service
    dest: /lib/systemd/system/nomad.service
    owner: root
    group: root
    mode: 0644
  notify: 'reload systemd'

- name: pul_nomad | nomad | Create directories
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    mode: "0755"
  with_items:
    - "/var/nomad"
    - "/var/nomad/plugins"
    - "/etc/nomad.d"
