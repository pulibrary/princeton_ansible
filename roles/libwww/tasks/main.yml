---
######### Discovery utils start ######
# Things needed for discover utils after this

# needed for capistrano to have access to this file
- name: libwww | Check to see if .env.local file exists.
  stat:
    path: "/home/{{ deploy_user }}/.env.local"
  register: env_home_exists

# needed for capistrano to have access to this file
- name: libwww | Install .env.local in deploy user home directory for cap
  template:
    src: "env.local.j2"
    dest: "/home/{{ deploy_user }}/.env.local"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0644
  when: not env_home_exists.stat.exists or force_settings

- name: libwww | Add apache rules for discovery utils
  blockinfile:
    path: "/etc/apache2/sites-available/000-default.conf"
    marker: "## {mark} ANSIBLE MANAGED BLOCK ##"
    insertafter: "</Directory>"
    block: |
      Alias /utils {{ discoveryutils_docroot }}_cap/current/public
      <Directory "{{ discoveryutils_docroot }}_cap/current/public">
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        {{ discovery_utils_datadog_trace_environment }}
      </Directory>
  notify: restart apache


########### Drupal Start ######
# Drupal after this

- name: libwww | Copy database dump
  copy:
    src: 'files/{{ drupal_dbimport_file }}'
    dest: '/home/deploy/{{ drupal_dbimport_file }}'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 'preserve'
  when: (drupal_dbimport_file is defined) and (inventory_hostname ==  groups[group_names[0]][0])

- name: libwww | Import database from local dump file
  mysql_db:
    state: 'import'
    name: '{{ drupal_db_name }}'
    login_host: '{{ db_host | default(omit) }}'
    login_port: '{{ db_port | default(omit) }}'
    login_password: '{{ drupal_db_password | default(omit) }}'
    login_user: '{{ drupal_db_user }}'
    target: '/home/deploy/{{ drupal_dbimport_file }}'
  when: (drupal_dbimport_file is defined) and (inventory_hostname ==  groups[group_names[0]][0])

- name: libwww | Copy the staff script
  copy:
    src: 'files/get_staff_updates.sh'
    dest: '/usr/bin/get_staff_updates.sh'
    owner: '{{ deploy_user }}'
    group: '{{ deploy_user }}'
    mode: 0777

- name: libwww | ensure max file size is set in apache2 php.ini
  lineinfile:
    dest: "/etc/php/7.4/apache2/php.ini"
    regexp: "upload_max_filesize ="
    line: "upload_max_filesize = 8M"

- name: libwww | ensure memory limit is set in apache2 php.ini
  lineinfile:
    dest: "/etc/php/7.4/apache2/php.ini"
    regexp: "memory_limit ="
    line: "memory_limit = 256M"

- name: libwww | ensure MaxConnectionsPerChild is set for system use
  lineinfile:
    dest: "/etc/apache2/mods-available/mpm_prefork.conf"
    regexp: "\\s*MaxConnectionsPerChild\\s*0"
    line: "\tMaxConnectionsPerChild\t 1000"
  notify: restart apache

- name: libwww | ensure MaxRequestWorkers is set for system use
  lineinfile:
    dest: "/etc/apache2/mods-available/mpm_prefork.conf"
    regexp: "\\s*MaxRequestWorkers\\s*150"
    line: "\tMaxRequestWorkers\t 388"
  notify: restart apache

- name: libwww | Allow deploy user to reboot the machine
  lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    line: "{{ deploy_user }} ALL=(ALL) NOPASSWD: /sbin/shutdown -r now"
    validate: "visudo -cf %s"
