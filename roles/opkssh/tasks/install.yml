---
# Installation tasks
- name: Opkssh - check if local install file is specified
  ansible.builtin.set_fact:
    opkssh_use_local_install: "{{ opkssh_local_install_file | length > 0 }}"

- name: Opkssh - install from local file
  block:
    - name: Opkssh - Check if local file exists
      ansible.builtin.stat:
        path: "{{ opkssh_local_install_file }}"
      register: local_file_stat

    - name: Opkssh - fail if local file doesn't exist
      ansible.builtin.fail:
        msg: "Specified local file does not exist: {{ opkssh_local_install_file }}"
      when: not local_file_stat.stat.exists

    - name: Opkssh - copy local binary to installation directory
      ansible.builtin.copy:
        src: "{{ opkssh_local_install_file }}"
        dest: "{{ opkssh_install_dir }}/{{ opkssh_binary_name }}"
        owner: root
        group: "{{ opkssh_auth_cmd_group }}"
        mode: "0755"
        remote_src: true
  when: opkssh_use_local_install

- name: Opkssh - download and install from GitHub
  block:
    - name: Opkssh - set download URL for latest version
      ansible.builtin.set_fact:
        opkssh_binary_url: "https://github.com/{{ opkssh_github_repo }}/releases/latest/download/opkssh-linux-{{ opkssh_cpu_arch }}"
      when: opkssh_install_version == "latest"

    - name: Opkssh - set download URL for specific version
      ansible.builtin.set_fact:
        opkssh_binary_url: "https://github.com/{{ opkssh_github_repo }}/releases/download/{{ opkssh_install_version }}/opkssh-linux-{{ opkssh_cpu_arch }}"
      when: opkssh_install_version != "latest"

    - name: Opkssh - download opkssh binary
      ansible.builtin.get_url:
        url: "{{ opkssh_binary_url }}"
        dest: "{{ opkssh_install_dir }}/{{ opkssh_binary_name }}"
        owner: root
        group: "{{ opkssh_auth_cmd_group }}"
        mode: "0755"
        force: true
  when: not opkssh_use_local_install

- name: Opkssh - get installed version
  ansible.builtin.command: "{{ opkssh_install_dir }}/{{ opkssh_binary_name }} --version"
  register: opkssh_version
  changed_when: false
