---
# PostgreSQL-related settings
postgresql_is_local: true
# postgresql_is_local: "{{ 'true' if project_db_host | search( 'localhost|127\\.0\\.0\\.1|^/') else 'false' }}"
application_dbuser_role_attr_flags: ''
# https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server
# 1/4 memory to Shared Buffers
buffer_memory: '{{ ([(ansible_memtotal_mb*0.25)|int|abs, 128]|max) | default(128) }}MB'
# A little less than 3/4 of memory to effective_cache_size
cache_size: '{{ ([(ansible_memtotal_mb*0.6)|int|abs, 4000]|max) | default(4000) }}MB'
# https://www.enterprisedb.com/postgres-tutorials/how-tune-postgresql-memory
# 25% of ram dedicated to work if all connections(400) maxed, or 4 MB each.
work_mem: '{{ ([((ansible_memtotal_mb*0.25/400)|int|abs), 4]|max) }}MB'
# 5% of ram dedicated to maintenance work
maintenance_work_mem: '{{ ([(ansible_memtotal_mb*0.05)|int|abs, 64]|max)}}MB'
min_wal: '{{ one_gig | default("80MB") }}'
max_wal: '{{ two_gig | default("1GB") }}'
# APT settings
postgres_apt_key_id: ACCC4CF8
postgres_apt_key_url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
postgres_apt_repository: 'deb http://apt.postgresql.org/pub/repos/apt/ {{ansible_distribution_release}}-pgdg main {{postgres_version}}'
# Pin-Priority of PGDG repository
postgres_apt_pin_priority: 500
postgres_version: 15
apt_cache_timeout: 86400
application_dbuser_name: "pguser"
application_dbuser_password: "changethis"
application_db_name: "dbname"
# Warm Standby Variables
postgresql_cluster_member: false
postgresql_leader: true
postgresql_replication_leader: false
postgresql_replication_password: "{{ vault_postgresql_replication_password }}"
postgresql_cluster_hosts:
postgresql_cluster: false
# Logical replication (used for upgrading between psql versions)
postgresql_logical_replication: false

postgres_packages:
  - postgresql-{{ postgres_version }}
  - postgresql-client-{{ postgres_version }}
  - postgresql-contrib-{{ postgres_version }}

postgres_client_packages:
  - libpq-dev
  - python3-psycopg2
  - postgresql-client-{{ postgres_version }}

postgres_service_name: "postgresql-{{ postgres_version }}"
postgres_database_owner: "postgres"
postgres_cluster_name: "main"
postgres_conf_directory: "/etc/postgresql/{{ postgres_version }}/{{ postgres_cluster_name }}"

db_clusteradmin_password: "changethis"
postgres_admin_password: "change"
sudoers_dir: "/etc/sudoers.d"
postgres_locale_parts:
  - "en_US"  # Locale
  - "UTF-8"  # Encoding
postgres_locale: "{{ postgres_locale_parts | join('.') }}"
postgres_ctype_parts:
  - "en_US"  # Locale
  - "UTF-8"  # Encoding
postgres_ctype: "{{ postgres_ctype_parts | join('.') }}"

postgres_env:
  LC_ALL: "{{ postgres_locale }}"
  LC_LCTYPE: "{{ postgres_locale }}"

# Extensions
postgres_ext_install_contrib: true
postgres_ext_install_dev_headers: true
postgres_ext_install_postgis: true
postgres_database_extensions: []

postgres_ext_postgis_version: "3"
postgres_ext_postgis_deps:
  - postgresql-{{ postgres_version }}-pgrouting-scripts
  - postgresql-{{ postgres_version }}-postgis-{{ postgres_ext_postgis_version }}
  - postgresql-{{ postgres_version }}-postgis-{{ postgres_ext_postgis_version }}-scripts

postgres_data_directory: "/var/lib/postgresql/{{ postgres_version }}/{{ postgres_cluster_name }}"

# HBA Connections
postgres_hba_entries: []
pg_hba_postgresql_user: "all"
pg_hba_postgresql_database: "all"
# test if we can use "{{ application_dbuser_name }}" and "{{ application_db_name }}"
# and the user can still create a database
pg_hba_method: "md5"
pg_hba_source: "host"
