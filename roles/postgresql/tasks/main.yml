---
- name: PostgreSQL | Make sure the CA certificates are available
  ansible.builtin.apt:
    pkg: ca-certificates
    state: present

- name: PostgreSQL | Add PostgreSQL repository apt-key
  ansible.builtin.apt_key:
    url: "{{ postgres_apt_key_url }}"
    state: present

- name: PostgreSQL | add postgres:10 appstream
  ansible.builtin.dnf:
    name: "@postgresql:10/client"
    state: present
    ignore_errors: true
  when:
    - running_on_server
    - ansible_distribution == "CentOS"

- name: PostgreSQL | add postgresql repository
  ansible.builtin.apt_repository:
    repo: 'deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
    state: present

- name: PostgreSQL | install postgresql server packages
  ansible.builtin.apt:
    name: '{{ item }}'
    state: present
    cache_valid_time: '{{ apt_cache_timeout }}'
  loop:
    - "{{ postgres_packages }}"
  when: postgresql_is_local

- name: PostgreSQL | install postgresql client packages
  ansible.builtin.apt:
    name: '{{ item }}'
    state: present
    cache_valid_time: '{{ apt_cache_timeout }}'
  loop:
    - "{{ postgres_client_packages }}"
  changed_when: false

- name: PostgreSQL | install postgresql client packages Centos
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop:
    - libpq-devel
    - python3-psycopg2
    - python3-psycopg2
  when:
    - running_on_server
    - ansible_distribution == "CentOS"

- import_tasks: extensions.yml

- name: PostgreSQL | install configuration file
  ansible.builtin.template:
    src: 'postgresql.conf.j2'
    dest: '/etc/postgresql/{{ postgres_version }}/main/postgresql.conf'
    group: postgres
    owner: postgres
    mode: 0644
  register: configure_postgres
  when: postgresql_is_local
  notify: restart local postgres

- name: PostgreSQL | ensure postgres starts on boot
  ansible.builtin.service:
    name: postgresql
    enabled: true
  when: postgresql_is_local

- name: PostgreSQL | restart postgres server
  ansible.builtin.service:
    name: postgresql
    state: started
  when: postgresql_is_local

- name: PostgreSQL | ensure pgpass
  ansible.builtin.template:
    src: pg_pass.j2
    dest: "~/.pgpass"
    mode: 0600
    owner: postgres
  changed_when: false
  when: postgresql_is_local
  become: true

- name: PostgreSQL | ensure access to postgres server
  ansible.builtin.blockinfile:
    path: '/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf'
    insertafter: "# Put your actual configuration here"
    block: |
      # localhost
  when:
    - postgres_host is not none
    - postgresql_is_local
    - running_on_server
  become: true
  notify:
    - reload local postgres

- include_tasks: pg_hba.yml
- include_tasks: create_db.yml
- include_tasks: create_users.yml
