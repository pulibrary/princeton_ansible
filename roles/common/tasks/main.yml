---
- name: Common | Confirm that hostname matches inventory
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
  when:
    "ansible_hostname not in inventory_hostname"
  tags: "update_hostname"

- name: Common | Install common shared packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ common_shared_packages }}"

- name: Common | Install common ubuntu packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ common_ubuntu_packages }}"
  when:
    - ansible_os_family == "Debian"

- name: Common | Install common RHEL packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ common_rhel_packages }}"
  when:
    - ansible_os_family == "RedHat"

- name: Common | copy tmux.conf
  ansible.builtin.template:
    src: "tmux.conf.j2"
    dest: "/etc/tmux.conf"
    mode: "0644"

- name: Common | create vim directory
  ansible.builtin.file:
    path: /etc/vim
    state: directory
    mode: "0644"

- name: Common | copy vimrc
  ansible.builtin.copy:
    src: files/vimrc.local
    dest: /etc/vim/vimrc.local
    mode: "0644"

- name: Common | ensure logrotate timer dir exists
  ansible.builtin.file:
    path: /etc/systemd/system/logrotate.timer.d
    state: directory
    mode: "0755"
    owner: root
    group: root
  when: ansible_service_mgr=="systemd"

- name: Common | override default logrotate timer
  ansible.builtin.template:
    src: "logrotate_timer.j2"
    dest: "/etc/systemd/system/logrotate.timer.d/override.conf"
    mode: "0644"
  when: ansible_service_mgr=="systemd"
  notify:
    - reload logrotate timer settings

- name: Common | install configured dependencies
  ansible.builtin.package:
    name: '{{ configured_dependencies }}'
    state: present

- name: Common | remove dust
  ansible.builtin.apt:
    name: dust
    state: absent

- name: Common | Ensure system installation directory exists (e.g., /usr/local/bin)
  ansible.builtin.file:
    path: "{{ system_install_dir }}"
    state: directory
    mode: '0755'

- name: Common | Check if dua is already installed system-wide
  ansible.builtin.stat:
    path: "{{ dua_system_executable }}"
  register: dua_system_stat_result

- name: Common | Install dua-cli system-wide if not already present
  ansible.builtin.shell: "{{ dua_system_install_command }}"
  args:
    creates: "{{ dua_system_executable }}"
  when: not dua_system_stat_result.stat.exists

- name: Common | Verify dua installation
  ansible.builtin.command: "{{ dua_system_executable }} --version"
  register: dua_version_result
  changed_when: false
  when: not dua_system_stat_result.stat.exists
  failed_when: dua_version_result.rc != 0

- name: Common | Display dua version if installed/verified
  ansible.builtin.debug:
    msg: "dua-cli version: {{ dua_version_result.stdout }}"
  when: dua_version_result.stdout is defined and dua_version_result.rc == 0

- name: Common | install vector, but not in testing
  ansible.builtin.include_tasks: vector.yml
  when: running_on_server
