---
# defaults file for roles/common
ansible_distribution_release: jammy
dua_install_tag: "v2.30.0"
duf_version: "0.8.1"
fd_find_version: "9.0.0"
configured_dependencies: []
common_shared_packages:
  - curl
  - git
  - htop
  - jq
  - tmux
  - tree
  - unzip
  - vim
  - wget
  - zip
common_ubuntu_packages:
  - acl
  - build-essential
  - duf
  - libcurl4
  - libssl-dev
  - libyaml-dev
  - plocate
  - python3-apt
  - python3-pip
  - python3-setuptools
  - silversearcher-ag
  - zlib1g-dev
common_rhel_packages:
  - "@Development tools"
  - libacl.x86_64
  - libyaml
  - openssl-libs
  - python3-devel
  - python3-pip
  - the_silver_searcher
# Journald configuration
# Controls how much disk space systemd journal logs can consume
journald_system_max_use: "800M"
# Optional: Uncomment to use alternative settings
# journald_system_keep_free: "1G"      # Ensures specified amount of disk space remains free
# journald_system_max_file_size: "100M"  # Maximum size of individual journal files
# journald_system_max_files: 10        # Maximum number of individual journal files
# Logrotate configuration opinionated defaults
logrotate_global_defaults:
  rotate: 7
  maxsize: "2000M"
  create_mode: "0644"
  create_owner: "root"
  create_group: "root"
  su_user:    "root"
  su_group:   "root"
# Default logrotate rules - can be completely overridden
logrotate_rules:
  - name: "falcon-sensor"
    paths:
      - "/var/log/falcon-sensor.log"
      - "/var/log/falcon-libbpf.log"
    options:
      rotate: "{{ logrotate_global_defaults.rotate }}"
      maxsize: "{{ logrotate_global_defaults.maxsize }}"
      create_mode: "{{ logrotate_global_defaults.create_mode }}"
      create_owner: "{{ logrotate_global_defaults.create_owner }}"
      create_group: "{{ logrotate_global_defaults.create_group }}"
      su_user: "{{ logrotate_global_defaults.su_user }}"
      su_group: "{{ logrotate_global_defaults.su_group }}"
      # Optional: add postrotate script if service needs notification
      # postrotate: |
      #   systemctl reload myservice || true
# Example 1: Web server logs (group_vars/bibdata/staging.yml)
# logrotate_rules:
#  - name: "nginx-access"
#    paths:
#      - "/var/log/nginx/access.log"
#    options:
#      rotate: 30                # we increase the defaults to 30 nginx access logs
#      maxsize: "5000M"          # we increase size for access logs
#      postrotate: |
#        if [ -f /var/run/nginx.pid ]; then
#          kill -USR1 `cat /var/run/nginx.pid`
#        fi
#  - name: "nginx-error"
#    paths:
#      - "/var/log/nginx/error.log"
#    options:
#      rotate: 14               # we increase the defaults to 14 for error logs
#      maxsize: "500M"           # we decrease the size logs
#      postrotate: |
#        if [ -f /var/run/nginx.pid ]; then
#          kill -USR1 `cat /var/run/nginx.pid`
#        fi
# Example 2: postgresql logs (group_vars/postgresql/staging.yml)
# logrotate_rules:
#  - name: "postgresql"
#    paths:
#      - "/var/log/postgresql/*.log"
#    options:
#      rotate: 14               # we increase the number of rotated DB logs
#      maxsize: "5000M"          # Database logs can be larger
      # Note: No postrotate needed as PostgreSQL handles this internally
# Example 3: Application-specific logs (group_vars/orangelight/staging.yml)
# logrotate_rules:
#  - name: "orangelight"
#    paths:
#      - "/opt/orangelight/current/log/staging.log"
#    options:
#      rotate: 7                # Standard retention
#      maxsize: "200M"          # Standard size limit
#      create_owner: "deploy"    # we change the App-specific ownership from root to deploy
#      create_group: "deploy"
#      postrotate: |
#        systemctl reload orangelight || true
