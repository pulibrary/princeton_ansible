---
- name: Import the NodeSource GPG key into apt
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present

- name: Add NodeSource deb repository
  apt_repository:
    repo: 'deb https://deb.nodesource.com/node_{{ debian_repo_version }} {{ ansible_distribution_release }} main'
    state: present

- name: Add NodeSource deb-src repository
  apt_repository:
    repo: 'deb-src https://deb.nodesource.com/node_{{ debian_repo_version }} {{ ansible_distribution_release }} main'
    state: present

- name: Add NodeSource repository preferences
  template:
    src: "deb_nodesource_com_node_pref.j2"
    dest: "/etc/apt/preferences.d/deb_nodesource_com_node.pref"

- name: Add upstream Yarn APT key from PGP
  apt_key:
    id: "{{ nodejs__yarn_upstream_key_id }}"
    keyserver: "hkp://pool.sks-keyservers.net"
    state: present
  register: yarnpool_servers
  ignore_errors: true

- name: Add upstream Yarn APT key from MIT when PGP fails
  apt_key:
    id: "{{ nodejs__yarn_upstream_key_id }}"
    state: present
    keyserver: "pgp.mit.edu"
  when: yarnpool_servers is failed
  register: yarnmit_servers
  ignore_errors: true

- name: Add upstream Yarn APT key from PGP when MIT fails
  apt_key:
    id: "{{ nodejs__yarn_upstream_key_id }}"
    state: present
    keyserver: "keyserver.pgp.com"
  when: yarnmit_servers is failed
  ignore_errors: true

- name: Add upstream Yarn APT repository
  apt_repository:
    repo: "{{ nodejs__yarn_upstream_repository }}"
    state: present
    update_cache: true

- name: Determine version of node
  command: node -v
  changed_when: false
  ignore_errors: true
  register: node_version

- name: Test version of node
  debug:
    msg: "NodeJS major version mismatch"
  when: node_version.stdout is search( node_major )

- name: Uninstall Node.js
  command: /usr/bin/apt-get -y purge nodejs
  run_once: true
  when: node_version.stdout is search( node_major )
  changed_when: false

- name: Install node packages
  apt:
    name: ["nodejs", "yarn"]
    state: present
    update_cache: true
  when: node_version.stdout is search( node_major )
