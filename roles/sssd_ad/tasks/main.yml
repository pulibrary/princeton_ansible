---
# Windows Active Directory has a limit of hostname characters
- name: Sssd_ad | change hostname to match AD
  ansible.builtin.command: hostnamectl set-hostname {{ host_ad_name | default(omit) }}
  changed_when: false
  when:
    - running_on_server

- name: Sssd_ad | allow password authentication
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^PasswordAuthentication no'
    line: 'PasswordAuthentication yes'

- name: Sssd_ad | allow users authentication
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^AllowUsers pulsys'
    line: '# AllowUsers pulsys'
  when: running_on_server
  notify: restart sshd

- name: Sssd_ad | install necessary packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - adcli
    - krb5-user
    - libnss-sss
    - libpam-sss
    - packagekit
    - sssd
    - sssd-tools
    - realmd
    - samba

- name: Sssd_ad | configure Kerberos
  ansible.builtin.template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    mode: "0644"
    owner: root
    group: root

- name: Sssd_ad | Discover the domain
  ansible.builtin.command: realm discover {{ ad_domain }}
  register: realm_discovery
  changed_when: false

- name: Sssd_ad | join the domain
  ansible.builtin.command: realm join {{ ad_domain }} -U {{ ad_admin_user }}
  vars:
    ansible_become_pass: "{{ ad_admin_password }}"
  become: true
  when:
    - running_on_server
    - "'configured' not in realm_discovery.stdout"
  changed_when: false

- name: Sssd_ad | Configure sssd.conf
  ansible.builtin.template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    mode: "0600"
    owner: root
    group: root

- name: Sssd_ad | Restart sssd service
  ansible.builtin.systemd:
    name: sssd
    state: restarted
    enabled: true

- name: Sssd_ad | configure smb
  ansible.builtin.lineinfile:
    path: /etc/samba/smb.conf
    line: "{{ item }}"
    mode: "0644"
  loop:
    - '[global]'
    - '   workgroup = {{ ad_workgroup }}'
    - '   security = ads'
    - '   realm = {{ ad_domain | upper }}'
    - '   kerberos method = secrets and keytab'
    - '   idmap config * : range = 16777216-33554431'
  notify: restart smb

- name: Sssd_ad | ensure /run/samba directory exists
  ansible.builtin.file:
    path: /run/samba
    state: directory
    owner: root
    group: sambashare
    mode: "0770"

- name: Sssd_ad | ensure sambashare group exists
  ansible.builtin.group:
    name: sambashare
    state: present

- name: Sssd_ad | add current user to sambashare group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: sambashare
    append: true

- name: Sssd_ad | restart Samba services
  ansible.builtin.service:
    name: smbd
    state: restarted
  notify: restart smb

- name: Sssd_ad | enable and start sssd service
  ansible.builtin.service:
    name: sssd
    state: started
    enabled: true
  register: sssd_service
  when: running_on_server

- name: Sssd_ad | configure PAM
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-session
    line: 'session required pam_mkhomedir.so skel=/etc/skel umask=0022'

- name: Sssd_ad | check if AD user exists
  ansible.builtin.command: getent passwd {{ ad_test_user }}
  register: ad_user_check
  ignore_errors: true
  changed_when: false
  when: running_on_server

- name: Sssd_ad | create home directory for AD users
  ansible.builtin.file:
    path: /home/{{ ad_test_user }}
    state: directory
    mode: "0700"
    owner: "{{ ad_test_user }}"
    group: "sambashare"
  when:
    - running_on_server
    - ad_user_check.rc == 0

- name: Sssd_ad | test login with AD user
  ansible.builtin.command: su - {{ ad_test_user }} -c 'exit 0'
  changed_when: false
  ignore_errors: true
  register: ad_login_result
  when: running_on_server

- name: Sssd_ad | debug AD login result
  ansible.builtin.debug:
    var: ad_login_result
  when: running_on_server
