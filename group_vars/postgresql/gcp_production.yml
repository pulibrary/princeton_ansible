---
replication_database: "replicant"
replication_user: "replicant"
db_clusteradmin_user: "postgres"
db_clusteradmin_password: "{{ vault_postgres_admin_password }}"
replication_user_password: "{{ vault_replicant_password }}"
repmgr_config: "/etc/repmgr.conf"
postgresql_settings:
  - name: port
    value: 5432
  - name: listen_addresses
    value: "*"
  - name: auto_explain.log_min_duration
    value: 250
  - name: random_page_cost
    value: "1.1"
  - name: effective_cache_size
    value: "4GB"
  - name: default_statistics_target
    value: 100
  - name: log_destination
    value: "csvlog"
  - name: logging_collector
    value: "on"
  - name: log_directory
    value: "/var/log/postgresql"
  - name: log_filename
    value: "postgresql_csv_log"
  - name: log_file_mode
    value: "0644"
  - name: log_rotation_age
    value: "1d"
  - name: log_rotation_size
    value: "1GB"
  - name: log_min_duration_statement
    value: "250ms"
  - name: log_checkpoints
    value: "on"
  - name: log_connections
    value: "on"
  - name: log_disconnections
    value: "on"
  - name: log_lock_waits
    value: "on"
  - name: log_temp_files
    value: 0
  - name: track_activities
    value: "on"
  - name: track_activity_query_size
    value: 1024
  - name: autovacuum
    value: "on"
  - name: autovacuum_max_workers
    value: 3
  - name: wal_level
    value: "replica"
  - name: max_wal_senders
    value: 10
  - name: max_replication_slots
    value: 10
  - name: max_connections
    value: 400
  - name: archive_mode
    value: on
  - name: archive_command
    value: "rsync -a %p barman@{{ barman_leader_db_ip }}:/var/lib/barman/ssh/incoming/%f"

postgresql_ext_install_postgis: true
postgresql_databases:
  - name: replicant
  - name: test_db
postgresql_users:
  - name: postgres
    password: "{{ vault_postgres_admin_password }}"
    db: "postgres"
    priv: "ALL"
    role_attr_flags: "SUPERUSER"
  - name: barman
    password: "{{ vault_barman_admin_password }}"
    db: "postgres"
    priv: "ALL"
    role_attr_flags: "SUPERUSER"
  - name: streaming_barman
    password: "{{ vault_streaming_barman_password }}"
    db: "postgres"
    priv: "ALL"
    role_attr_flags: "REPLICATION"
  - name: replicant
    password: "{{ vault_replicant_password }}"
    db: replicant
    priv: "ALL"
    role_attr_flags: "CREATEDB,SUPERUSER"
  - name: pgbouncer_user
    password: "{{ vault_md5_free_password }}"
    priv: "ALL"
    db: test_db
    role_attr_flags: "CREATEDB"
  - name: dataspace_prod_db_user
    password: "{{ vault_database_production_db_password }}"
    priv: "ALL"
    db: dataspace_prod_db
    role_attr_flags: "CREATEDB"
  - name: oar_prod_db_user
    password: "{{ vault_oar_production_db_password }}"
    priv: "ALL"
    db: oar_prod_db
    role_attr_flags: "CREATEDB"
postgresql_hba_entries:
  - type: local
    database: all
    user: postgres
    method: ident
  - type: local
    database: all
    user: barman
    method: ident
  - type: local
    database: replicant
    user: replicant
    method: md5
  - type: host
    database: all
    user: postgres
    address: 127.0.0.1/32
    method: ident
  - type: host
    database: all
    user: barman
    address: 127.0.0.1/32
    method: ident
  - type: host
    database: all
    user: postgres
    address: "{{ leader_db_ip }}/32"
    method: md5
  - type: host
    database: all
    user: postgres
    address: "{{ barman_leader_db_ip }}/32"
    method: md5
  - type: host
    database: replication
    user: replicant
    address: "{{ leader_db_ip }}/32"
    method: md5
  - type: host
    database: all
    user: postgres
    address: "{{ standby_db_ip }}/32"
    method: md5
  - type: host
    database: replication
    user: replicant
    address: "{{ standby_db_ip }}/32"
    method: md5
  - type: host
    database: replication
    user: streaming_barman
    address: "{{ barman_leader_db_ip }}/32"
    method: md5
  - type: host
    database: all
    user: postgres
    address: 127.0.0.1/32
    method: md5
  - type: host
    database: all
    user: barman
    address: 127.0.0.1/32
    method: md5
  - type: host
    database: replicant
    user: replicant
    address: 127.0.0.1/32
    method: md5
  - type: host
    database: replicant
    user: replicant
    address: "{{ leader_db_ip }}/32"
    method: md5
  - type: host
    database: replicant
    user: replicant
    address: "{{ standby_db_ip }}/32"
    method: md5
  - type: host
    database: all
    user: pgbouncer_user
    address: "{{ standby_db_ip }}/32"
    method: md5
  - type: host
    database: all
    user: barman
    address: "{{ barman_leader_db_ip }}/32"
    method: md5
  - type: host
    database: all
    user: streaming_barman
    address: "{{ barman_leader_db_ip }}/32"
    method: md5
  - type: host
    database: dataspace_prod_db
    user: dataspace_prod_db_user
    address: "10.244.0.2/32"
    method: md5
  - type: host
    database: oar_prod_db
    user: oar_prod_db_user
    address: "10.244.0.3/32"
    method: md5

datadog_api_key: "{{ vault_datadog_key }}"
datadog_enabled: true
datadog_config: 
  log_enabled: true
datadog_checks:
  gcp_postgres_log_check:
    init_config:
    logs:
      - type: file
        path: /var/log/postgresql/*.csv
        service: postgresql
        source: postgresql
        sourcecategory: postgresql
        tags: "application:postgresql, environment:production, type:database"
  gcp_postgres_stat_check:
    init_config:
    instances:
      - host: localhost
        port: 5432
        username: datadog
        password: "{{ vault_datadog_db_password }}"
        collect_activity_metrics: true
        collect_default_database: true
        collect_count_metrics: true
        collect_function_metrics: true
