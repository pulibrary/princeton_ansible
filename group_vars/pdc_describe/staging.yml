---
postgres_host: 'lib-postgres-staging1.princeton.edu'

postgres_version: 15
passenger_server_name: "{{ inventory_hostname }}"
passenger_app_env: "staging"
passenger_extra_config: "client_max_body_size 0;"

pdc_describe_db_name: 'pdc_describe_staging'

pdc_describe_db_user: '{{vault_pdc_describe_staging_db_user}}'
pdc_describe_db_password: '{{vault_pdc_describe_staging_db_password}}'

rails_app_env: "staging"

pdc_describe_host_name: 'pdc-describe-staging.princeton.edu'
pdc_describe_honeybadger_key: '{{vault_pdc_describe_honeybadger_key}}'

pdc_describe_staging_aws_pre_curate_bucket: 'pdc-describe-staging-precuration'
pdc_describe_staging_aws_post_curate_bucket: 'pdc-describe-staging-postcuration'
pdc_describe_staging_aws_preservation_bucket: 'pdc-describe-staging-preservation'
pdc_describe_production_aws_dspace_bucket: 'prds-dataspace'
pdc_describe_staging_aws_embargo_bucket: 'pdc-describe-staging-embargo'

install_mailcatcher: true

app_pdc_describe__secret_key: '{{ vault_pdc_describe_staging_secret_key }}'
app_pdc_describe_datacite_user: '{{ vault_pdc_describe_staging_datacite_user }}'
app_pdc_describe_datacite_password: '{{ vault_pdc_describe_staging_datacite_password }}'
app_datacite_host: 'api.test.datacite.org'
app_datacite_prefix: '10.80021'
app_pdc_describe_aws_pre_curate_bucket: '{{ pdc_describe_staging_aws_pre_curate_bucket }}'
app_pdc_describe_aws_post_curate_bucket: '{{ pdc_describe_staging_aws_post_curate_bucket }}'
app_pdc_describe_aws_preservation_bucket: '{{ pdc_describe_staging_aws_preservation_bucket }}'
app_pdc_describe_aws_dspace_bucket: '{{ pdc_describe_production_aws_dspace_bucket }}'
app_pdc_describe_aws_embargo_bucket: '{{ pdc_describe_staging_aws_embargo_bucket }}'
app_pdc_describe_ezid_user: 'apitest'
app_pdc_describe_ezid_password: 'apitest'
app_pdc_describe_ezid_shoulder: 'ark:/99999/fk4'
app_pdc_redis_host: 'pdc-describe-redis-staging1.lib.princeton.edu'

# signoz
otel_default_resource_attributes:
  host.name: "{{ inventory_hostname }}"
  service.name: datacommons
  service.version: staging
  environment: staging

otel_receivers:
  filelog/nginx-access:
    include: ["/var/log/nginx/access.log*"]
    start_at: end
    operators:
      - type: regex_parser
        regex: '^(?P<remote_addr>[^\s]+) \((?P<remote_user>[^)]*)\) - - \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
        parse_from: body
      - type: time_parser
        parse_from: attributes.time_local
        layout_type: strptime
        layout: '%d/%b/%Y:%H:%M:%S %z'
      - type: add
        field: attributes.log_type
        value: "pdc-describe_access"
      - type: add
        field: attributes.service_name
        value: datacommons_access
  filelog/nginx-error:
    include: ["/var/log/nginx/error.log*"]
    start_at: end
    operators:
      - type: add
        field: attributes.log_type
        value: "pdc-describe_error"
      - type: add
        field: attributes.service_name
        value: "datacommons_error"
  hostmetrics:
    collection_interval: 30s
    scrapers: { cpu: {}, disk: {}, filesystem: {}, load: {}, memory: {}, network: {} }

otel_processors:
  batch: { send_batch_max_size: 1024, send_batch_size: 512, timeout: 30s }

otel_exporters:
  otlp:
    endpoint: "http://sandbox-signoz1.lib.princeton.edu:4317"
    tls: { insecure: true }
  debug: { verbosity: basic }

otel_service_pipelines:
  logs:
    receivers: ["filelog/nginx-access", "filelog/nginx-error"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
  metrics:
    receivers: ["hostmetrics"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
