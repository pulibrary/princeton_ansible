---
postgres_host: 'lib-postgres-staging3.princeton.edu'

passenger_server_name: "{{ inventory_hostname }}"
passenger_app_env: "staging"
passenger_extra_config: "client_max_body_size 0;"

pdc_describe_db_name: 'pdc_describe_staging'

pdc_describe_db_user: '{{vault_pdc_describe_staging_db_user}}'
pdc_describe_db_password: '{{vault_pdc_describe_staging_db_password}}'

rails_app_env: "staging"

pdc_describe_host_name: 'pdc-describe-staging.princeton.edu'
pdc_describe_honeybadger_key: '{{vault_pdc_describe_honeybadger_key}}'

pdc_describe_staging_aws_pre_curate_bucket: 'pdc-describe-staging-precuration'
pdc_describe_staging_aws_post_curate_bucket: 'pdc-describe-staging-postcuration'
pdc_describe_production_aws_dspace_bucket: 'prds-dataspace'

install_mailcatcher: true
mailcatcher_user: "pulsys"
mailcatcher_group: "pulsys"
mailcatcher_install_location: "/usr/local/lib/ruby/gems/3.1.0/gems/mailcatcher-0.8.2/bin/mailcatcher"

datadog_api_key: "{{ vault_datadog_key }}"
datadog_config:
  tags: "application:pdc-describe, env:staging, type:webserver"
  apm_enabled: "true"
  logs_enabled: "true"
  dd_hostname: "{{ inventory_hostname }}"
  process_config:
    enabled: "true"
  apm_config:
    analyzed_spans:
      pdc-describe|rack.request: 1
    filter_tags:
      reject: ["http.useragent:nginx/1.23.4 (health check)", "http.url:/telemetry/proxy/api/v2/apmtelemetry","operation:heartbeat", "operation:job_fetch", "operation:scheduled_push", "operation:scheduled_poller_wait"]
datadog_typed_checks:
  - type: process
    configuration:
      init_config:
      instances:
        -   name: pdc-describe
            service: pdc-describe
            search_string:
              - nginx
  - type: nginx
    configuration:
      init_config:
      instances:
        - nginx_status_url: http://localhost:80/nginx_status/
      logs:
        - type: file
          path: /var/log/nginx/access.log
          source: nginx
        - type: file
          path: /var/log/nginx/error.log
          source: nginx
        - type: file
          path: /opt/pdc_describe/current/log/staging.log
          source: rails

# Note that this MUST stay in the environment-specific playbook.
# Moving any of these to common.yml will not work.
rails_app_vars:
  - name: SECRET_KEY_BASE
    value: '{{vault_pdc_describe_staging_secret_key}}'
  - name: APP_DB
    value: '{{pdc_describe_db_name}}'
  - name: APP_DB_USERNAME
    value: '{{pdc_describe_db_user}}'
  - name: APP_DB_PASSWORD
    value: '{{pdc_describe_db_password}}'
  - name: APP_DB_HOST
    value: '{{postgres_host}}'
  - name: APPLICATION_HOST
    value: '{{pdc_describe_host_name}}'
  - name: APPLICATION_HOST_PROTOCOL
    value: '{{application_host_protocol}}'
  - name: APPLICATION_PORT
    value: '{{application_port}}'
  - name: HONEYBADGER_API_KEY
    value: '{{vault_pdc_describe_honeybadger_key}}'
  - name: DATACITE_USER
    value: '{{vault_pdc_describe_staging_datacite_user}}'
  - name: DATACITE_PASSWORD
    value: '{{vault_pdc_describe_staging_datacite_password}}'
  - name: DATACITE_PREFIX
    value: '10.80021'
  - name: DATACITE_HOST
    value: 'api.test.datacite.org'
  - name: AWS_S3_KEY_ID
    value: '{{ vault_pdc_describe_aws_access_key_id }}'
  - name: AWS_S3_SECRET_KEY
    value: '{{ vault_pdc_describe_aws_secret_access_key }}'
  - name: AWS_S3_PRE_CURATE_BUCKET
    value: '{{ pdc_describe_staging_aws_pre_curate_bucket }}'
  - name: AWS_S3_PRE_CURATE_REGION
    value: 'us-east-1'
  - name: AWS_S3_POST_CURATE_BUCKET
    value: '{{ pdc_describe_staging_aws_post_curate_bucket }}'
  - name: AWS_S3_POST_CURATE_REGION
    value: 'us-east-1'
  - name: AWS_S3_DSPACE_BUCKET
    value: '{{ pdc_describe_production_aws_dspace_bucket }}'
  - name: AWS_S3_DSPACE_REGION
    value: 'us-east-1'
