---
postgres_host: "lib-postgres-staging1.princeton.edu"

passenger_server_name: "tigerdata-staging.princeton.edu"
passenger_app_env: "staging"
passenger_extra_config: "{{ lookup('template', 'roles/tigerdata/templates/nginx_extra_config.j2') }}"
desired_nodejs_version: "v22.9.0"

app_secret_key: '{{ vault_tigerdata_staging_secret_key }}'
app_db_name: '{{ vault_tigerdata_staging_db_name }}'
app_db_user: '{{ vault_tigerdata_staging_db_user }}'
app_db_password: '{{ vault_tigerdata_staging_db_password }}'
app_db_host: '{{ postgres_host }}'
rails_app_env: "staging"
app_host_name: 'tigerdata-staging.princeton.edu'

tigerdata_honeybadger_key: '{{ vault_honeybadger_api_key }}'

install_mailcatcher: true
mailcatcher_user: "pulsys"
mailcatcher_group: "pulsys"
mailcatcher_version: 0.9.0
mailcatcher_install_location: "/usr/local/lib/ruby/gems/3.3.0/gems/mailcatcher-{{ mailcatcher_version }}/bin/mailcatcher"

app_datacite_user: '{{ vault_staging_datacite_user }}'
app_datacite_password: '{{ vault_staging_datacite_password }}'
app_datacite_host: 'api.test.datacite.org'
app_datacite_prefix: '10.80021'

sidekiq_worker_name: tiger-data-workers
sidekiq_worker_threads: 4
redis_bind_interface: '0.0.0.0'
nfs_server: "128.112.203.82"
nfs_host_server: 'lib-fs-staging.princeton.edu'

app_mediaflux_port: "{{ vault_mediaflux_port }}"
app_mediaflux_host: "{{ vault_mediaflux_host }}"
app_mediaflux_alternate_port: "{{ vault_mediaflux_qa_port }}"
app_mediaflux_alternate_host: "{{ vault_mediaflux_qa_host }}"
app_mediaflux_domain: "{{ vault_mediaflux_domain }}"
app_mediaflux_user: "{{ vault_mediaflux_user }}"
app_mediaflux_password: "{{ vault_mediaflux_password }}"

# signoz
otel_default_resource_attributes:
  host.name: "{{ inventory_hostname }}"
  service.name: tigerdata
  service.version: staging
  environment: staging

otel_receivers:
  filelog/nginx-access:
    include: ["/var/log/nginx/access.log*"]
    start_at: end
    operators:
      - type: regex_parser
        regex: '^(?P<remote_addr>[^\s]+) \((?P<remote_user>[^)]*)\) - - \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
        parse_from: body
      - type: time_parser
        parse_from: attributes.time_local
        layout_type: strptime
        layout: '%d/%b/%Y:%H:%M:%S %z'
      - type: add
        field: attributes.log_type
        value: "tigerdata_access"
      - type: add
        field: attributes.service_name
        value: tigerdata
  filelog/nginx-error:
    include: ["/var/log/nginx/error.log*"]
    start_at: end
    operators:
      - type: add
        field: attributes.log_type
        value: "tigerdata_error"
      - type: add
        field: attributes.service_name
        value: "tigerdata"
  hostmetrics:
    collection_interval: 30s
    scrapers: { cpu: {}, disk: {}, filesystem: {}, load: {}, memory: {}, network: {} }

otel_processors:
  batch: { send_batch_max_size: 1024, send_batch_size: 512, timeout: 30s }

otel_exporters:
  otlp:
    endpoint: "http://sandbox-signoz1.lib.princeton.edu:4317"
    tls: { insecure: true }
  debug: { verbosity: basic }

otel_service_pipelines:
  logs:
    receivers: ["filelog/nginx-access", "filelog/nginx-error"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
  metrics:
    receivers: ["hostmetrics"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
