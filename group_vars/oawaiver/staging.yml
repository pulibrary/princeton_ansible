---
# Molecule
running_on_server: true

# mailcatcher
install_mailcatcher: true
mailcatcher_user: "pulsys"
mailcatcher_group: "pulsys"
mailcatcher_version: 0.10.0
mailcatcher_install_location: "/usr/local/lib/ruby/gems/3.1.0/gems/mailcatcher-{{ mailcatcher_version }}/bin/mailcatcher"

# Apache Solr
oawaiver_solr_core: "oawaiver-staging"
solr_cores:
  - "{{ oawaiver_solr_core }}"
solr_mirror: "https://pulmirror.princeton.edu/mirror/solr/dist"

# PostgreSQL
postgres_host: "lib-postgres-staging1.princeton.edu"
postgresql_is_local: false
postgres_admin_password: "{{ vault_postgres_admin_password }}"
postgres_port: "{{ app_db_port }}"
postgres_admin_user: "postgres"
postgres_version: 15
pg_hba_postgresql_user: "all"
pg_hba_postgresql_database: "all"
pg_hba_method: "md5"
pg_hba_source: "{{ ansible_host }}/32"
## These are used by the postgresql Role
application_db_name: "{{ vault_oawaiver_staging_db_name }}"
application_dbuser_name: "{{ vault_oawaiver_staging_db_user }}"
application_dbuser_password: "{{ vault_oawaiver_staging_db_password }}"
application_dbuser_role_attr_flags: 'CREATEDB'

# Use Ruby 3.0.3 and install from source
install_ruby_from_source: true
ruby_version_override: "ruby-3.1.3"

# System Node.js
desired_nodejs_version: "v22.13.1"

# NGINX
nginx_remove_default_vhost: true
application_host_protocol: "https"

# mod_passenger
passenger_ruby: "/usr/local/bin/ruby"
passenger_server_name: "oawaiver-staging1.princeton.edu"
passenger_app_env: "staging"

# Rails
rails_app_env: "staging"

## PostgreSQL
app_db_host: "{{ postgres_host }}"
app_db_port: 5432
app_db_name: "{{ vault_oawaiver_staging_db_name }}"
app_db_user: "{{ vault_oawaiver_staging_db_user }}"
app_db_password: "{{ vault_oawaiver_staging_db_password }}"

## Apache Solr
app_solr_host: 'lib-solr8d-staging.princeton.edu'
app_solr_port: 8983
app_solr_path: "/solr/{{ oawaiver_solr_core }}"

app_secret_key: "{{ vault_oawaiver_staging_secret_key }}"
app_host_name: "oawaiver-staging.princeton.edu"

app_smtp_host: "lib-ponyexpr-prod.princeton.edu"
app_smtp_port: 25

rails_app_vars:
  - name: APP_SECRET_KEY_BASE
    value: "{{ app_secret_key }}"
  - name: APP_DB
    value: "{{ app_db_name }}"
  - name: APP_DB_USERNAME
    value: "{{ app_db_user }}"
  - name: APP_DB_PASSWORD
    value: "{{ app_db_password }}"
  - name: APP_DB_HOST
    value: "{{ app_db_host }}"
  - name: APP_DB_PORT
    value: "{{ app_db_port }}"
  - name: APP_SOLR_HOST
    value: "{{ app_solr_host }}"
  - name: APP_SOLR_PORT
    value: "{{ app_solr_port }}"
  - name: APP_SOLR_PATH
    value: "{{ app_solr_path }}"
  - name: APPLICATION_HOST
    value: "{{ app_host_name }}"
  - name: APPLICATION_HOST_PROTOCOL
    value: "{{ application_host_protocol }}"
  - name: HONEYBADGER_API_KEY
    value: "{{ vault_oawaiver_honeybadger_key }}"
# signoz
otel_default_resource_attributes:
  host.name: "{{ inventory_hostname }}"
  service.name: oawaiver
  service.version: staging
  environment: staging

otel_receivers:
  filelog/nginx-access:
    include: ["/var/log/nginx/access.log*"]
    start_at: end
    operators:
      - type: regex_parser
        regex: '^(?P<remote_addr>[^\s]+) \((?P<remote_user>[^)]*)\) - - \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
        parse_from: body
      - type: time_parser
        parse_from: attributes.time_local
        layout_type: strptime
        layout: '%d/%b/%Y:%H:%M:%S %z'
      - type: add
        field: attributes.log_type
        value: "oawaiver_access"
      - type: add
        field: attributes.service_name
        value: oawaiver
  filelog/nginx-error:
    include: ["/var/log/nginx/error.log*"]
    start_at: end
    operators:
      - type: add
        field: attributes.log_type
        value: "oawaiver_error"
      - type: add
        field: attributes.service_name
        value: "oawaiver"
  hostmetrics:
    collection_interval: 30s
    scrapers: { cpu: {}, disk: {}, filesystem: {}, load: {}, memory: {}, network: {} }

otel_processors:
  batch: { send_batch_max_size: 1024, send_batch_size: 512, timeout: 30s }

otel_exporters:
  otlp:
    endpoint: "http://sandbox-signoz1.lib.princeton.edu:4317"
    tls: { insecure: true }
  debug: { verbosity: basic }

otel_service_pipelines:
  logs:
    receivers: ["filelog/nginx-access", "filelog/nginx-error"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
  metrics:
    receivers: ["hostmetrics"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
