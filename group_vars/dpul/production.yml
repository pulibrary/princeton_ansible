---
postgres_host: "lib-postgres-prod1.princeton.edu"
postgres_admin_user: "postgres"
rails_app_site_config_services:
  - nginx
  - "{{ sidekiq_worker_name }}"
  - "dpul-sneakers"
postgres_admin_password: '{{ vault_postgres_admin_password }}'
postgres_version: 15
postgres_port: "5432"
pg_hba_contype: "host"
pg_hba_postgresql_user: "all"
pg_hba_postgresql_database: "all"
pg_hba_method: "md5"
pg_hba_source: "{{ ansible_host }}/32"
passenger_server_name: "dpul.princeton.edu"
passenger_app_root: "/opt/dpul/current/public"
passenger_app_env: "production"
install_ruby_from_source: true
ruby_version_override: "ruby-3.1.3"
passenger_ruby: "/usr/local/bin/ruby"
nodejs_release_url: "https://github.com/pulibrary/nodejs-binaries/releases/download/"
desired_nodejs_version: "v18.18.0"
rails_app_name: "dpul"
rails_app_directory: "dpul"
rails_app_symlinks: []
rails_app_dependencies:
  - libpq-dev
  - libopenjp2-7-dev
  - libmagickwand-dev
  - pkg-config
  - memcached
sidekiq_worker_threads: 3
postgresql_is_local: false
dpul_db_name: 'dpul_production'
dpul_db_user: 'dpul'
dpul_db_password: '{{ vault_dpul_db_password }}'
dpul_rabbit_user: '{{vault_rabbit_production_user}}'
dpul_rabbit_password: '{{vault_rabbit_production_password}}'
dpul_rabbit_host: '{{ figgy_rabbit_host }}'
dpul_rabbit_server: 'amqp://{{ dpul_rabbit_user }}:{{ dpul_rabbit_password }}@{{ dpul_rabbit_host }}:5672'
rabbitmq_user: '{{ dpul_rabbit_user }}'
rabbitmq_password: '{{ dpul_rabbit_password }}'
rails_app_env: "production"
dpul_host_name: 'dpul.princeton.edu'
dpul_honeybadger_key: '{{ vault_dpul_honeybadger_key }}'
application_db_name: '{{ dpul_db_name }}'
application_dbuser_name: '{{ dpul_db_user }}'
application_dbuser_password: '{{ dpul_db_password }}'
application_dbuser_role_attr_flags: 'CREATEDB'
application_host: '{{ passenger_server_name }}'
application_host_protocol: 'https'
project_db_host: '{{ postgres_host }}'
dpul_solr: 'http://lib-solr8-prod.princeton.edu:8983/solr/dpul-production'
rails_app_vars:
  - name: POMEGRANATE_SECRET_KEY_BASE
    value: '{{ vault_dpul_secret_key }}'
  - name: POMEGRANATE_DB
    value: '{{ dpul_db_name }}'
  - name: POMEGRANATE_DB_USERNAME
    value: '{{ dpul_db_user }}'
  - name: POMEGRANATE_DB_PASSWORD
    value: '{{ dpul_db_password }}'
  - name: POMEGRANATE_DB_HOST
    value: '{{ postgres_host }}'
  - name: POMEGRANATE_RABBIT_SERVER
    value: '{{ dpul_rabbit_server }}'
  - name: POMEGRANATE_RABBITMQ_URL
    value: '{{ dpul_rabbit_server }}'
  - name: POMEGRANATE_RABBITMQ_EXCHANGE
    value: 'figgy_events'
  - name: APPLICATION_HOST
    value: '{{ dpul_host_name }}'
  - name: APPLICATION_HOST_PROTOCOL
    value: '{{ application_host_protocol }}'
  - name: POMEGRANATE_SOLR_URL
    value: '{{ dpul_solr }}'
  - name: HONEYBADGER_API_KEY
    value: '{{ dpul_honeybadger_key }}'
  - name: POMEGRANATE_COLLECTIONS_URL
    value: 'https://figgy.princeton.edu/iiif/collections'
  - name: POMEGRANATE_REDIS_URL
    value: 'dpul-prod1.princeton.edu'
  - name: POMEGRANATE_REDIS_DB
    value: '2'
  - name: POMEGRANATE_MANIFEST_AUTH_TOKEN
    value: '{{ vault_dpul_production_manifest_token }}'
  - name: BUNDLE_GEMS__CONTRIBSYS__COM
    value: "{{ vault_sidekiq_pro_key }}"
  - name: NODE_OPTIONS
    value: '--openssl-legacy-provider'
sneakers_workers: FiggyEventHandler
sneakers_worker_name: dpul-sneakers
datadog_api_key: "{{ vault_datadog_key }}"
datadog_config:
  tags: "application:dpul, environment:production, type:webserver"
  apm_enabled: "true"
  log_enabled: true
  process_config:
    enabled: "true"
  apm_config:
    analyzed_spans:
      dpul|rack.request: 1
    filter_tags:
      reject: ["http.useragent:nginx/1.23.4 (health check)", "operation:heartbeat", "operation:job_fetch", "operation:scheduled_push", "operation:scheduled_poller_wait"]
datadog_checks:
  ruby:
    init_config:
    logs:
      - type: file
        path: /opt/dpul/current/log/production.log
        service: dpul
        source: ruby
      - type: file
        path: /opt/dpul/current/log/sneakers.log
        service: dpul
        source: ruby
  redisdb:
    init_config:
    instances:
      - host: 127.0.0.1
        port: 6379
        keys:
          - 'pomegranate:queue:default'
          - 'pomegranate:retry'
          - 'pomegranate:dead'
  # Add certificate checks for all of our services.
  # We do this here because it was already here - these checks will eventually
  # be moved to Sensu.
  tls:
    init_config:
    instances:
      - server: dpul.princeton.edu
        port: 443
      - server: figgy.princeton.edu
        port: 443
      - server: maps.princeton.edu
        port: 443
      - server: libdeploy.princeton.edu
        port: 443
      - server: findingaids.princeton.edu
        port: 443
      - server: lae.princeton.edu
        port: 443
      - server: iiif.princeton.edu
        port: 443
      - server: libimages.princeton.edu
        port: 443
      - server: dpul-staging.princeton.edu
        port: 443
      - server: figgy-staging.princeton.edu
        port: 443
      - server: maps-staging.princeton.edu
        port: 443
      - server: findingaids-staging.princeton.edu
        port: 443
  nginx:
    init_config:
    logs:
      - type: file
        path: /var/log/nginx/access.log
        service: dpul
        source: nginx
        sourcecategory: http_web_access
      - type: file
        path: /var/log/nginx/error.log
        service: dpul
        source: nginx
        sourcecategory: http_web_access
  http_check:
    init_config:
    instances:
      - name: Solr Health
        url: 'http://localhost/health.json?providers[]=solrstatus'
        include_content: true
        tags:
          - 'http_service:dpul'
          - 'http_service_type:health'
          - 'http_service_check:solr'
      - name: Database Health
        url: 'http://localhost/health.json?providers[]=database'
        include_content: true
        tags:
          - 'http_service:dpul'
          - 'http_service_type:health'
          - 'http_service_check:postgres'
      - name: Redis Health
        url: 'http://localhost/health.json?providers[]=redis'
        include_content: true
        tags:
          - 'http_service:dpul'
          - 'http_service_type:health'
          - 'http_service_check:redis'
      - name: SMTP Health
        url: 'http://localhost/health.json?providers[]=smtpstatus'
        include_content: true
        tags:
          - 'http_service:dpul'
          - 'http_service_type:health'
          - 'http_service_check:smtp'
redis_bind_interface: '0.0.0.0'
redis__server_default_configuration:
  syslog-enabled: "{{ redis__server_syslog | bool }}"
  syslog-ident: "{{ redis__server_syslog_ident }}"
  syslog-facility: "{{ redis__server_syslog_facility }}"
  loglevel: "{{ redis__server_loglevel }}"
  bind: "{{ redis__server_bind }}"
  port: "{{ redis__server_port }}"
  save: "{{ redis__server_save }}"
  maxmemory: "{{ redis__server_maxmemory }}"
  maxmemory-policy: "{{ redis__server_maxmemory_policy }}"
  maxmemory-samples: "{{ redis__server_maxmemory_samples }}"
