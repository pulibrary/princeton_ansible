---
postgres_host: "lib-postgres-staging1.princeton.edu"
postgres_version: 15
postgres_admin_user: '{{ vault_postgres_staging_admin_user }}'
rails_app_site_config_services:
  - nginx
  - "{{ sneakers_worker_name }}"
pg_hba_contype: "host"
pg_hba_postgresql_user: "all"
pg_hba_postgresql_database: "all"
pg_hba_method: "md5"
pg_hba_source: "{{ ansible_host }}/32"
passenger_server_name: "lae-staging2.princeton.edu"
passenger_app_root: "/opt/lae-blacklight/current/public"
passenger_app_env: "staging"
passenger_ruby: "/usr/local/bin/ruby"
passenger_extra_http_config:
  - "passenger_preload_bundler on;"
desired_nodejs_version: "v22.10.0"
postgresql_is_local: false
rails_app_name: "lae-blacklight"
rails_app_directory: "lae-blacklight"
rails_app_symlinks: []
rails_app_dependencies:
  - libpq-dev
  - cifs-utils
  - nfs-common
  - libopenjp2-7-dev
  - libmagickwand-dev
  - pkg-config
  - libtool
  - autoconf
lae_db_name: 'lae_staging'
lae_db_user: 'lae_staging'
lae_db_password: '{{ vault_lae_staging_db_password }}'
lae_rabbit_user: '{{ vault_rabbit_production_user }}'
lae_rabbit_password: '{{ vault_rabbit_production_password }}'
lae_rabbit_host: '{{ figgy_rabbit_host }}'
lae_rabbit_server: 'amqp://{{ lae_rabbit_user }}:{{ lae_rabbit_password }}@{{ lae_rabbit_host }}:5672'
lae_solr_url: 'http://lib-solr8d-staging.princeton.edu:8983/solr/lae-staging'
rails_app_env: "staging"
lae_host_name: 'lae-staging1.princeton.edu'
lae_honeybadger_key: ''
application_db_name: '{{ lae_db_name }}'
application_dbuser_name: '{{ lae_db_user }}'
application_dbuser_password: '{{ lae_db_password }}'
application_dbuser_role_attr_flags: 'CREATEDB'
application_host: '{{ passenger_server_name }}'
application_host_protocol: 'https'
project_db_host: '{{ postgres_host }}'
rails_app_vars:
  - name: SECRET_KEY_BASE
    value: '{{ vault_lae_staging_secret_key }}'
  - name: LAE_DB
    value: '{{ lae_db_name }}'
  - name: LAE_DB_USERNAME
    value: '{{ lae_db_user }}'
  - name: LAE_DB_PASSWORD
    value: '{{ lae_db_password }}'
  - name: LAE_DB_HOST
    value: '{{ postgres_host }}'
  - name: LAE_RABBIT_SERVER
    value: '{{ lae_rabbit_server }}'
  - name: LAE_RABBITMQ_URL
    value: '{{ lae_rabbit_server }}'
  - name: LAE_RABBITMQ_EXCHANGE
    value: 'figgy_events'
  - name: APPLICATION_HOST
    value: '{{ lae_host_name }}'
  - name: APPLICATION_HOST_PROTOCOL
    value: '{{ application_host_protocol }}'
  - name: SOLR_URL
    value: '{{ lae_solr_url }}'
  - name: HONEYBADGER_API_KEY
    value: '{{ lae_honeybadger_key }}'
  - name: NODE_OPTIONS
    value: '--openssl-legacy-provider'
sneakers_workers: PlumEventHandler
sneakers_worker_name: lae-sneakers
# signoz
otel_default_resource_attributes:
  host.name: "{{ inventory_hostname }}"
  service.name: lae
  service.version: staging
  environment: staging

otel_receivers:
  filelog/nginx-access:
    include: ["/var/log/nginx/access.log*"]
    start_at: end
    operators:
      - type: regex_parser
        regex: '^(?P<remote_addr>[^\s]+) \((?P<remote_user>[^)]*)\) - - \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
        parse_from: body
      - type: time_parser
        parse_from: attributes.time_local
        layout_type: strptime
        layout: '%d/%b/%Y:%H:%M:%S %z'
      - type: add
        field: attributes.log_type
        value: "lae_access"
      - type: add
        field: attributes.service_name
        value: lae
  filelog/nginx-error:
    include: ["/var/log/nginx/error.log*"]
    start_at: end
    operators:
      - type: add
        field: attributes.log_type
        value: "lae_error"
      - type: add
        field: attributes.service_name
        value: "lae"
  hostmetrics:
    collection_interval: 30s
    scrapers: { cpu: {}, disk: {}, filesystem: {}, load: {}, memory: {}, network: {} }

otel_processors:
  batch: { send_batch_max_size: 1024, send_batch_size: 512, timeout: 30s }

otel_exporters:
  otlp:
    endpoint: "http://sandbox-signoz1.lib.princeton.edu:4317"
    tls: { insecure: true }
  debug: { verbosity: basic }

otel_service_pipelines:
  logs:
    receivers: ["filelog/nginx-access", "filelog/nginx-error"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
  metrics:
    receivers: ["hostmetrics"]
    processors: ["resource", "batch"]
    exporters: ["otlp", "debug"]
