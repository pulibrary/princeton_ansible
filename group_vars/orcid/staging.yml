---
postgres_host: 'lib-postgres-staging1.princeton.edu'

postgres_version: 15
passenger_server_name: "{{ inventory_hostname }}"
passenger_app_env: "staging"
passenger_extra_config: "client_max_body_size 0;"

orcid_db_name: 'orcid_staging'

orcid_db_user: '{{ vault_orcid_staging_db_user }}'
orcid_db_password: '{{ vault_orcid_staging_db_password }}'

ruby_app_env: "staging"

orcid_host_name: 'orcid-staging.princeton.edu'
orcid_honeybadger_key: '{{ vault_orcid_honeybadger_key }}'

orcid_secret_key: '{{ vault_orcid_staging_secret_key }}'
orcid_rails_main_key: '{{ vault_orcid_staging_rails_main_key }}'
orcid_client_id: '{{ vault_orcid_staging_client_id }}'
orcid_client_secret: '{{ vault_orcid_staging_client_secret }}'
orcid_sandbox: true
orcid_token_secret: '{{ vault_orcid_staging_token_secret }}'
app_banner_title: "Welcome to ORCID@Princeton (Staging)!"
app_banner_body: 'This system is connected to the <a href="https://sandbox.orcid.org/">ORCID Sandbox</a>, NOT the real ORCID API.'
app_orcid_sandbox: true
app_orcid_url: 'https://api.sandbox.orcid.org/v3.0'
peoplesoft_output_location: '/mnt/peoplesoft/sr_orcid/test/ORCID_portal_report.csv'

# Orcid Collector Configuration
signoz_is_server: false
signoz_otel_receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
      http:
        endpoint: "0.0.0.0:4318"
  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu: {}
      load: {}
      memory: {}
      disk: {}
      network: {}
      process: {}
      filesystem: {}
  filelog/nginx-access:
    include:
      - "/var/log/nginx/access.log*"
    exclude:
      - "/var/log/nginx/access.log.*.gz"
    start_at: end
    operators:
      - type: regex_parser
        regex: '^(?P<remote_addr>[^\s]+) \((?P<remote_user>[^)]*)\) - - \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
        parse_from: body
      - type: time_parser
        parse_from: attributes.time_local
        layout_type: strptime
        layout: '%d/%b/%Y:%H:%M:%S %z'
      - type: add
        field: attributes.log_type
        value: "nginx_access"
      - type: add
        field: attributes.service_name
        value: "nginx"
  filelog/nginx-error:
    include:
      - "/var/log/nginx/error.log*"
    exclude:
      - "/var/log/nginx/error.log.*.gz"
    start_at: end
    operators:
      - type: add
        field: attributes.log_type
        value: "nginx_error"
      - type: add
        field: attributes.service_name
        value: "nginx"

signoz_otel_processors:
  resource:
    attributes:
      - key: host.name
        value: "{{ ansible_fqdn }}"
        action: upsert
      - key: service.name
        value: "orcid"
        action: upsert
      - key: service.version
        value: "staging"
        action: upsert
      - key: environment
        value: "staging"
        action: upsert
      - key: application
        value: "orcid"
        action: upsert
      - key: type
        value: "webserver"
        action: upsert
      - key: deployment.environment
        value: "staging"
        action: upsert
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048
  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: "1s"

signoz_otel_exporters:
  otlp:
    endpoint: "http://sandbox-signoz1.lib.princeton.edu:4317"
    tls:
      insecure: true
    sending_queue:
      num_consumers: 10
      queue_size: 5000
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

signoz_otel_service_pipelines:
  traces:
    receivers: [otlp]
    processors: [memory_limiter, resource, batch]
    exporters: [debug, otlp]
  metrics:
    receivers: [hostmetrics, otlp]
    processors: [memory_limiter, resource, batch]
    exporters: [otlp, debug]
  logs:
    receivers: [filelog/nginx-access, filelog/nginx-error, otlp]
    processors: [memory_limiter, resource, batch]
    exporters: [otlp, debug]

signoz_otel_service_extensions: []

# Additional service configuration
signoz_otel_service_telemetry:
  logs:
    level: "error"
  metrics:
    level: "detailed"
