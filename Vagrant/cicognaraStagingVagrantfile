# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  # Vagrant configuration options are fully documented at
  # https://docs.vagrantup.com.

  config.vm.box = "princeton_box"
  config.vm.network "private_network", type: "dhcp"
  config.vm.network "forwarded_port", guest: 80, host: 8484 # nginx web server in production mode
  config.vm.network "forwarded_port", guest: 8983, host: 9893  # solr

  # By default, the directory from which you launch vagrant will be shared inside your VM as /vagrant
  # To share an additional folder to the guest VM, state the path on the host
  # to the actual folder, then the path on the guest to mount the folder.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration for VirtualBox:
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    # vb.gui = true
    # Customize the amount of memory on the VM:
    vb.memory = 2048 # if your system can afford it, definitely increase the memory allocation here
    vb.cpus = 2
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # Name your VM (if you don't like the autogenerated name)
    # vb.name = "cicognara-staging1"
  end

  # Enable provisioning ansible project
  config.vm.provision "ansible" do |ansible|
    ansible.groups = {
      "cicognara" => ["default"]
    }

    ansible.extra_vars = {
      server_name: "localhost",
      rails_env: "staging",
      application_host: 'localhost:8484',
      passenger_server_name: 'localhost',
      figgy_host_name: 'localhost',
      application_host_protocol: 'http',
      postgres_host: '/var/run/postgresql',
      project_db_host: 'http://127.0.0.1',
      postgres_admin_user: 'postgres',
      postgres_admin_password: nil,
      postgresql_is_local: true
    }

    ansible.playbook = "playbooks/cicognara.yml"
    ansible.ask_vault_pass = true

    # update start_at_task and re-run `vagrant provison` if your configuration scripts fail on a particular task
    # and you want to restart the provisioning at the step where the failure occurred
    # ansible.start_at_task = "packages | update apt cache"
    config.ssh.private_key_path = "pulsys_rsa_key"
    config.ssh.username = "pulsys"

    # for further details on using ansible with vagrant, see
    # Ansible documentation: http://docs.ansible.com/ansible/guide_vagrant.html
    # Vagrant documentation: https://docs.vagrantup.com/v2/provisioning/ansible.html
    # - note the provisioning directory in the examples will be replced by ansible-hydra when using this repo
  end
end
