---
- name: rebuild nginx server
  hosts: nginxplus_{{ runtime_env | default('staging') }}
  remote_user: pulsys
  strategy: free
  become: true
  vars_files:
    - ../group_vars/nginxplus/main.yml
    - ../group_vars/nginxplus/{{ runtime_env | default('staging') }}.yml
  vars:
    - post_install: |
        Possible Things left to do:
        - follow the nginxplus [HA instructions](https://github.com/pulibrary/pul-it-handbook/blob/main/services/nginxplus.md)
  pre_tasks:
  - name: stop playbook if you didn't use --limit
    fail:
      msg: "you must use -l or --limit"
    when: ansible_limit is not defined
    run_once: true

  - name: tell infrastructure and ansible-alerts the playbook is starting
    community.general.slack:
      token: "{{ vault_tower_slack_token }}"
      msg: "Ansible is now running `{{ ansible_play_name }}` with the `{{ ansible_run_tags }}` tag on {{ inventory_hostname }}"
      channel: "{{ item }}"
    loop: "{{ slack_alerts_channel }}"
    tags: always

# rebuilds the load balancer from scratch
  roles:
    - role: ../roles/datadog
      when: runtime_env | default('staging') == "production"
    - role: ../roles/deploy_user
    - role: ../roles/nginxplus

- name: restart rebuilt nginx and announce success
  hosts: nginxplus_{{ runtime_env | default('staging') }}
  remote_user: pulsys
  strategy: linear
  become: true

  tasks:
    - name: nginxplus | restart nginx for realsies
      ansible.builtin.service: 
        name: nginx
        state: restarted
      tags: always

  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: "{{ item }}"
      loop: "{{ slack_alerts_channel }}"
      tags: always
