---
# best practice is to run on a single host with '--limit' for example `ansible-playbook -v --limit lib-adc2.princeton.edu playbooks/nginxplus_production.yml`
# to update configuration for existing sites, run with '-t update_conf' for example `ansible-playbook -v --limit lib-adc2.princeton.edu playbooks/nginxplus_production.yml -t update_conf`
# to replace SSL certificates and keys, run with `-t SSL`

- name: update loadbalancer configuration
  hosts: nginxplus_production # default to staging when we get a staging environment going
  remote_user: pulsys
  strategy: linear
  become: true
  vars_files:
    - ../group_vars/nginxplus/main.yml

  # updates existing load balancer
  roles:
    - role: ../roles/nginxplus

- name: restart nginx with updated loadbalancer configuration
  hosts: nginxplus_production
  remote_user: pulsys
  strategy: linear
  become: true

  tasks:
    - name: nginxplus | restart nginx for realsies
      service:
        name: nginx
        state: restarted
      tags: always

  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook
      slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: #server-alerts
      tags: always
