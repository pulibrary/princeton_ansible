---
# by default this playbook runs in the staging environment
# to run in qa, pass '-e runtime_env=qa'
# to run in production, pass '-e runtime_env=production'
# remember that the loadbalancing machines are not included
# and will need to be manually updated
- name: update the Operating System packages
  hosts: "{{ runtime_env | default('staging') }}"
  remote_user: pulsys
  serial: "{{ concurrent_vms | default('5') }}"
  become: true

  tasks:
    - name: Ubuntu | refresh keys
      ansible.builtin.command: /usr/bin/apt-key adv --refresh-keys --keyserver keyserver.ubuntu.com
      become: true
      when: ansible_os_family == "Debian"

    - name: Ubuntu | Upgrade all packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        force_apt_get: true
      when: ansible_os_family == "Debian"

    - name: RedHat | Upgrade all packages
      ansible.builtin.yum:
        name: "*" 
        state: latest
        update_cache: true
        update_only: true
      register: yum_update_status
      when: ansible_os_family == "RedHat"

    - name: RedHat | clear local repository
      ansible.builtin.yum:
        clean: true
      when: ansible_os_family == "RedHat"

    - name: Ubuntu | remove dependencies that are no longer required
      ansible.builtin.apt:
        autoremove: true
      when: ansible_os_family == "Debian"

    - name: Ubuntu | remove local dependencies that are no longer required
      ansible.builtin.apt:
        autoclean: true
      when: ansible_os_family == "Debian"

    - name: Ubuntu | clear out the local repository of retrieved package files 
      ansible.builtin.apt:
        clean: true
      when: ansible_os_family == "Debian"

    - name: Ubuntu | Check if reboot required
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required_file
      when: ansible_os_family == "Debian"

    - name: RedHat | Reboot if required
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible because of yum updates."
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 15
        test_command: whoami
      when: 
        - ansible_os_family == "RedHat"
        - yum_update_status.changed

    - name: Ubuntu | Reboot if required
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible because of apt-get updates."
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 15
        test_command: whoami
      when: 
        - ansible_os_family == "Debian"
        - reboot_required_file.stat.exists == true

    - name: tell everyone on slack you ran an ansible playbook
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: "{{ slack_alerts_channel }}"
