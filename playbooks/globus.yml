---
# Ansible expects you to have `~/.aws/credentials` configured.
# The contents of the file will have `aws_access_key_id` and
# `aws_secret_access_key`
# by default this playbook runs in the staging environment
# to run in production, pass '-e runtime_env=production'
- name: build the Globus site
  hosts: localhost
  gather_facts: false
  vars:
    instance_type: "{{ aws_instance_size | default('t2.micro') }}"
    image_id: "ami-0583c2ac0b1a3671b"
    region: "us-east-1"
  vars_files:
    - ../group_vars/globus/{{ runtime_env | default('staging') }}.yml
  tasks:
    - name: start an instance with a public IP address
      amazon.aws.ec2_instance:
        name: "pdc-globus-{{ runtime_env | default('staging') }}"
        vpc_subnet_id: "subnet-053f6de62a939098a"
        security_groups:
          - "sg-0f9328c6f066ab558"
          - "sg-0015266bf123c24cf"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        wait: true
        region: "{{ region }}"
        cpu_options:
          core_count: "{{ aws_core_count | default('1') }}"
          threads_per_core: "{{ aws_threads_count | default('1') }}"
        network:
          assign_public_ip: true
      register: ec2

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 320
      loop: "{{ ec2.instances }}"

  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: #server-alerts
