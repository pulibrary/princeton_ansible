---
# by default this playbook runs in the staging environment
# to run in production, pass '-e runtime_env=production'
# to run in qa, pass '-e runtime_env=qa'
- name: build the pulfalight web application
  hosts: pulfalight_{{ runtime_env | default('staging') }}
  remote_user: pulsys
  become: true
  vars_files:
    - ../group_vars/all/vars.yml
    - ../group_vars/pulfalight/{{ runtime_env | default('staging') }}.yml
    - ../group_vars/pulfalight/{{ runtime_env | default('staging') }}_solr.yml
    - ../group_vars/pulfalight/vault.yml
  roles:
    - { role: 'roles/postgresql', tags: 'postgresql' }
    - role: roles/openjdk
    - role: roles/sidekiq_worker  # the staging box is both web and worker
      when: runtime_env | default('staging') == "staging"
    - role: roles/pulfalight
    - role: roles/datadog
      when: runtime_env | default('staging') == "production"

  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: "{{ slack_alerts_channel }}"
    - ansible.builtin.debug:
        msg:
          - "****************************************************************"
          - "******************* PULFALIGHT WEBSERVER SETUP **********************"
          - "To finalize provisioning on a new pulfalight server, its IPs"
          - "need to be added to the allow lists for Lyrasis and Pony Express"
          - "see also:"
          - "https://github.com/pulibrary/pulfalight?tab=readme-ov-file#troubleshooting-aspace-api-connections"
          - "****************************************************************"

- name: build the pulfalight workers
  hosts: pulfalight_{{ runtime_env | default('staging') }}_workers
  remote_user: pulsys
  become: true
  vars_files:
    - ../group_vars/pulfalight/{{ runtime_env | default('staging') }}.yml
    - ../group_vars/pulfalight/{{ runtime_env | default('staging') }}_workers.yml
    - ../group_vars/pulfalight/vault.yml
  roles:
    - { role: 'roles/postgresql', tags: 'postgresql' }
    - role: roles/openjdk
    - role: roles/sidekiq_worker
    - role: roles/pulfalight
    - role: roles/datadog
      when: runtime_env | default('staging') == "production"
  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: "{{ slack_alerts_channel }}"
