---
# Automates management of the library's Palo Alto firewall
# This playbook can only be run on Ansible Tower
#
- name: View records on the Palo Alto firewall
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/libexec/platform-python
    panos_provider:
      # ip_address: "{{ secret_ip_address }}"
      ip_address: "{{ provider_IP }}"
      # api_key: "{{ palo_alto_api_key }}"
      api_key: "{{ provider_API_key }}"
  tasks:
    - name: Install required library for pan-os API call
      ansible.builtin.pip:
        name:
          - pan-python
          - pan-os-python

    - name: show interpreter
      ansible.builtin.debug:
        var: ansible_python_interpreter

    - name: install python3 dnf
      ansible.builtin.dnf:
        name: python3-dnf
        state: present
      become: true

    - name: install bind-utils
      ansible.builtin.dnf:
        name: bind-utils
        state: present
      become: true

    - name: Get IP from 'host' command
      ansible.builtin.shell:
        cmd: host {{ VM_host_name }}
        # target_ip: "{{ lookup('dig', 'fs-d12345.efs.ap-southeast-2.amazonaws.com', '@10.75.0.2') }}"
      register: ip_in_question

    - name: show just IP from 'host' command
      ansible.builtin.debug:
        msg: >-
          {{ ip_in_question.stdout | regex_findall("[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+") }}

# for testing purposes, we are using a known object
# in the test firewall; eventually use the ip_in_question
# here with the regex above
# change the task and var names when we do that

    - name: find object with known IP
      paloaltonetworks.panos.panos_address_object:
        provider: "{{ panos_provider }}"
        state: gathered
        # gathered_filter: "value contains 192.168.1.100"
        gathered_filter: "value contains {{ ip_in_question.stdout | regex_findall("[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+") }}"
      register: test_object

    - name: Display the object address
      ansible.builtin.debug:
        var: test_object

    - name: Get all rules for the address
      paloaltonetworks.panos.panos_security_rule:
      # we want all rules where the rule's 'destination_ip' matches
      # the 'name' field from the test_object . . . 
      # something like test_object.gathered.name?
        provider: "{{ panos_provider }}"
        state: "gathered"
        gathered_filter: "destination_ip contains {{ test_object.gathered[0].name }}"
        # "destination_ip": [ "Lib-LabWin2019" ]
      register: sec_rules

    - name: Display all rules
      ansible.builtin.debug:
        var: sec_rules

# Future work - create tasks to make changes:
# - name: Generate a new Palo Alto rule set
#   paloaltonetworks.panos.panos_security_rule:
# - name: Commit new firewall rules
#   paloaltonetworks.panos.panos_commit_firewall:

# other relevant docs:
# main collection page: https://paloaltonetworks.github.io/pan-os-ansible/
# module pages we might need:
# https://paloaltonetworks.github.io/pan-os-ansible/modules/panos_loadcfg.html
# https://paloaltonetworks.github.io/pan-os-ansible/modules/panos_nat_rule.html
# https://paloaltonetworks.github.io/pan-os-ansible/modules/panos_security_rule.html
# If we need to create objects, see deprecated module for ref:
# https://paloaltonetworks.github.io/pan-os-ansible/modules/panos_object.html
