---
# Extensive documentation our Nomad infrastructure found in
# roles/pul_nomad/README.md
#
# Examples:
#   Only app config:                       ansible-playbook playbooks/nomad.yml --tags dpulc
#   Provision prod but skip app config:    ansible-playbook playbooks/nomad.yml -e runtime_env=production --skip-tags app_config
#   Target sandbox:                        ansible-playbook playbooks/nomad.yml -e runtime_env=sandbox

- name: build the nomad cluster
  hosts: "nomad_{{ runtime_env | default('cluster') }}"
  remote_user: pulsys
  become: true

  vars:
    # Which env are we effectively targeting?
    nomad_effective_env: "{{ runtime_env | default('cluster') }}"
    app_folders:
      - dpulc
      - imagecat
      - abid
      - logging
      - traefik_wall
      - circleci_deployer
      - cdh_baserow
      - nodemation

  # Vault files (env-agnostic secrets or per-env keys within)
  vars_files:
    - ../group_vars/nomad/vault.yml
    - ../group_vars/nomad/dpulc/vault.yml
    - ../group_vars/nomad/imagecat/vault.yml
    - ../group_vars/nomad/abid/vault.yml
    - ../group_vars/nomad/logging/vault.yml
    - ../group_vars/nomad/traefik_wall/vault.yml
    - ../group_vars/nomad/circleci_deployer/vault.yml
    - ../group_vars/nomad/analytics/vault.yml
    - ../group_vars/nomad/cdh_baserow/sandbox.yml
    - ../group_vars/nomad/cdh_baserow/vault.yml
    - ../group_vars/nomad/nodemation/vault.yml

  pre_tasks:
    # Default (cluster): load BOTH staging and production app var files,
    # preserving current mixed behavior (prod servers + staging clients).
    - name: "Load app vars (cluster default): staging then production"
      when: nomad_effective_env == 'cluster'
      block:
        - ansible.builtin.include_vars:
            file: "../group_vars/nomad/{{ item }}/staging.yml"
          loop: "{{ app_folders }}"
          ignore_errors: true
        - ansible.builtin.include_vars:
            file: "../group_vars/nomad/{{ item }}/production.yml"
          loop: "{{ app_folders }}"
          ignore_errors: true

    # Explicit env: try exact env, then fallback to staging, then production
    - name: "Load app vars for {{ nomad_effective_env }} with fallback"
      when: nomad_effective_env != 'cluster'
      vars:
        candidates:
          - "../group_vars/nomad/{{ item }}/{{ nomad_effective_env }}.yml"
          - "../group_vars/nomad/{{ item }}/staging.yml"
          - "../group_vars/nomad/{{ item }}/production.yml"
      ansible.builtin.include_vars:
        file: "{{ lookup('ansible.builtin.first_found', {'files': candidates}) }}"
      loop: "{{ app_folders }}"
      ignore_errors: true

  roles:
    - role: pul_nomad

  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook (controller-only)
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` for {{ nomad_effective_env }} on {{ groups['nomad_' ~ nomad_effective_env] | length }} hosts"
        channel: "{{ slack_alerts_channel }}"
      delegate_to: localhost
      run_once: true
      when:
        - (notify_slack | default(true))            # allow per-env override
        - nomad_effective_env != 'sandbox'          # default: skip sandbox
      tags: [notify]
