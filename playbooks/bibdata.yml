---
# by default this playbook runs in the staging environment
# to run in qa, pass '-e runtime_env=qa'
# to run in production, pass '-e runtime_env=production'
- name: Build bibdata infrastructure
  hosts: bibdata_{{ runtime_env | default('staging') }}
  remote_user: pulsys
  become: true
  vars_files:
    - ../site_vars.yml
    - ../group_vars/bibdata/common.yml
    - ../group_vars/bibdata/vault.yml
    - ../group_vars/bibdata/{{ runtime_env | default('staging') }}.yml
  roles:
    # re-add common when removed from: ruby_s, deploy_user, rails_app, and samba
    # - role: common
    - role: deploy_user
    # re-add ruby_s when removed from passenger
    # - role: ruby_s
    # re-add bind9 when removed from rails_app
    # - role: bind9
    # re-add passenger when removed from rails_app
    # can be run on only web machines
    # - role: passenger
    # re-add postgresql when removed from rails_app
    # - role: postgresql
    # re-add nodejs when removed from rails_app
    # can be run on only web machines
    # - role: nodejs
    # sidekiq_worker role must be before the rails_app & passenger roles so that nginx restarts on all boxes
    - role: sidekiq_worker
      when: "'worker' in inventory_hostname"
    - role: bibdata_sqs_poller
      when: 
        - "'worker' in inventory_hostname"
        - "'1' in inventory_hostname"
    - role: rails_app
    - role: timezone
    - role: bibdata
    # samba must be before hr_share
    - role: samba
    - role: hr_share
    - role: datadog
      when: runtime_env | default('staging') == "production"
  post_tasks:
    - name: tell everyone on slack you ran an ansible playbook
      community.general.slack:
        token: "{{ vault_pul_slack_token }}"
        msg: "Ansible ran `{{ ansible_play_name }}` on {{ inventory_hostname }}"
        channel: "{{ slack_alerts_channel }}"
