---
# To run the playbook:
# confirm that the agent is installed already on your machine(s)
# if it is not, run playbooks/utils/checkmk_agent.yml to install the CheckMK agent
# rule_group environment variable specifies which rule group to apply to the hosts
# by default the rails rule group will be applied
# to run in with the another group, pass '-e rule_group=group_name'
# by default this playbook runs in the staging environment
# to run in production, pass '-e runtime_env=production'
# For example `ansible-playbook playbooks/utils/checkmk_add_local_checks.yml --ask-vault-pass --limit=pdc-describe-staging2.princeton.edu`
#  will run with the staging runtime environment and the rails rule group on pdc-describe-staging2

- name: Install CheckMk local check scripts on host
  hosts: "{{ runtime_env | default ('staging') }}"
  remote_user: pulsys
  become: true

  vars_files:
    - ../../group_vars/all/vault.yml
    - ../../group_vars/checkmk/{{ runtime_env | default('staging') }}.yml
    - ../../group_vars/checkmk/rule_{{ rule_group | default('rails') }}.yml
    - ../../group_vars/checkmk/agent_common.yml
    - ../../group_vars/checkmk/vault.yml


  pre_tasks:
      - name: stop playbook if you didn't use --limit
        fail:
          msg: "you must use -l or --limit"
        when: ansible_limit is not defined
        run_once: true
      - name: set stripped agent hostname (only content before the first .) as fact
        ansible.builtin.set_fact:
          checkmk_agent_host_name: "{{ inventory_hostname | regex_search('^[^.]*') }}"

  tasks:
    # 1) write all local checks except the nginxplus syntax test
    - name: write Check_MK local check scripts (all except nginxplus)
      ansible.builtin.template:
        src: "../../group_vars/checkmk/local_check_templates/{{ item.template }}"
        dest: "/usr/lib/check_mk_agent/local/{{ item.dest }}"
        mode: "+x"
      loop: "{{ checkmk_local_scripts }}"
      when: item.template != 'nginxplus_config_syntax.j2'

    # 2) write the nginxplus syntax test _only_ on adc-* hosts
    - name: write nginxplus config-syntax check
      ansible.builtin.template:
        src: "../../group_vars/checkmk/local_check_templates/nginxplus_config_syntax.j2"
        dest: "/usr/lib/check_mk_agent/local/nginxplus_config_syntax.sh"
        mode: "+x"
      when: inventory_hostname is match('^adc-')

    - name: "Add new local services on hosts."
      checkmk.general.discovery:
        server_url: "{{checkmk_agent_server_protocol}}://{{ checkmk_agent_server }}"
        site: "{{ checkmk_agent_site }}"
        automation_user: "{{ checkmk_agent_user }}"
        automation_secret: "{{ vault_automation_secret }}"
        hosts: "{{ checkmk_agent_host_name }}"
        state: "new"

    - name: "Start activation including foreign changes."
      checkmk.general.activation:
        server_url: "{{checkmk_agent_server_protocol}}://{{ checkmk_agent_server }}"
        site: "{{ checkmk_agent_site }}"
        automation_user: "{{ checkmk_agent_user }}"
        automation_secret: "{{ vault_automation_secret }}"
        force_foreign_changes: 'true'
