---
- name: get issues from GitLab
  hosts: localhost
  tasks:
<<<<<<< HEAD
      - name: call issue API
        ansible.builtin.uri:
          url: "https://gitlab.lib.princeton.edu/api/v4/issues?scope=all&project_id=5&access_token={{ vault_gitlab_issue_access_token }}"
          method: GET
          # 'scope=all' pulls issues created by all users
        register: api_output
=======
    - name: call issue API
      ansible.builtin.uri:
        url: "https://gitlab.lib.princeton.edu/api/v4/issues?scope=all&project_id=5&access_token={{ vault_gitlab_issue_access_token }}"
        method: GET
        # 'scope=all' pulls issues created by all users
      register: api_output

    - name: view results
      ansible.builtin.debug:
        var: api_output

<<<<<<< HEAD
#    - name: select our data
 #     ansible.what???:
        #what we want is:
          # api_output.json.[#]. and then title, iid (that's not a typo), state, assignee.name, created_at, labels, and web_url
>>>>>>> e99e4e29b (first draft of playbook to pull issues from GitLab for our Airtable board)
=======
    - name: write CSV headers
      ansible.builtin.lineinfile:
        create: true
        dest: /Users/alicia/gitlabissues.csv
        line: Title,Issue ID,State,Assignee,Created At (UTC),Labels,URL
        insertbefore: BOF
        state: present

    - name: write selected output to CSV
      ansible.builtin.lineinfile:
        dest: /Users/alicia/gitlabissues.csv
        line: "{{ item.title }},{{ item.iid }},{{ item.state }},{{ item.assignee.name | default(omit) }},{{ item.created_at }},{{ item.labels | default(omit) }},{{ item.web_url }}"
        insertafter: EOF
        state: present
      loop: "{{ api_output | community.general.json_query('json[*]') }}"
      # we assume every issue will have a title, an issue ID, a state, a created_at timestamp, and a URL
      # we allow null values for assignee and labels
>>>>>>> 19a5db503 (pulls protected content, writes to CSV)
