---
# you MUST run this playbook on a host or group with '--limit' for example `ansible-playbook -v ---limit pdc_describe_staging playbooks/utils/uninstall_package.yml -e package_to_remove=vector`
#
- name: Uninstall a package/service previously installed with yum/apt
  hosts: all
  # hosts: staging:qa:production
  remote_user: pulsys
  become: true

  pre_tasks:
    - name: stop playbook if you didn't pass --limit
      fail:
        msg: "you must use -l or --limit"
      when: ansible_limit is not defined
      run_once: true

  tasks:
    # - name: uninstall a package
    #   ansible.builtin.package:
    #    name: "{{ package_to_remove }}"
    #    state: absent

    - name: Remove package on Debian/Ubuntu systems
      ansible.builtin.apt:
        name: "{{ package_to_remove }}"
        state: absent
        purge: true
        autoremove: true
      when: ansible_os_family == "Debian"

    - name: Remove package on RHEL/CentOS/Fedora systems (using dnf)
      ansible.builtin.dnf:
        name: "{{ package_to_remove }}"
        state: absent
        autoremove: true
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int >= 8

    - name: Remove package on older RHEL/CentOS systems (using yum)
      ansible.builtin.yum:
        name: "{{ package_to_remove }}"
        state: absent
        autoremove: yes
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version | int < 8
