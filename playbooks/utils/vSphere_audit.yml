---
- name: View information about templates, VMs, memory, and storage from vSphere
  hosts: localhost

  vars_files:
    - ../../group_vars/vsphere/vault.yml
    - ../../group_vars/vsphere/{{ runtime_env | default('staging') }}.yml

  tasks:
    - name: Gather info on all templates
      community.vmware.vmware_vm_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        show_datacenter: true
        show_cluster: true
        show_esxi_hostname: true
        vm_type: template
      register: template_info

    - name: Generate a list of templates
      ansible.builtin.set_fact:
        template_names: "{{ template_info.virtual_machines | map(attribute='guest_name') | sort }}"

    - name: Gather info on all vms
      community.vmware.vmware_vm_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        show_allocated: true
        # per the docs, this gathers memory usage in MB
        show_cluster: true
        show_datacenter: true
        show_esxi_hostname: true
        vm_type: vm
      register: vm_info

    - name: Generate a list of ESXi hosts
      ansible.builtin.set_fact:
        esxi_hostnames: "{{ vm_info.virtual_machines | map(attribute='esxi_hostname') | unique | sort }}"

    - name: Gather memory stats on ESXi hosts
      community.vmware.vmware_host_facts:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        esxi_hostname: "{{ item }}"
        schema: vsphere
        properties:
          - summary.config.name
          - hardware.memorySize
          - summary.quickStats.overallMemoryUsage
      loop: "{{ esxi_hostnames }}"
      register: esxi_host_memory

    - name: Get array of ESXi memory stats
      ansible.builtin.set_fact:
        slim_esxi_host_memory: "{{ esxi_host_memory | community.general.json_query('results[*].ansible_facts.{Name: summary.config.name, Usedmemory: summary.quickStats.overallMemoryUsage, Totalmemory: hardware.memorySize}') }}"

    - name: Gather info on storage
      community.vmware.vmware_datastore_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        schema: vsphere
        properties:
          - info.name
          - info.freeSpace
      register: storage_info

    - name: Generate a list of storage nodes
      ansible.builtin.set_fact:
        storage_nodes: "{{ storage_info.datastores | map(attribute='info.name') | unique | sort }}"

    - name: View list of available templates
      ansible.builtin.debug:
        var: template_names

    - name: View list of ESXi hosts
      ansible.builtin.debug:
        var: esxi_hostnames

    - name: View memory usage per ESXi host
      ansible.builtin.debug:
        msg: The {{ item.0 }} host is using {{ ( item.1 | int * 1048576 ) | human_readable }} out of {{ item.2 | human_readable }} available memory.
      with_together:
        - "{{ slim_esxi_host_memory | map(attribute='Name') | list }}"
        - "{{ slim_esxi_host_memory | map(attribute='Usedmemory') | list }}"
        - "{{ slim_esxi_host_memory | map(attribute='Totalmemory') | list }}"

    - name: View number of VMs per ESXi host
      ansible.builtin.debug:
        msg:
          - The {{ item }} esxi_hostname contains {{ vm_info.virtual_machines | selectattr('esxi_hostname', 'equalto', item) | length }} VMs
      loop: "{{ esxi_hostnames }}"

    - name: get list of VMSANVOL storage nodes
      ansible.builtin.set_fact:
        general_purpose_storage_nodes: "{{ storage_nodes | select('search', '05TB') }}"

    - name: View storage node list
      ansible.builtin.debug:
        var: storage_nodes

    - name: View GP storage node list
      ansible.builtin.debug:
        var: general_purpose_storage_nodes

    - name: View storage info
      ansible.builtin.debug:
        var: storage_info

    - name: Generate list of free space on all storage nodes
      ansible.builtin.debug:
        msg: The {{ item.0 }} node has {{ item.1 }} free space
        with_together:
          - "{{ storage_info.datastores | map(attribute='Name') | list }}"
          - "{{ storage_info.datastores | map(attribute='freeSpace') | list }}"

    - name: Generate sorted list of free space on all storage nodes
      ansible.builtin.debug:
        msg: The {{ item.0 }} node has {{ item.1 }} free space
        with_together:
          - "{{ storage_info.datastores | map(attribute='Name') | list }}"
          - "{{ storage_info.datastores | map(attribute='freeSpace') | list | sort }}"

    # - name: View free space on our general purpose storage nodes
    #   ansible.builtin.debug:
    #     var: "{{ storage_info.datastores | selectattr('info.name', 'equalto', item) | map(attribute='info.freeSpace') | sum | human_readable }}"
