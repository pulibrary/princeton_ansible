---
#  This playbook will delete a VM and replace it. This is the only warning you will get. Running this playbook has destructive consequences
#     
- name: replace a host on VSphere
  hosts: localhost
  remote_user: pulsys
  become: true
  vars_files:
    - ../../group_vars/vsphere/vault.yml
    - ../../group_vars/vsphere/{{ runtime_env | default('staging') }}.yml

  tasks:

    - name: Gather MAC address of VM to replace
      community.vmware.vmware_vm_info:
        hostname: '{{ vcenter_hostname }}'
        username: '{{ vcenter_username }}'
        password: '{{ vcenter_password }}'
        validate_certs: false
        vm_name: "{{ vm_to_replace }}"
      register: vm_info

    - name: Print out deleted VM information
      ansible.builtin.debug:
        msg: You will be removing this VM {{ vm_info }}

    - name: Set powerstate of a virtual machine to poweroff by using UUID
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ vcenter_datacenter }}"
        cluster: "{{ vcenter_cluster }}"
        uuid: "{{ vm_info.virtual_machines[0].uuid }}"
        state: poweredoff

    # this will be a manual step for now 
    #- name: Remove virtual machine by using UUID
    #  community.vmware.vmware_guest:
    #    hostname: "{{ vcenter_hostname }}"
    #    username: "{{ vcenter_username }}"
    #    password: "{{ vcenter_password }}"
    #    validate_certs: false
    #    datacenter: "{{ vcenter_datacenter }}"
    #    cluster: "{{ vcenter_cluster }}"
    #    uuid: "{{ vm_info.virtual_machines[0].uuid }}"
    #    state: absent

    - name: Create a virtual machine from a template
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ vcenter_datacenter }}"
        cluster: "{{ vcenter_cluster }}"
        folder: /{{ vm_folder | default('dev-rebootable-vms') }}
        name: "{{ replacement_vm }}_1"
        state: poweredon
        template: "{{ vm_template | default('template_jammy_spring_2024')}}"
        disk:
        - size_gb: 30
          type: thin
          datastore: "{{ vm_info.datastore_url }}"
    # Add another disk from an existing VMDK
        hardware:
          memory_mb: "{{ vm_memory | default('8192') }}"
          num_cpus: "{{ vm_cpus | default('2') }}"
          num_cpu_cores_per_socket: "{{ vm_cpu_cores | default('1') }}"
          scsi: paravirtual
          version: 7.1 # Hardware version of virtual machine
          boot_firmware: "efi"
        cdrom:
          - controller_number: 0
            unit_number: 0
            state: present
        networks:
        - name: "{{ vm_network | default('Virtual Machine Network')}}"
          mac: "{{ vm_info.[0].mac_address }}"
        wait_for_ip_address: true

  post_tasks:
      - name: send information to slack
        ansible.builtin.include_tasks:
          file: slack_tasks_end_of_playbook.yml
