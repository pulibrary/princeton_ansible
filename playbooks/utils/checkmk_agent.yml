---
# To run the playbook locally:
# you must have the checkmk.general collection installed in your pipenv
# to install it: 'ansible-galaxy collection install checkmk.general'
# you must limit the playbook to a group or host
# you must pass at least two variables: checkmk_folder and checkmk_service
# Here is an example command:
# ansible-playbook playbooks/utils/checkmk_agent.yml --limit=orcid-staging -e checkmk_folder=linux/rdss -e checkmk_service=staging
# checkmk folder names must be all lower case and should not begin with a slash
# checkmk site names are: 'production', 'staging', 'aws', and 'gce'
#
# by default this playbook runs against inventory from the staging environment
# to run against a production group or host, pass '-e runtime_env=production'
- name: Install CheckMk agent on host
  hosts: "{{ runtime_env | default ('staging') }}"
  remote_user: pulsys
  become: true

  vars_files:
    - ../../group_vars/all/vault.yml
    - ../../group_vars/checkmk/shared.yml
    # the checkmk_service is the checkmk sitename
    # options are production, staging, aws, gcp
    - ../../group_vars/checkmk/{{ checkmk_service | default('staging') }}.yml
    - ../../group_vars/checkmk/vault.yml

  vars:
    checkmk_agent_host_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"

  pre_tasks:
    - name: stop playbook if you didn't use --limit
      ansible.builtin.fail:
        msg: "you must use -l or --limit"
      when: ansible_limit is not defined

    - name: Set stripped agent hostname (only content before the first .) as fact
      ansible.builtin.set_fact:
        checkmk_agent_host_name: "{{ inventory_hostname | regex_search('^[^.]*') }}"

  roles:
    - role: checkmk.general.agent
